# -*- coding: utf-8 -*-
# code generated by Prisma. DO NOT EDIT.
# pyright: reportUnusedImport=false
# fmt: off

# global imports for type checking
from builtins import bool as _bool
from builtins import int as _int
from builtins import float as _float
from builtins import str as _str
import sys
import decimal
import datetime
from typing import (
    TYPE_CHECKING,
    Optional,
    Iterable,
    Iterator,
    Sequence,
    Callable,
    ClassVar,
    NoReturn,
    TypeVar,
    Generic,
    Mapping,
    Tuple,
    Union,
    List,
    Dict,
    Type,
    Any,
    Set,
    overload,
    cast,
)
from typing_extensions import TypedDict, Literal


LiteralString = str
# -- template types.py.jinja --
from typing import TypeVar

import httpx
from . import _types
from .utils import _NoneType



# TODO: filters with aggregates should have their own recursive fields
# TODO: cleanup whitespace control
# TODO: add an argument to signify that the last iteration should be skipped


SortMode = _types.SortMode
SortOrder = _types.SortOrder

MetricsFormat = _types.MetricsFormat

DatasourceOverride = _types.DatasourceOverride
HttpConfig = _types.HttpConfig


# types that can be serialized to json by our query builder
Serializable = Union[
    None,
    bool,
    float,
    int,
    str,
    datetime.datetime,
    List[Any],
    Dict[None, Any],
    Dict[bool, Any],
    Dict[float, Any],
    Dict[int, Any],
    Dict[str, Any],
]


    

StringFilter = TypedDict(
    'StringFilter',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive1'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive1 = TypedDict(
    'StringFilterRecursive1',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive2'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive2 = TypedDict(
    'StringFilterRecursive2',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive3'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive3 = TypedDict(
    'StringFilterRecursive3',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
        'not': Union[str, 'StringFilterRecursive4'],
        'mode': SortMode,
    },
    total=False,
)


StringFilterRecursive4 = TypedDict(
    'StringFilterRecursive4',
    {
        'equals': str,
        'not_in': List[str],
        'lt': str,
        'lte': str,
        'gt': str,
        'gte': str,
        'contains': str,
        'startswith': str,
        'endswith': str,
        'in': List[str],
                'mode': SortMode,
    },
    total=False,
)


class StringWithAggregatesFilter(StringFilter, total=False):
    _max: 'StringFilter'
    _min: 'StringFilter'
    _sum: 'StringFilter'
    _avg: 'StringFilter'
    _count: 'IntFilter'


    

DateTimeFilter = TypedDict(
    'DateTimeFilter',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive1'],
    },
    total=False,
)


DateTimeFilterRecursive1 = TypedDict(
    'DateTimeFilterRecursive1',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive2'],
    },
    total=False,
)


DateTimeFilterRecursive2 = TypedDict(
    'DateTimeFilterRecursive2',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive3'],
    },
    total=False,
)


DateTimeFilterRecursive3 = TypedDict(
    'DateTimeFilterRecursive3',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
        'not': Union[datetime.datetime, 'DateTimeFilterRecursive4'],
    },
    total=False,
)


DateTimeFilterRecursive4 = TypedDict(
    'DateTimeFilterRecursive4',
    {
        'equals': datetime.datetime,
        'not_in': List[datetime.datetime],
        'lt': datetime.datetime,
        'lte': datetime.datetime,
        'gt': datetime.datetime,
        'gte': datetime.datetime,
        'in': List[datetime.datetime],
            },
    total=False,
)


class DateTimeWithAggregatesFilter(DateTimeFilter, total=False):
    _max: 'DateTimeFilter'
    _min: 'DateTimeFilter'
    _sum: 'DateTimeFilter'
    _avg: 'DateTimeFilter'
    _count: 'IntFilter'


    

BooleanFilter = TypedDict(
    'BooleanFilter',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive1'],
    },
    total=False,
)


BooleanFilterRecursive1 = TypedDict(
    'BooleanFilterRecursive1',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive2'],
    },
    total=False,
)


BooleanFilterRecursive2 = TypedDict(
    'BooleanFilterRecursive2',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive3'],
    },
    total=False,
)


BooleanFilterRecursive3 = TypedDict(
    'BooleanFilterRecursive3',
    {
        'equals': bool,
        'not': Union[bool, 'BooleanFilterRecursive4'],
    },
    total=False,
)


BooleanFilterRecursive4 = TypedDict(
    'BooleanFilterRecursive4',
    {
        'equals': bool,
            },
    total=False,
)


class BooleanWithAggregatesFilter(BooleanFilter, total=False):
    _max: 'BooleanFilter'
    _min: 'BooleanFilter'
    _sum: 'BooleanFilter'
    _avg: 'BooleanFilter'
    _count: 'IntFilter'


    

IntFilter = TypedDict(
    'IntFilter',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive1'],
    },
    total=False,
)


IntFilterRecursive1 = TypedDict(
    'IntFilterRecursive1',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive2'],
    },
    total=False,
)


IntFilterRecursive2 = TypedDict(
    'IntFilterRecursive2',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive3'],
    },
    total=False,
)


IntFilterRecursive3 = TypedDict(
    'IntFilterRecursive3',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
        'not': Union[int, 'IntFilterRecursive4'],
    },
    total=False,
)


IntFilterRecursive4 = TypedDict(
    'IntFilterRecursive4',
    {
        'equals': int,
        'not_in': List[int],
        'lt': int,
        'lte': int,
        'gt': int,
        'gte': int,
        'in': List[int],
            },
    total=False,
)


class IntWithAggregatesFilter(IntFilter, total=False):
    _max: 'IntFilter'
    _min: 'IntFilter'
    _sum: 'IntFilter'
    _avg: 'IntFilter'
    _count: 'IntFilter'


BigIntFilter = IntFilter
BigIntWithAggregatesFilter = IntWithAggregatesFilter
    

FloatFilter = TypedDict(
    'FloatFilter',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive1'],
    },
    total=False,
)


FloatFilterRecursive1 = TypedDict(
    'FloatFilterRecursive1',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive2'],
    },
    total=False,
)


FloatFilterRecursive2 = TypedDict(
    'FloatFilterRecursive2',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive3'],
    },
    total=False,
)


FloatFilterRecursive3 = TypedDict(
    'FloatFilterRecursive3',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
        'not': Union[float, 'FloatFilterRecursive4'],
    },
    total=False,
)


FloatFilterRecursive4 = TypedDict(
    'FloatFilterRecursive4',
    {
        'equals': float,
        'not_in': List[float],
        'lt': float,
        'lte': float,
        'gt': float,
        'gte': float,
        'in': List[float],
            },
    total=False,
)


class FloatWithAggregatesFilter(FloatFilter, total=False):
    _max: 'FloatFilter'
    _min: 'FloatFilter'
    _sum: 'FloatFilter'
    _avg: 'FloatFilter'
    _count: 'IntFilter'


    

BytesFilter = TypedDict(
    'BytesFilter',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive1'],
    },
    total=False,
)


BytesFilterRecursive1 = TypedDict(
    'BytesFilterRecursive1',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive2'],
    },
    total=False,
)


BytesFilterRecursive2 = TypedDict(
    'BytesFilterRecursive2',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive3'],
    },
    total=False,
)


BytesFilterRecursive3 = TypedDict(
    'BytesFilterRecursive3',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
        'not': Union['fields.Base64', 'BytesFilterRecursive4'],
    },
    total=False,
)


BytesFilterRecursive4 = TypedDict(
    'BytesFilterRecursive4',
    {
        'equals': 'fields.Base64',
        'in': List['fields.Base64'],
        'not_in': List['fields.Base64'],
            },
    total=False,
)


class BytesWithAggregatesFilter(BytesFilter, total=False):
    _max: 'BytesFilter'
    _min: 'BytesFilter'
    _sum: 'BytesFilter'
    _avg: 'BytesFilter'
    _count: 'IntFilter'


# TODO: preview feature for improving JSON filtering
JsonFilter = TypedDict(
    'JsonFilter',
    {
        'equals': 'fields.Json',
        'not': 'fields.Json',
    },
    total=False,
)


class JsonWithAggregatesFilter(JsonFilter, total=False):
    _max: 'JsonFilter'
    _min: 'JsonFilter'
    _sum: 'JsonFilter'
    _avg: 'JsonFilter'
    _count: 'IntFilter'


    

DecimalFilter = TypedDict(
    'DecimalFilter',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive1'],
    },
    total=False,
)


DecimalFilterRecursive1 = TypedDict(
    'DecimalFilterRecursive1',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive2'],
    },
    total=False,
)


DecimalFilterRecursive2 = TypedDict(
    'DecimalFilterRecursive2',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive3'],
    },
    total=False,
)


DecimalFilterRecursive3 = TypedDict(
    'DecimalFilterRecursive3',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
        'not': Union[decimal.Decimal, 'DecimalFilterRecursive4'],
    },
    total=False,
)


DecimalFilterRecursive4 = TypedDict(
    'DecimalFilterRecursive4',
    {
        'equals': decimal.Decimal,
        'not_in': List[decimal.Decimal],
        'lt': decimal.Decimal,
        'lte': decimal.Decimal,
        'gt': decimal.Decimal,
        'gte': decimal.Decimal,
        'in': List[decimal.Decimal],
            },
    total=False,
)


class DecimalWithAggregatesFilter(StringFilter, total=False):
    _max: 'DecimalFilter'
    _min: 'DecimalFilter'
    _sum: 'DecimalFilter'
    _avg: 'DecimalFilter'
    _count: 'IntFilter'


class _FloatSetInput(TypedDict):
    set: float


class _FloatDivideInput(TypedDict):
    divide: float


class _FloatMultiplyInput(TypedDict):
    multiply: float


class _FloatIncrementInput(TypedDict):
    increment: float


class _FloatDecrementInput(TypedDict):
    decrement: float


class _IntSetInput(TypedDict):
    set: int


class _IntDivideInput(TypedDict):
    divide: int


class _IntMultiplyInput(TypedDict):
    multiply: int


class _IntIncrementInput(TypedDict):
    increment: int


class _IntDecrementInput(TypedDict):
    decrement: int


AtomicFloatInput = Union[
    _FloatSetInput,
    _FloatDivideInput,
    _FloatMultiplyInput,
    _FloatIncrementInput,
    _FloatDecrementInput,
]
AtomicIntInput = Union[
    _IntSetInput,
    _IntDivideInput,
    _IntMultiplyInput,
    _IntIncrementInput,
    _IntDecrementInput,
]
AtomicBigIntInput = AtomicIntInput

class _StringListFilterEqualsInput(TypedDict):
    equals: Optional[List[_str]]


class _StringListFilterHasInput(TypedDict):
    has: _str


class _StringListFilterHasEveryInput(TypedDict):
    has_every: List[_str]


class _StringListFilterHasSomeInput(TypedDict):
    has_some: List[_str]


class _StringListFilterIsEmptyInput(TypedDict):
    is_empty: bool


StringListFilter = Union[
    _StringListFilterHasInput,
    _StringListFilterEqualsInput,
    _StringListFilterHasSomeInput,
    _StringListFilterIsEmptyInput,
    _StringListFilterHasEveryInput,
]


class _StringListUpdateSet(TypedDict):
    set: List[_str]


class _StringListUpdatePush(TypedDict):
    push: List[_str]


StringListUpdate = Union[
    List[_str],
    _StringListUpdateSet,
    _StringListUpdatePush,
]

class _BytesListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Base64']]


class _BytesListFilterHasInput(TypedDict):
    has: 'fields.Base64'


class _BytesListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Base64']


class _BytesListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Base64']


class _BytesListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BytesListFilter = Union[
    _BytesListFilterHasInput,
    _BytesListFilterEqualsInput,
    _BytesListFilterHasSomeInput,
    _BytesListFilterIsEmptyInput,
    _BytesListFilterHasEveryInput,
]


class _BytesListUpdateSet(TypedDict):
    set: List['fields.Base64']


class _BytesListUpdatePush(TypedDict):
    push: List['fields.Base64']


BytesListUpdate = Union[
    List['fields.Base64'],
    _BytesListUpdateSet,
    _BytesListUpdatePush,
]

class _DateTimeListFilterEqualsInput(TypedDict):
    equals: Optional[List[datetime.datetime]]


class _DateTimeListFilterHasInput(TypedDict):
    has: datetime.datetime


class _DateTimeListFilterHasEveryInput(TypedDict):
    has_every: List[datetime.datetime]


class _DateTimeListFilterHasSomeInput(TypedDict):
    has_some: List[datetime.datetime]


class _DateTimeListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DateTimeListFilter = Union[
    _DateTimeListFilterHasInput,
    _DateTimeListFilterEqualsInput,
    _DateTimeListFilterHasSomeInput,
    _DateTimeListFilterIsEmptyInput,
    _DateTimeListFilterHasEveryInput,
]


class _DateTimeListUpdateSet(TypedDict):
    set: List[datetime.datetime]


class _DateTimeListUpdatePush(TypedDict):
    push: List[datetime.datetime]


DateTimeListUpdate = Union[
    List[datetime.datetime],
    _DateTimeListUpdateSet,
    _DateTimeListUpdatePush,
]

class _BooleanListFilterEqualsInput(TypedDict):
    equals: Optional[List[_bool]]


class _BooleanListFilterHasInput(TypedDict):
    has: _bool


class _BooleanListFilterHasEveryInput(TypedDict):
    has_every: List[_bool]


class _BooleanListFilterHasSomeInput(TypedDict):
    has_some: List[_bool]


class _BooleanListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BooleanListFilter = Union[
    _BooleanListFilterHasInput,
    _BooleanListFilterEqualsInput,
    _BooleanListFilterHasSomeInput,
    _BooleanListFilterIsEmptyInput,
    _BooleanListFilterHasEveryInput,
]


class _BooleanListUpdateSet(TypedDict):
    set: List[_bool]


class _BooleanListUpdatePush(TypedDict):
    push: List[_bool]


BooleanListUpdate = Union[
    List[_bool],
    _BooleanListUpdateSet,
    _BooleanListUpdatePush,
]

class _IntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _IntListFilterHasInput(TypedDict):
    has: _int


class _IntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _IntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _IntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


IntListFilter = Union[
    _IntListFilterHasInput,
    _IntListFilterEqualsInput,
    _IntListFilterHasSomeInput,
    _IntListFilterIsEmptyInput,
    _IntListFilterHasEveryInput,
]


class _IntListUpdateSet(TypedDict):
    set: List[_int]


class _IntListUpdatePush(TypedDict):
    push: List[_int]


IntListUpdate = Union[
    List[_int],
    _IntListUpdateSet,
    _IntListUpdatePush,
]

class _BigIntListFilterEqualsInput(TypedDict):
    equals: Optional[List[_int]]


class _BigIntListFilterHasInput(TypedDict):
    has: _int


class _BigIntListFilterHasEveryInput(TypedDict):
    has_every: List[_int]


class _BigIntListFilterHasSomeInput(TypedDict):
    has_some: List[_int]


class _BigIntListFilterIsEmptyInput(TypedDict):
    is_empty: bool


BigIntListFilter = Union[
    _BigIntListFilterHasInput,
    _BigIntListFilterEqualsInput,
    _BigIntListFilterHasSomeInput,
    _BigIntListFilterIsEmptyInput,
    _BigIntListFilterHasEveryInput,
]


class _BigIntListUpdateSet(TypedDict):
    set: List[_int]


class _BigIntListUpdatePush(TypedDict):
    push: List[_int]


BigIntListUpdate = Union[
    List[_int],
    _BigIntListUpdateSet,
    _BigIntListUpdatePush,
]

class _FloatListFilterEqualsInput(TypedDict):
    equals: Optional[List[_float]]


class _FloatListFilterHasInput(TypedDict):
    has: _float


class _FloatListFilterHasEveryInput(TypedDict):
    has_every: List[_float]


class _FloatListFilterHasSomeInput(TypedDict):
    has_some: List[_float]


class _FloatListFilterIsEmptyInput(TypedDict):
    is_empty: bool


FloatListFilter = Union[
    _FloatListFilterHasInput,
    _FloatListFilterEqualsInput,
    _FloatListFilterHasSomeInput,
    _FloatListFilterIsEmptyInput,
    _FloatListFilterHasEveryInput,
]


class _FloatListUpdateSet(TypedDict):
    set: List[_float]


class _FloatListUpdatePush(TypedDict):
    push: List[_float]


FloatListUpdate = Union[
    List[_float],
    _FloatListUpdateSet,
    _FloatListUpdatePush,
]

class _JsonListFilterEqualsInput(TypedDict):
    equals: Optional[List['fields.Json']]


class _JsonListFilterHasInput(TypedDict):
    has: 'fields.Json'


class _JsonListFilterHasEveryInput(TypedDict):
    has_every: List['fields.Json']


class _JsonListFilterHasSomeInput(TypedDict):
    has_some: List['fields.Json']


class _JsonListFilterIsEmptyInput(TypedDict):
    is_empty: bool


JsonListFilter = Union[
    _JsonListFilterHasInput,
    _JsonListFilterEqualsInput,
    _JsonListFilterHasSomeInput,
    _JsonListFilterIsEmptyInput,
    _JsonListFilterHasEveryInput,
]


class _JsonListUpdateSet(TypedDict):
    set: List['fields.Json']


class _JsonListUpdatePush(TypedDict):
    push: List['fields.Json']


JsonListUpdate = Union[
    List['fields.Json'],
    _JsonListUpdateSet,
    _JsonListUpdatePush,
]

class _DecimalListFilterEqualsInput(TypedDict):
    equals: Optional[List[decimal.Decimal]]


class _DecimalListFilterHasInput(TypedDict):
    has: decimal.Decimal


class _DecimalListFilterHasEveryInput(TypedDict):
    has_every: List[decimal.Decimal]


class _DecimalListFilterHasSomeInput(TypedDict):
    has_some: List[decimal.Decimal]


class _DecimalListFilterIsEmptyInput(TypedDict):
    is_empty: bool


DecimalListFilter = Union[
    _DecimalListFilterHasInput,
    _DecimalListFilterEqualsInput,
    _DecimalListFilterHasSomeInput,
    _DecimalListFilterIsEmptyInput,
    _DecimalListFilterHasEveryInput,
]


class _DecimalListUpdateSet(TypedDict):
    set: List[decimal.Decimal]


class _DecimalListUpdatePush(TypedDict):
    push: List[decimal.Decimal]


DecimalListUpdate = Union[
    List[decimal.Decimal],
    _DecimalListUpdateSet,
    _DecimalListUpdatePush,
]


# SolarHub types

class SolarHubOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the SolarHub create method"""
    what_three_word_location: Optional[_str]
    solar_capacity_kw: Optional[_int]
    country: Optional[_str]
    latitude: Optional[_float]
    longitude: Optional[_float]
    users: 'UserCreateManyNestedWithoutRelationsInput'
    batteries: 'BEPPPBatteryCreateManyNestedWithoutRelationsInput'
    pue_items: 'ProductiveUseEquipmentCreateManyNestedWithoutRelationsInput'


class SolarHubCreateInput(SolarHubOptionalCreateInput):
    """Required arguments to the SolarHub create method"""
    hub_id: _int


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class SolarHubOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the SolarHub create method, without relations"""
    what_three_word_location: Optional[_str]
    solar_capacity_kw: Optional[_int]
    country: Optional[_str]
    latitude: Optional[_float]
    longitude: Optional[_float]


class SolarHubCreateWithoutRelationsInput(SolarHubOptionalCreateWithoutRelationsInput):
    """Required arguments to the SolarHub create method, without relations"""
    hub_id: _int


class SolarHubCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'SolarHubCreateWithoutRelationsInput'
    connect: 'SolarHubWhereUniqueInput'


class SolarHubCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['SolarHubCreateWithoutRelationsInput', List['SolarHubCreateWithoutRelationsInput']]
    connect: Union['SolarHubWhereUniqueInput', List['SolarHubWhereUniqueInput']]


_SolarHubWhereUnique_hub_id_Input = TypedDict(
    '_SolarHubWhereUnique_hub_id_Input',
    {
        'hub_id': '_int',
    },
    total=True
)

SolarHubWhereUniqueInput = _SolarHubWhereUnique_hub_id_Input


class SolarHubUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    hub_id: Union[AtomicBigIntInput, _int]
    what_three_word_location: Optional[_str]
    solar_capacity_kw: Optional[Union[AtomicBigIntInput, _int]]
    country: Optional[_str]
    latitude: Optional[Union[AtomicFloatInput, _float]]
    longitude: Optional[Union[AtomicFloatInput, _float]]
    users: 'UserUpdateManyWithoutRelationsInput'
    batteries: 'BEPPPBatteryUpdateManyWithoutRelationsInput'
    pue_items: 'ProductiveUseEquipmentUpdateManyWithoutRelationsInput'


class SolarHubUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    hub_id: Union[AtomicBigIntInput, _int]
    what_three_word_location: Optional[_str]
    solar_capacity_kw: Optional[Union[AtomicBigIntInput, _int]]
    country: Optional[_str]
    latitude: Optional[Union[AtomicFloatInput, _float]]
    longitude: Optional[Union[AtomicFloatInput, _float]]


class SolarHubUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['SolarHubCreateWithoutRelationsInput']
    connect: List['SolarHubWhereUniqueInput']
    set: List['SolarHubWhereUniqueInput']
    disconnect: List['SolarHubWhereUniqueInput']
    delete: List['SolarHubWhereUniqueInput']

    # TODO
    # update: List['SolarHubUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['SolarHubUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['SolarHubScalarWhereInput']
    # upsert: List['SolarHubUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['SolarHubCreateOrConnectWithoutRelationsInput']


class SolarHubUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'SolarHubCreateWithoutRelationsInput'
    connect: 'SolarHubWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'SolarHubUpdateInput'
    # upsert: 'SolarHubUpsertWithoutRelationsInput'
    # connectOrCreate: 'SolarHubCreateOrConnectWithoutRelationsInput'


class SolarHubUpsertInput(TypedDict):
    create: 'SolarHubCreateInput'
    update: 'SolarHubUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_SolarHub_hub_id_OrderByInput = TypedDict(
    '_SolarHub_hub_id_OrderByInput',
    {
        'hub_id': 'SortOrder',
    },
    total=True
)

_SolarHub_what_three_word_location_OrderByInput = TypedDict(
    '_SolarHub_what_three_word_location_OrderByInput',
    {
        'what_three_word_location': 'SortOrder',
    },
    total=True
)

_SolarHub_solar_capacity_kw_OrderByInput = TypedDict(
    '_SolarHub_solar_capacity_kw_OrderByInput',
    {
        'solar_capacity_kw': 'SortOrder',
    },
    total=True
)

_SolarHub_country_OrderByInput = TypedDict(
    '_SolarHub_country_OrderByInput',
    {
        'country': 'SortOrder',
    },
    total=True
)

_SolarHub_latitude_OrderByInput = TypedDict(
    '_SolarHub_latitude_OrderByInput',
    {
        'latitude': 'SortOrder',
    },
    total=True
)

_SolarHub_longitude_OrderByInput = TypedDict(
    '_SolarHub_longitude_OrderByInput',
    {
        'longitude': 'SortOrder',
    },
    total=True
)

SolarHubOrderByInput = Union[
    '_SolarHub_hub_id_OrderByInput',
    '_SolarHub_what_three_word_location_OrderByInput',
    '_SolarHub_solar_capacity_kw_OrderByInput',
    '_SolarHub_country_OrderByInput',
    '_SolarHub_latitude_OrderByInput',
    '_SolarHub_longitude_OrderByInput',
]



# recursive SolarHub types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

SolarHubRelationFilter = TypedDict(
    'SolarHubRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class SolarHubListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class SolarHubInclude(TypedDict, total=False):
    """SolarHub relational arguments"""
    users: Union[bool, 'FindManyUserArgsFromSolarHub']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromSolarHub']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromSolarHub']


    

class SolarHubIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    users: Union[bool, 'FindManyUserArgsFromSolarHubRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromSolarHubRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromSolarHubRecursive1']


class SolarHubIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    users: Union[bool, 'FindManyUserArgsFromSolarHubRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromSolarHubRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromSolarHubRecursive2']


class SolarHubIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    users: Union[bool, 'FindManyUserArgsFromSolarHubRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromSolarHubRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromSolarHubRecursive3']


class SolarHubIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    users: Union[bool, 'FindManyUserArgsFromSolarHubRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromSolarHubRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromSolarHubRecursive4']


class SolarHubIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class SolarHubArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManySolarHubArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromSolarHubRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromSolarHubRecursive1']


class UserIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromSolarHubRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromSolarHubRecursive2']


class UserIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromSolarHubRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromSolarHubRecursive3']


class UserIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromSolarHubRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromSolarHubRecursive4']


class UserIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class UserArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyUserArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromSolarHubRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromSolarHubRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromSolarHubRecursive1']


class NoteIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromSolarHubRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromSolarHubRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromSolarHubRecursive2']


class NoteIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromSolarHubRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromSolarHubRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromSolarHubRecursive3']


class NoteIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromSolarHubRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromSolarHubRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromSolarHubRecursive4']


class NoteIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class NoteArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyNoteArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive1']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive1']


class BEPPPBattery_NotesIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive2']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive2']


class BEPPPBattery_NotesIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive3']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive3']


class BEPPPBattery_NotesIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive4']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive4']


class BEPPPBattery_NotesIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class BEPPPBattery_NotesArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyBEPPPBattery_NotesArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    rental: Union[bool, 'RentalArgsFromSolarHubRecursive1']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive1']


class Rental_NotesIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    rental: Union[bool, 'RentalArgsFromSolarHubRecursive2']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive2']


class Rental_NotesIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    rental: Union[bool, 'RentalArgsFromSolarHubRecursive3']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive3']


class Rental_NotesIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    rental: Union[bool, 'RentalArgsFromSolarHubRecursive4']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive4']


class Rental_NotesIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class Rental_NotesArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyRental_NotesArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromSolarHubRecursive1']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive1']


class PUE_NotesIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromSolarHubRecursive2']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive2']


class PUE_NotesIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromSolarHubRecursive3']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive3']


class PUE_NotesIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromSolarHubRecursive4']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive4']


class PUE_NotesIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class PUE_NotesArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyPUE_NotesArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue_rental: Union[bool, 'PUERentalArgsFromSolarHubRecursive1']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive1']


class PUERental_NotesIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue_rental: Union[bool, 'PUERentalArgsFromSolarHubRecursive2']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive2']


class PUERental_NotesIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue_rental: Union[bool, 'PUERentalArgsFromSolarHubRecursive3']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive3']


class PUERental_NotesIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue_rental: Union[bool, 'PUERentalArgsFromSolarHubRecursive4']
    note: Union[bool, 'NoteArgsFromSolarHubRecursive4']


class PUERental_NotesIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class PUERental_NotesArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyPUERental_NotesArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromSolarHubRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromSolarHubRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive1']


class BEPPPBatteryIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromSolarHubRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromSolarHubRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive2']


class BEPPPBatteryIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromSolarHubRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromSolarHubRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive3']


class BEPPPBatteryIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromSolarHubRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromSolarHubRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromSolarHubRecursive4']


class BEPPPBatteryIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class BEPPPBatteryArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyBEPPPBatteryArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive1']


class LiveDataIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive2']


class LiveDataIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive3']


class LiveDataIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive4']


class LiveDataIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class LiveDataArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyLiveDataArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive1']
    user: Union[bool, 'UserArgsFromSolarHubRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromSolarHubRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromSolarHubRecursive1']


class RentalIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive2']
    user: Union[bool, 'UserArgsFromSolarHubRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromSolarHubRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromSolarHubRecursive2']


class RentalIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive3']
    user: Union[bool, 'UserArgsFromSolarHubRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromSolarHubRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromSolarHubRecursive3']


class RentalIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery: Union[bool, 'BEPPPBatteryArgsFromSolarHubRecursive4']
    user: Union[bool, 'UserArgsFromSolarHubRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromSolarHubRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromSolarHubRecursive4']


class RentalIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class RentalArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyRentalArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromSolarHubRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromSolarHubRecursive1']


class ProductiveUseEquipmentIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromSolarHubRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromSolarHubRecursive2']


class ProductiveUseEquipmentIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromSolarHubRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromSolarHubRecursive3']


class ProductiveUseEquipmentIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    hub: Union[bool, 'SolarHubArgsFromSolarHubRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromSolarHubRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromSolarHubRecursive4']


class ProductiveUseEquipmentIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class ProductiveUseEquipmentArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyProductiveUseEquipmentArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromSolarHubRecursive1']
    user: Union[bool, 'UserArgsFromSolarHubRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromSolarHubRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromSolarHubRecursive1']


class PUERentalIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromSolarHubRecursive2']
    user: Union[bool, 'UserArgsFromSolarHubRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromSolarHubRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromSolarHubRecursive2']


class PUERentalIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromSolarHubRecursive3']
    user: Union[bool, 'UserArgsFromSolarHubRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromSolarHubRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromSolarHubRecursive3']


class PUERentalIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromSolarHubRecursive4']
    user: Union[bool, 'UserArgsFromSolarHubRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromSolarHubRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromSolarHubRecursive4']


class PUERentalIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class PUERentalArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyPUERentalArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromSolarHub(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery_rental: Union[bool, 'RentalArgsFromSolarHubRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromSolarHubRecursive1']


class BatteryPUERentalIncludeFromSolarHubRecursive1(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery_rental: Union[bool, 'RentalArgsFromSolarHubRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromSolarHubRecursive2']


class BatteryPUERentalIncludeFromSolarHubRecursive2(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery_rental: Union[bool, 'RentalArgsFromSolarHubRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromSolarHubRecursive3']


class BatteryPUERentalIncludeFromSolarHubRecursive3(TypedDict, total=False):
    """Relational arguments for SolarHub"""
    battery_rental: Union[bool, 'RentalArgsFromSolarHubRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromSolarHubRecursive4']


class BatteryPUERentalIncludeFromSolarHubRecursive4(TypedDict, total=False):
    """Relational arguments for SolarHub"""

    

class BatteryPUERentalArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    
    

class FindManyBatteryPUERentalArgsFromSolarHub(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromSolarHubRecursive1(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromSolarHubRecursive2(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromSolarHubRecursive3(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromSolarHubRecursive4(TypedDict, total=False):
    """Arguments for SolarHub"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManySolarHubArgs = FindManySolarHubArgsFromSolarHub
FindFirstSolarHubArgs = FindManySolarHubArgsFromSolarHub


    

class SolarHubWhereInput(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntFilter']
    what_three_word_location: Union[None, _str, 'types.StringFilter']
    solar_capacity_kw: Union[None, _int, 'types.BigIntFilter']
    country: Union[None, _str, 'types.StringFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    users: 'UserListRelationFilter'
    batteries: 'BEPPPBatteryListRelationFilter'
    pue_items: 'ProductiveUseEquipmentListRelationFilter'

    # should be noted that AND and NOT should be Union['SolarHubWhereInputRecursive1', List['SolarHubWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['SolarHubWhereInputRecursive1']
    OR: List['SolarHubWhereInputRecursive1']
    NOT: List['SolarHubWhereInputRecursive1']


class SolarHubWhereInputRecursive1(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntFilter']
    what_three_word_location: Union[None, _str, 'types.StringFilter']
    solar_capacity_kw: Union[None, _int, 'types.BigIntFilter']
    country: Union[None, _str, 'types.StringFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    users: 'UserListRelationFilter'
    batteries: 'BEPPPBatteryListRelationFilter'
    pue_items: 'ProductiveUseEquipmentListRelationFilter'

    # should be noted that AND and NOT should be Union['SolarHubWhereInputRecursive2', List['SolarHubWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['SolarHubWhereInputRecursive2']
    OR: List['SolarHubWhereInputRecursive2']
    NOT: List['SolarHubWhereInputRecursive2']


class SolarHubWhereInputRecursive2(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntFilter']
    what_three_word_location: Union[None, _str, 'types.StringFilter']
    solar_capacity_kw: Union[None, _int, 'types.BigIntFilter']
    country: Union[None, _str, 'types.StringFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    users: 'UserListRelationFilter'
    batteries: 'BEPPPBatteryListRelationFilter'
    pue_items: 'ProductiveUseEquipmentListRelationFilter'

    # should be noted that AND and NOT should be Union['SolarHubWhereInputRecursive3', List['SolarHubWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['SolarHubWhereInputRecursive3']
    OR: List['SolarHubWhereInputRecursive3']
    NOT: List['SolarHubWhereInputRecursive3']


class SolarHubWhereInputRecursive3(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntFilter']
    what_three_word_location: Union[None, _str, 'types.StringFilter']
    solar_capacity_kw: Union[None, _int, 'types.BigIntFilter']
    country: Union[None, _str, 'types.StringFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    users: 'UserListRelationFilter'
    batteries: 'BEPPPBatteryListRelationFilter'
    pue_items: 'ProductiveUseEquipmentListRelationFilter'

    # should be noted that AND and NOT should be Union['SolarHubWhereInputRecursive4', List['SolarHubWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['SolarHubWhereInputRecursive4']
    OR: List['SolarHubWhereInputRecursive4']
    NOT: List['SolarHubWhereInputRecursive4']


class SolarHubWhereInputRecursive4(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntFilter']
    what_three_word_location: Union[None, _str, 'types.StringFilter']
    solar_capacity_kw: Union[None, _int, 'types.BigIntFilter']
    country: Union[None, _str, 'types.StringFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    users: 'UserListRelationFilter'
    batteries: 'BEPPPBatteryListRelationFilter'
    pue_items: 'ProductiveUseEquipmentListRelationFilter'



# aggregate SolarHub types


    

class SolarHubScalarWhereWithAggregatesInput(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    what_three_word_location: Union[_str, 'types.StringWithAggregatesFilter']
    solar_capacity_kw: Union[_int, 'types.BigIntWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']

    AND: List['SolarHubScalarWhereWithAggregatesInputRecursive1']
    OR: List['SolarHubScalarWhereWithAggregatesInputRecursive1']
    NOT: List['SolarHubScalarWhereWithAggregatesInputRecursive1']


class SolarHubScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    what_three_word_location: Union[_str, 'types.StringWithAggregatesFilter']
    solar_capacity_kw: Union[_int, 'types.BigIntWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']

    AND: List['SolarHubScalarWhereWithAggregatesInputRecursive2']
    OR: List['SolarHubScalarWhereWithAggregatesInputRecursive2']
    NOT: List['SolarHubScalarWhereWithAggregatesInputRecursive2']


class SolarHubScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    what_three_word_location: Union[_str, 'types.StringWithAggregatesFilter']
    solar_capacity_kw: Union[_int, 'types.BigIntWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']

    AND: List['SolarHubScalarWhereWithAggregatesInputRecursive3']
    OR: List['SolarHubScalarWhereWithAggregatesInputRecursive3']
    NOT: List['SolarHubScalarWhereWithAggregatesInputRecursive3']


class SolarHubScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    what_three_word_location: Union[_str, 'types.StringWithAggregatesFilter']
    solar_capacity_kw: Union[_int, 'types.BigIntWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']

    AND: List['SolarHubScalarWhereWithAggregatesInputRecursive4']
    OR: List['SolarHubScalarWhereWithAggregatesInputRecursive4']
    NOT: List['SolarHubScalarWhereWithAggregatesInputRecursive4']


class SolarHubScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """SolarHub arguments for searching"""
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    what_three_word_location: Union[_str, 'types.StringWithAggregatesFilter']
    solar_capacity_kw: Union[_int, 'types.BigIntWithAggregatesFilter']
    country: Union[_str, 'types.StringWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']



class SolarHubGroupByOutput(TypedDict, total=False):
    hub_id: _int
    what_three_word_location: _str
    solar_capacity_kw: _int
    country: _str
    latitude: _float
    longitude: _float
    _sum: 'SolarHubSumAggregateOutput'
    _avg: 'SolarHubAvgAggregateOutput'
    _min: 'SolarHubMinAggregateOutput'
    _max: 'SolarHubMaxAggregateOutput'
    _count: 'SolarHubCountAggregateOutput'


class SolarHubAvgAggregateOutput(TypedDict, total=False):
    """SolarHub output for aggregating averages"""
    hub_id: float
    solar_capacity_kw: float
    latitude: float
    longitude: float


class SolarHubSumAggregateOutput(TypedDict, total=False):
    """SolarHub output for aggregating sums"""
    hub_id: _int
    solar_capacity_kw: _int
    latitude: _float
    longitude: _float


class SolarHubScalarAggregateOutput(TypedDict, total=False):
    """SolarHub output including scalar fields"""
    hub_id: _int
    what_three_word_location: _str
    solar_capacity_kw: _int
    country: _str
    latitude: _float
    longitude: _float


SolarHubMinAggregateOutput = SolarHubScalarAggregateOutput
SolarHubMaxAggregateOutput = SolarHubScalarAggregateOutput


class SolarHubMaxAggregateInput(TypedDict, total=False):
    """SolarHub input for aggregating by max"""
    hub_id: bool
    what_three_word_location: bool
    solar_capacity_kw: bool
    country: bool
    latitude: bool
    longitude: bool


class SolarHubMinAggregateInput(TypedDict, total=False):
    """SolarHub input for aggregating by min"""
    hub_id: bool
    what_three_word_location: bool
    solar_capacity_kw: bool
    country: bool
    latitude: bool
    longitude: bool


class SolarHubNumberAggregateInput(TypedDict, total=False):
    """SolarHub input for aggregating numbers"""
    hub_id: bool
    solar_capacity_kw: bool
    latitude: bool
    longitude: bool


SolarHubAvgAggregateInput = SolarHubNumberAggregateInput
SolarHubSumAggregateInput = SolarHubNumberAggregateInput


SolarHubCountAggregateInput = TypedDict(
    'SolarHubCountAggregateInput',
    {
        'hub_id': bool,
        'what_three_word_location': bool,
        'solar_capacity_kw': bool,
        'country': bool,
        'latitude': bool,
        'longitude': bool,
        '_all': bool,
    },
    total=False,
)

SolarHubCountAggregateOutput = TypedDict(
    'SolarHubCountAggregateOutput',
    {
        'hub_id': int,
        'what_three_word_location': int,
        'solar_capacity_kw': int,
        'country': int,
        'latitude': int,
        'longitude': int,
        '_all': int,
    },
    total=False,
)


SolarHubKeys = Literal[
    'hub_id',
    'what_three_word_location',
    'solar_capacity_kw',
    'country',
    'latitude',
    'longitude',
    'users',
    'batteries',
    'pue_items',
]
SolarHubScalarFieldKeys = Literal[
    'hub_id',
    'what_three_word_location',
    'solar_capacity_kw',
    'country',
    'latitude',
    'longitude',
]
SolarHubScalarFieldKeysT = TypeVar('SolarHubScalarFieldKeysT', bound=SolarHubScalarFieldKeys)

SolarHubRelationalFieldKeys = Literal[
        'users',
        'batteries',
        'pue_items',
    ]

# User types

class UserOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the User create method"""
    users_identification_document_number: Optional[_str]
    mobile_number: Optional[_str]
    address: Optional[_str]
    hub_id: _int
    hub: 'SolarHubCreateNestedWithoutRelationsInput'
    battery_rentals: 'RentalCreateManyNestedWithoutRelationsInput'
    pue_rentals: 'PUERentalCreateManyNestedWithoutRelationsInput'


class UserCreateInput(UserOptionalCreateInput):
    """Required arguments to the User create method"""
    user_id: _int
    Name: _str
    user_access_level: _str
    username: _str
    password_hash: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class UserOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the User create method, without relations"""
    users_identification_document_number: Optional[_str]
    mobile_number: Optional[_str]
    address: Optional[_str]
    hub_id: _int


class UserCreateWithoutRelationsInput(UserOptionalCreateWithoutRelationsInput):
    """Required arguments to the User create method, without relations"""
    user_id: _int
    Name: _str
    user_access_level: _str
    username: _str
    password_hash: _str


class UserCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'


class UserCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['UserCreateWithoutRelationsInput', List['UserCreateWithoutRelationsInput']]
    connect: Union['UserWhereUniqueInput', List['UserWhereUniqueInput']]


_UserWhereUnique_user_id_Input = TypedDict(
    '_UserWhereUnique_user_id_Input',
    {
        'user_id': '_int',
    },
    total=True
)

_UserWhereUnique_username_Input = TypedDict(
    '_UserWhereUnique_username_Input',
    {
        'username': '_str',
    },
    total=True
)

UserWhereUniqueInput = Union[
    '_UserWhereUnique_user_id_Input',
    '_UserWhereUnique_username_Input',
]


class UserUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    user_id: Union[AtomicBigIntInput, _int]
    Name: _str
    users_identification_document_number: Optional[_str]
    mobile_number: Optional[_str]
    address: Optional[_str]
    user_access_level: _str
    username: _str
    password_hash: _str
    hub: 'SolarHubUpdateOneWithoutRelationsInput'
    battery_rentals: 'RentalUpdateManyWithoutRelationsInput'
    pue_rentals: 'PUERentalUpdateManyWithoutRelationsInput'


class UserUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    user_id: Union[AtomicBigIntInput, _int]
    Name: _str
    users_identification_document_number: Optional[_str]
    mobile_number: Optional[_str]
    address: Optional[_str]
    user_access_level: _str
    username: _str
    password_hash: _str


class UserUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['UserCreateWithoutRelationsInput']
    connect: List['UserWhereUniqueInput']
    set: List['UserWhereUniqueInput']
    disconnect: List['UserWhereUniqueInput']
    delete: List['UserWhereUniqueInput']

    # TODO
    # update: List['UserUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['UserUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['UserScalarWhereInput']
    # upsert: List['UserUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['UserCreateOrConnectWithoutRelationsInput']


class UserUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'UserCreateWithoutRelationsInput'
    connect: 'UserWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'UserUpdateInput'
    # upsert: 'UserUpsertWithoutRelationsInput'
    # connectOrCreate: 'UserCreateOrConnectWithoutRelationsInput'


class UserUpsertInput(TypedDict):
    create: 'UserCreateInput'
    update: 'UserUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_User_user_id_OrderByInput = TypedDict(
    '_User_user_id_OrderByInput',
    {
        'user_id': 'SortOrder',
    },
    total=True
)

_User_Name_OrderByInput = TypedDict(
    '_User_Name_OrderByInput',
    {
        'Name': 'SortOrder',
    },
    total=True
)

_User_users_identification_document_number_OrderByInput = TypedDict(
    '_User_users_identification_document_number_OrderByInput',
    {
        'users_identification_document_number': 'SortOrder',
    },
    total=True
)

_User_mobile_number_OrderByInput = TypedDict(
    '_User_mobile_number_OrderByInput',
    {
        'mobile_number': 'SortOrder',
    },
    total=True
)

_User_address_OrderByInput = TypedDict(
    '_User_address_OrderByInput',
    {
        'address': 'SortOrder',
    },
    total=True
)

_User_hub_id_OrderByInput = TypedDict(
    '_User_hub_id_OrderByInput',
    {
        'hub_id': 'SortOrder',
    },
    total=True
)

_User_user_access_level_OrderByInput = TypedDict(
    '_User_user_access_level_OrderByInput',
    {
        'user_access_level': 'SortOrder',
    },
    total=True
)

_User_username_OrderByInput = TypedDict(
    '_User_username_OrderByInput',
    {
        'username': 'SortOrder',
    },
    total=True
)

_User_password_hash_OrderByInput = TypedDict(
    '_User_password_hash_OrderByInput',
    {
        'password_hash': 'SortOrder',
    },
    total=True
)

UserOrderByInput = Union[
    '_User_user_id_OrderByInput',
    '_User_Name_OrderByInput',
    '_User_users_identification_document_number_OrderByInput',
    '_User_mobile_number_OrderByInput',
    '_User_address_OrderByInput',
    '_User_hub_id_OrderByInput',
    '_User_user_access_level_OrderByInput',
    '_User_username_OrderByInput',
    '_User_password_hash_OrderByInput',
]



# recursive User types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

UserRelationFilter = TypedDict(
    'UserRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class UserListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class UserInclude(TypedDict, total=False):
    """User relational arguments"""
    hub: Union[bool, 'SolarHubArgsFromUser']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromUser']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUser']


    

class SolarHubIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    users: Union[bool, 'FindManyUserArgsFromUserRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromUserRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromUserRecursive1']


class SolarHubIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    users: Union[bool, 'FindManyUserArgsFromUserRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromUserRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromUserRecursive2']


class SolarHubIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    users: Union[bool, 'FindManyUserArgsFromUserRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromUserRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromUserRecursive3']


class SolarHubIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    users: Union[bool, 'FindManyUserArgsFromUserRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromUserRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromUserRecursive4']


class SolarHubIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class SolarHubArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManySolarHubArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromUserRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUserRecursive1']


class UserIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromUserRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUserRecursive2']


class UserIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromUserRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUserRecursive3']


class UserIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromUserRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUserRecursive4']


class UserIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class UserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyUserArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromUserRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromUserRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromUserRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromUserRecursive1']


class NoteIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromUserRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromUserRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromUserRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromUserRecursive2']


class NoteIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromUserRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromUserRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromUserRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromUserRecursive3']


class NoteIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromUserRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromUserRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromUserRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromUserRecursive4']


class NoteIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class NoteArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyNoteArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive1']
    note: Union[bool, 'NoteArgsFromUserRecursive1']


class BEPPPBattery_NotesIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive2']
    note: Union[bool, 'NoteArgsFromUserRecursive2']


class BEPPPBattery_NotesIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive3']
    note: Union[bool, 'NoteArgsFromUserRecursive3']


class BEPPPBattery_NotesIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive4']
    note: Union[bool, 'NoteArgsFromUserRecursive4']


class BEPPPBattery_NotesIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class BEPPPBattery_NotesArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyBEPPPBattery_NotesArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    rental: Union[bool, 'RentalArgsFromUserRecursive1']
    note: Union[bool, 'NoteArgsFromUserRecursive1']


class Rental_NotesIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    rental: Union[bool, 'RentalArgsFromUserRecursive2']
    note: Union[bool, 'NoteArgsFromUserRecursive2']


class Rental_NotesIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    rental: Union[bool, 'RentalArgsFromUserRecursive3']
    note: Union[bool, 'NoteArgsFromUserRecursive3']


class Rental_NotesIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    rental: Union[bool, 'RentalArgsFromUserRecursive4']
    note: Union[bool, 'NoteArgsFromUserRecursive4']


class Rental_NotesIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class Rental_NotesArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyRental_NotesArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromUserRecursive1']
    note: Union[bool, 'NoteArgsFromUserRecursive1']


class PUE_NotesIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromUserRecursive2']
    note: Union[bool, 'NoteArgsFromUserRecursive2']


class PUE_NotesIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromUserRecursive3']
    note: Union[bool, 'NoteArgsFromUserRecursive3']


class PUE_NotesIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromUserRecursive4']
    note: Union[bool, 'NoteArgsFromUserRecursive4']


class PUE_NotesIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class PUE_NotesArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyPUE_NotesArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    pue_rental: Union[bool, 'PUERentalArgsFromUserRecursive1']
    note: Union[bool, 'NoteArgsFromUserRecursive1']


class PUERental_NotesIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    pue_rental: Union[bool, 'PUERentalArgsFromUserRecursive2']
    note: Union[bool, 'NoteArgsFromUserRecursive2']


class PUERental_NotesIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    pue_rental: Union[bool, 'PUERentalArgsFromUserRecursive3']
    note: Union[bool, 'NoteArgsFromUserRecursive3']


class PUERental_NotesIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    pue_rental: Union[bool, 'PUERentalArgsFromUserRecursive4']
    note: Union[bool, 'NoteArgsFromUserRecursive4']


class PUERental_NotesIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class PUERental_NotesArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyPUERental_NotesArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromUserRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromUserRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromUserRecursive1']


class BEPPPBatteryIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromUserRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromUserRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromUserRecursive2']


class BEPPPBatteryIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromUserRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromUserRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromUserRecursive3']


class BEPPPBatteryIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromUserRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromUserRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromUserRecursive4']


class BEPPPBatteryIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class BEPPPBatteryArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyBEPPPBatteryArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive1']


class LiveDataIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive2']


class LiveDataIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive3']


class LiveDataIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive4']


class LiveDataIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class LiveDataArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyLiveDataArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive1']
    user: Union[bool, 'UserArgsFromUserRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromUserRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromUserRecursive1']


class RentalIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive2']
    user: Union[bool, 'UserArgsFromUserRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromUserRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromUserRecursive2']


class RentalIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive3']
    user: Union[bool, 'UserArgsFromUserRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromUserRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromUserRecursive3']


class RentalIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    battery: Union[bool, 'BEPPPBatteryArgsFromUserRecursive4']
    user: Union[bool, 'UserArgsFromUserRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromUserRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromUserRecursive4']


class RentalIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class RentalArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyRentalArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromUserRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUserRecursive1']


class ProductiveUseEquipmentIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromUserRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUserRecursive2']


class ProductiveUseEquipmentIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromUserRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUserRecursive3']


class ProductiveUseEquipmentIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    hub: Union[bool, 'SolarHubArgsFromUserRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromUserRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromUserRecursive4']


class ProductiveUseEquipmentIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class ProductiveUseEquipmentArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyProductiveUseEquipmentArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromUserRecursive1']
    user: Union[bool, 'UserArgsFromUserRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromUserRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromUserRecursive1']


class PUERentalIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromUserRecursive2']
    user: Union[bool, 'UserArgsFromUserRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromUserRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromUserRecursive2']


class PUERentalIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromUserRecursive3']
    user: Union[bool, 'UserArgsFromUserRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromUserRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromUserRecursive3']


class PUERentalIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromUserRecursive4']
    user: Union[bool, 'UserArgsFromUserRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromUserRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromUserRecursive4']


class PUERentalIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class PUERentalArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyPUERentalArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromUser(TypedDict, total=False):
    """Relational arguments for User"""
    battery_rental: Union[bool, 'RentalArgsFromUserRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromUserRecursive1']


class BatteryPUERentalIncludeFromUserRecursive1(TypedDict, total=False):
    """Relational arguments for User"""
    battery_rental: Union[bool, 'RentalArgsFromUserRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromUserRecursive2']


class BatteryPUERentalIncludeFromUserRecursive2(TypedDict, total=False):
    """Relational arguments for User"""
    battery_rental: Union[bool, 'RentalArgsFromUserRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromUserRecursive3']


class BatteryPUERentalIncludeFromUserRecursive3(TypedDict, total=False):
    """Relational arguments for User"""
    battery_rental: Union[bool, 'RentalArgsFromUserRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromUserRecursive4']


class BatteryPUERentalIncludeFromUserRecursive4(TypedDict, total=False):
    """Relational arguments for User"""

    

class BatteryPUERentalArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    
    

class FindManyBatteryPUERentalArgsFromUser(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromUserRecursive1(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromUserRecursive2(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromUserRecursive3(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromUserRecursive4(TypedDict, total=False):
    """Arguments for User"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyUserArgs = FindManyUserArgsFromUser
FindFirstUserArgs = FindManyUserArgsFromUser


    

class UserWhereInput(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntFilter']
    Name: Union[_str, 'types.StringFilter']
    users_identification_document_number: Union[None, _str, 'types.StringFilter']
    mobile_number: Union[None, _str, 'types.StringFilter']
    address: Union[None, _str, 'types.StringFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    user_access_level: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    password_hash: Union[_str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    battery_rentals: 'RentalListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive1', List['UserWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive1']
    OR: List['UserWhereInputRecursive1']
    NOT: List['UserWhereInputRecursive1']


class UserWhereInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntFilter']
    Name: Union[_str, 'types.StringFilter']
    users_identification_document_number: Union[None, _str, 'types.StringFilter']
    mobile_number: Union[None, _str, 'types.StringFilter']
    address: Union[None, _str, 'types.StringFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    user_access_level: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    password_hash: Union[_str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    battery_rentals: 'RentalListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive2', List['UserWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive2']
    OR: List['UserWhereInputRecursive2']
    NOT: List['UserWhereInputRecursive2']


class UserWhereInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntFilter']
    Name: Union[_str, 'types.StringFilter']
    users_identification_document_number: Union[None, _str, 'types.StringFilter']
    mobile_number: Union[None, _str, 'types.StringFilter']
    address: Union[None, _str, 'types.StringFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    user_access_level: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    password_hash: Union[_str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    battery_rentals: 'RentalListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive3', List['UserWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive3']
    OR: List['UserWhereInputRecursive3']
    NOT: List['UserWhereInputRecursive3']


class UserWhereInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntFilter']
    Name: Union[_str, 'types.StringFilter']
    users_identification_document_number: Union[None, _str, 'types.StringFilter']
    mobile_number: Union[None, _str, 'types.StringFilter']
    address: Union[None, _str, 'types.StringFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    user_access_level: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    password_hash: Union[_str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    battery_rentals: 'RentalListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['UserWhereInputRecursive4', List['UserWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['UserWhereInputRecursive4']
    OR: List['UserWhereInputRecursive4']
    NOT: List['UserWhereInputRecursive4']


class UserWhereInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntFilter']
    Name: Union[_str, 'types.StringFilter']
    users_identification_document_number: Union[None, _str, 'types.StringFilter']
    mobile_number: Union[None, _str, 'types.StringFilter']
    address: Union[None, _str, 'types.StringFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    user_access_level: Union[_str, 'types.StringFilter']
    username: Union[_str, 'types.StringFilter']
    password_hash: Union[_str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    battery_rentals: 'RentalListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'



# aggregate User types


    

class UserScalarWhereWithAggregatesInput(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    Name: Union[_str, 'types.StringWithAggregatesFilter']
    users_identification_document_number: Union[_str, 'types.StringWithAggregatesFilter']
    mobile_number: Union[_str, 'types.StringWithAggregatesFilter']
    address: Union[_str, 'types.StringWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_access_level: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    password_hash: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive1']
    OR: List['UserScalarWhereWithAggregatesInputRecursive1']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive1']


class UserScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    Name: Union[_str, 'types.StringWithAggregatesFilter']
    users_identification_document_number: Union[_str, 'types.StringWithAggregatesFilter']
    mobile_number: Union[_str, 'types.StringWithAggregatesFilter']
    address: Union[_str, 'types.StringWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_access_level: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    password_hash: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive2']
    OR: List['UserScalarWhereWithAggregatesInputRecursive2']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive2']


class UserScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    Name: Union[_str, 'types.StringWithAggregatesFilter']
    users_identification_document_number: Union[_str, 'types.StringWithAggregatesFilter']
    mobile_number: Union[_str, 'types.StringWithAggregatesFilter']
    address: Union[_str, 'types.StringWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_access_level: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    password_hash: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive3']
    OR: List['UserScalarWhereWithAggregatesInputRecursive3']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive3']


class UserScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    Name: Union[_str, 'types.StringWithAggregatesFilter']
    users_identification_document_number: Union[_str, 'types.StringWithAggregatesFilter']
    mobile_number: Union[_str, 'types.StringWithAggregatesFilter']
    address: Union[_str, 'types.StringWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_access_level: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    password_hash: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['UserScalarWhereWithAggregatesInputRecursive4']
    OR: List['UserScalarWhereWithAggregatesInputRecursive4']
    NOT: List['UserScalarWhereWithAggregatesInputRecursive4']


class UserScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """User arguments for searching"""
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    Name: Union[_str, 'types.StringWithAggregatesFilter']
    users_identification_document_number: Union[_str, 'types.StringWithAggregatesFilter']
    mobile_number: Union[_str, 'types.StringWithAggregatesFilter']
    address: Union[_str, 'types.StringWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_access_level: Union[_str, 'types.StringWithAggregatesFilter']
    username: Union[_str, 'types.StringWithAggregatesFilter']
    password_hash: Union[_str, 'types.StringWithAggregatesFilter']



class UserGroupByOutput(TypedDict, total=False):
    user_id: _int
    Name: _str
    users_identification_document_number: _str
    mobile_number: _str
    address: _str
    hub_id: _int
    user_access_level: _str
    username: _str
    password_hash: _str
    _sum: 'UserSumAggregateOutput'
    _avg: 'UserAvgAggregateOutput'
    _min: 'UserMinAggregateOutput'
    _max: 'UserMaxAggregateOutput'
    _count: 'UserCountAggregateOutput'


class UserAvgAggregateOutput(TypedDict, total=False):
    """User output for aggregating averages"""
    user_id: float
    hub_id: float


class UserSumAggregateOutput(TypedDict, total=False):
    """User output for aggregating sums"""
    user_id: _int
    hub_id: _int


class UserScalarAggregateOutput(TypedDict, total=False):
    """User output including scalar fields"""
    user_id: _int
    Name: _str
    users_identification_document_number: _str
    mobile_number: _str
    address: _str
    hub_id: _int
    user_access_level: _str
    username: _str
    password_hash: _str


UserMinAggregateOutput = UserScalarAggregateOutput
UserMaxAggregateOutput = UserScalarAggregateOutput


class UserMaxAggregateInput(TypedDict, total=False):
    """User input for aggregating by max"""
    user_id: bool
    Name: bool
    users_identification_document_number: bool
    mobile_number: bool
    address: bool
    hub_id: bool
    user_access_level: bool
    username: bool
    password_hash: bool


class UserMinAggregateInput(TypedDict, total=False):
    """User input for aggregating by min"""
    user_id: bool
    Name: bool
    users_identification_document_number: bool
    mobile_number: bool
    address: bool
    hub_id: bool
    user_access_level: bool
    username: bool
    password_hash: bool


class UserNumberAggregateInput(TypedDict, total=False):
    """User input for aggregating numbers"""
    user_id: bool
    hub_id: bool


UserAvgAggregateInput = UserNumberAggregateInput
UserSumAggregateInput = UserNumberAggregateInput


UserCountAggregateInput = TypedDict(
    'UserCountAggregateInput',
    {
        'user_id': bool,
        'Name': bool,
        'users_identification_document_number': bool,
        'mobile_number': bool,
        'address': bool,
        'hub_id': bool,
        'user_access_level': bool,
        'username': bool,
        'password_hash': bool,
        '_all': bool,
    },
    total=False,
)

UserCountAggregateOutput = TypedDict(
    'UserCountAggregateOutput',
    {
        'user_id': int,
        'Name': int,
        'users_identification_document_number': int,
        'mobile_number': int,
        'address': int,
        'hub_id': int,
        'user_access_level': int,
        'username': int,
        'password_hash': int,
        '_all': int,
    },
    total=False,
)


UserKeys = Literal[
    'user_id',
    'Name',
    'users_identification_document_number',
    'mobile_number',
    'address',
    'hub_id',
    'user_access_level',
    'username',
    'password_hash',
    'hub',
    'battery_rentals',
    'pue_rentals',
]
UserScalarFieldKeys = Literal[
    'user_id',
    'Name',
    'users_identification_document_number',
    'mobile_number',
    'address',
    'hub_id',
    'user_access_level',
    'username',
    'password_hash',
]
UserScalarFieldKeysT = TypeVar('UserScalarFieldKeysT', bound=UserScalarFieldKeys)

UserRelationalFieldKeys = Literal[
        'hub',
        'battery_rentals',
        'pue_rentals',
    ]

# Note types

class NoteOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Note create method"""
    created_at: datetime.datetime
    batteries: 'BEPPPBattery_NotesCreateManyNestedWithoutRelationsInput'
    rentals: 'Rental_NotesCreateManyNestedWithoutRelationsInput'
    pue_items: 'PUE_NotesCreateManyNestedWithoutRelationsInput'
    pue_rentals: 'PUERental_NotesCreateManyNestedWithoutRelationsInput'


class NoteCreateInput(NoteOptionalCreateInput):
    """Required arguments to the Note create method"""
    id: _int
    content: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class NoteOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Note create method, without relations"""
    created_at: datetime.datetime


class NoteCreateWithoutRelationsInput(NoteOptionalCreateWithoutRelationsInput):
    """Required arguments to the Note create method, without relations"""
    id: _int
    content: _str


class NoteCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'NoteCreateWithoutRelationsInput'
    connect: 'NoteWhereUniqueInput'


class NoteCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['NoteCreateWithoutRelationsInput', List['NoteCreateWithoutRelationsInput']]
    connect: Union['NoteWhereUniqueInput', List['NoteWhereUniqueInput']]


_NoteWhereUnique_id_Input = TypedDict(
    '_NoteWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

NoteWhereUniqueInput = _NoteWhereUnique_id_Input


class NoteUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicBigIntInput, _int]
    content: _str
    created_at: datetime.datetime
    batteries: 'BEPPPBattery_NotesUpdateManyWithoutRelationsInput'
    rentals: 'Rental_NotesUpdateManyWithoutRelationsInput'
    pue_items: 'PUE_NotesUpdateManyWithoutRelationsInput'
    pue_rentals: 'PUERental_NotesUpdateManyWithoutRelationsInput'


class NoteUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicBigIntInput, _int]
    content: _str
    created_at: datetime.datetime


class NoteUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['NoteCreateWithoutRelationsInput']
    connect: List['NoteWhereUniqueInput']
    set: List['NoteWhereUniqueInput']
    disconnect: List['NoteWhereUniqueInput']
    delete: List['NoteWhereUniqueInput']

    # TODO
    # update: List['NoteUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['NoteUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['NoteScalarWhereInput']
    # upsert: List['NoteUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['NoteCreateOrConnectWithoutRelationsInput']


class NoteUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'NoteCreateWithoutRelationsInput'
    connect: 'NoteWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'NoteUpdateInput'
    # upsert: 'NoteUpsertWithoutRelationsInput'
    # connectOrCreate: 'NoteCreateOrConnectWithoutRelationsInput'


class NoteUpsertInput(TypedDict):
    create: 'NoteCreateInput'
    update: 'NoteUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Note_id_OrderByInput = TypedDict(
    '_Note_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_Note_content_OrderByInput = TypedDict(
    '_Note_content_OrderByInput',
    {
        'content': 'SortOrder',
    },
    total=True
)

_Note_created_at_OrderByInput = TypedDict(
    '_Note_created_at_OrderByInput',
    {
        'created_at': 'SortOrder',
    },
    total=True
)

NoteOrderByInput = Union[
    '_Note_id_OrderByInput',
    '_Note_content_OrderByInput',
    '_Note_created_at_OrderByInput',
]



# recursive Note types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

NoteRelationFilter = TypedDict(
    'NoteRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class NoteListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class NoteInclude(TypedDict, total=False):
    """Note relational arguments"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNote']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromNote']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromNote']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromNote']


    

class SolarHubIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    users: Union[bool, 'FindManyUserArgsFromNoteRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromNoteRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromNoteRecursive1']


class SolarHubIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    users: Union[bool, 'FindManyUserArgsFromNoteRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromNoteRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromNoteRecursive2']


class SolarHubIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    users: Union[bool, 'FindManyUserArgsFromNoteRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromNoteRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromNoteRecursive3']


class SolarHubIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    users: Union[bool, 'FindManyUserArgsFromNoteRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromNoteRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromNoteRecursive4']


class SolarHubIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class SolarHubArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManySolarHubArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromNoteRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromNoteRecursive1']


class UserIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromNoteRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromNoteRecursive2']


class UserIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromNoteRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromNoteRecursive3']


class UserIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromNoteRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromNoteRecursive4']


class UserIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class UserArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyUserArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNoteRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromNoteRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromNoteRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromNoteRecursive1']


class NoteIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNoteRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromNoteRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromNoteRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromNoteRecursive2']


class NoteIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNoteRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromNoteRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromNoteRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromNoteRecursive3']


class NoteIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNoteRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromNoteRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromNoteRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromNoteRecursive4']


class NoteIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class NoteArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyNoteArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive1']
    note: Union[bool, 'NoteArgsFromNoteRecursive1']


class BEPPPBattery_NotesIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive2']
    note: Union[bool, 'NoteArgsFromNoteRecursive2']


class BEPPPBattery_NotesIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive3']
    note: Union[bool, 'NoteArgsFromNoteRecursive3']


class BEPPPBattery_NotesIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive4']
    note: Union[bool, 'NoteArgsFromNoteRecursive4']


class BEPPPBattery_NotesIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class BEPPPBattery_NotesArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyBEPPPBattery_NotesArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    rental: Union[bool, 'RentalArgsFromNoteRecursive1']
    note: Union[bool, 'NoteArgsFromNoteRecursive1']


class Rental_NotesIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    rental: Union[bool, 'RentalArgsFromNoteRecursive2']
    note: Union[bool, 'NoteArgsFromNoteRecursive2']


class Rental_NotesIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    rental: Union[bool, 'RentalArgsFromNoteRecursive3']
    note: Union[bool, 'NoteArgsFromNoteRecursive3']


class Rental_NotesIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    rental: Union[bool, 'RentalArgsFromNoteRecursive4']
    note: Union[bool, 'NoteArgsFromNoteRecursive4']


class Rental_NotesIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class Rental_NotesArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyRental_NotesArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromNoteRecursive1']
    note: Union[bool, 'NoteArgsFromNoteRecursive1']


class PUE_NotesIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromNoteRecursive2']
    note: Union[bool, 'NoteArgsFromNoteRecursive2']


class PUE_NotesIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromNoteRecursive3']
    note: Union[bool, 'NoteArgsFromNoteRecursive3']


class PUE_NotesIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromNoteRecursive4']
    note: Union[bool, 'NoteArgsFromNoteRecursive4']


class PUE_NotesIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class PUE_NotesArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyPUE_NotesArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    pue_rental: Union[bool, 'PUERentalArgsFromNoteRecursive1']
    note: Union[bool, 'NoteArgsFromNoteRecursive1']


class PUERental_NotesIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    pue_rental: Union[bool, 'PUERentalArgsFromNoteRecursive2']
    note: Union[bool, 'NoteArgsFromNoteRecursive2']


class PUERental_NotesIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    pue_rental: Union[bool, 'PUERentalArgsFromNoteRecursive3']
    note: Union[bool, 'NoteArgsFromNoteRecursive3']


class PUERental_NotesIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    pue_rental: Union[bool, 'PUERentalArgsFromNoteRecursive4']
    note: Union[bool, 'NoteArgsFromNoteRecursive4']


class PUERental_NotesIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class PUERental_NotesArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyPUERental_NotesArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromNoteRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromNoteRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNoteRecursive1']


class BEPPPBatteryIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromNoteRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromNoteRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNoteRecursive2']


class BEPPPBatteryIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromNoteRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromNoteRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNoteRecursive3']


class BEPPPBatteryIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromNoteRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromNoteRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromNoteRecursive4']


class BEPPPBatteryIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class BEPPPBatteryArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyBEPPPBatteryArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive1']


class LiveDataIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive2']


class LiveDataIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive3']


class LiveDataIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive4']


class LiveDataIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class LiveDataArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyLiveDataArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive1']
    user: Union[bool, 'UserArgsFromNoteRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromNoteRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromNoteRecursive1']


class RentalIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive2']
    user: Union[bool, 'UserArgsFromNoteRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromNoteRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromNoteRecursive2']


class RentalIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive3']
    user: Union[bool, 'UserArgsFromNoteRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromNoteRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromNoteRecursive3']


class RentalIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    battery: Union[bool, 'BEPPPBatteryArgsFromNoteRecursive4']
    user: Union[bool, 'UserArgsFromNoteRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromNoteRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromNoteRecursive4']


class RentalIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class RentalArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyRentalArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromNoteRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromNoteRecursive1']


class ProductiveUseEquipmentIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromNoteRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromNoteRecursive2']


class ProductiveUseEquipmentIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromNoteRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromNoteRecursive3']


class ProductiveUseEquipmentIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    hub: Union[bool, 'SolarHubArgsFromNoteRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromNoteRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromNoteRecursive4']


class ProductiveUseEquipmentIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class ProductiveUseEquipmentArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyProductiveUseEquipmentArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromNoteRecursive1']
    user: Union[bool, 'UserArgsFromNoteRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromNoteRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromNoteRecursive1']


class PUERentalIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromNoteRecursive2']
    user: Union[bool, 'UserArgsFromNoteRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromNoteRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromNoteRecursive2']


class PUERentalIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromNoteRecursive3']
    user: Union[bool, 'UserArgsFromNoteRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromNoteRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromNoteRecursive3']


class PUERentalIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromNoteRecursive4']
    user: Union[bool, 'UserArgsFromNoteRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromNoteRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromNoteRecursive4']


class PUERentalIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class PUERentalArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyPUERentalArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromNote(TypedDict, total=False):
    """Relational arguments for Note"""
    battery_rental: Union[bool, 'RentalArgsFromNoteRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromNoteRecursive1']


class BatteryPUERentalIncludeFromNoteRecursive1(TypedDict, total=False):
    """Relational arguments for Note"""
    battery_rental: Union[bool, 'RentalArgsFromNoteRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromNoteRecursive2']


class BatteryPUERentalIncludeFromNoteRecursive2(TypedDict, total=False):
    """Relational arguments for Note"""
    battery_rental: Union[bool, 'RentalArgsFromNoteRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromNoteRecursive3']


class BatteryPUERentalIncludeFromNoteRecursive3(TypedDict, total=False):
    """Relational arguments for Note"""
    battery_rental: Union[bool, 'RentalArgsFromNoteRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromNoteRecursive4']


class BatteryPUERentalIncludeFromNoteRecursive4(TypedDict, total=False):
    """Relational arguments for Note"""

    

class BatteryPUERentalArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    
    

class FindManyBatteryPUERentalArgsFromNote(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromNoteRecursive1(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromNoteRecursive2(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromNoteRecursive3(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromNoteRecursive4(TypedDict, total=False):
    """Arguments for Note"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyNoteArgs = FindManyNoteArgsFromNote
FindFirstNoteArgs = FindManyNoteArgsFromNote


    

class NoteWhereInput(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    content: Union[_str, 'types.StringFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeFilter']
    batteries: 'BEPPPBattery_NotesListRelationFilter'
    rentals: 'Rental_NotesListRelationFilter'
    pue_items: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERental_NotesListRelationFilter'

    # should be noted that AND and NOT should be Union['NoteWhereInputRecursive1', List['NoteWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['NoteWhereInputRecursive1']
    OR: List['NoteWhereInputRecursive1']
    NOT: List['NoteWhereInputRecursive1']


class NoteWhereInputRecursive1(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    content: Union[_str, 'types.StringFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeFilter']
    batteries: 'BEPPPBattery_NotesListRelationFilter'
    rentals: 'Rental_NotesListRelationFilter'
    pue_items: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERental_NotesListRelationFilter'

    # should be noted that AND and NOT should be Union['NoteWhereInputRecursive2', List['NoteWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['NoteWhereInputRecursive2']
    OR: List['NoteWhereInputRecursive2']
    NOT: List['NoteWhereInputRecursive2']


class NoteWhereInputRecursive2(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    content: Union[_str, 'types.StringFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeFilter']
    batteries: 'BEPPPBattery_NotesListRelationFilter'
    rentals: 'Rental_NotesListRelationFilter'
    pue_items: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERental_NotesListRelationFilter'

    # should be noted that AND and NOT should be Union['NoteWhereInputRecursive3', List['NoteWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['NoteWhereInputRecursive3']
    OR: List['NoteWhereInputRecursive3']
    NOT: List['NoteWhereInputRecursive3']


class NoteWhereInputRecursive3(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    content: Union[_str, 'types.StringFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeFilter']
    batteries: 'BEPPPBattery_NotesListRelationFilter'
    rentals: 'Rental_NotesListRelationFilter'
    pue_items: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERental_NotesListRelationFilter'

    # should be noted that AND and NOT should be Union['NoteWhereInputRecursive4', List['NoteWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['NoteWhereInputRecursive4']
    OR: List['NoteWhereInputRecursive4']
    NOT: List['NoteWhereInputRecursive4']


class NoteWhereInputRecursive4(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    content: Union[_str, 'types.StringFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeFilter']
    batteries: 'BEPPPBattery_NotesListRelationFilter'
    rentals: 'Rental_NotesListRelationFilter'
    pue_items: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERental_NotesListRelationFilter'



# aggregate Note types


    

class NoteScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['NoteScalarWhereWithAggregatesInputRecursive1']
    OR: List['NoteScalarWhereWithAggregatesInputRecursive1']
    NOT: List['NoteScalarWhereWithAggregatesInputRecursive1']


class NoteScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['NoteScalarWhereWithAggregatesInputRecursive2']
    OR: List['NoteScalarWhereWithAggregatesInputRecursive2']
    NOT: List['NoteScalarWhereWithAggregatesInputRecursive2']


class NoteScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['NoteScalarWhereWithAggregatesInputRecursive3']
    OR: List['NoteScalarWhereWithAggregatesInputRecursive3']
    NOT: List['NoteScalarWhereWithAggregatesInputRecursive3']


class NoteScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['NoteScalarWhereWithAggregatesInputRecursive4']
    OR: List['NoteScalarWhereWithAggregatesInputRecursive4']
    NOT: List['NoteScalarWhereWithAggregatesInputRecursive4']


class NoteScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Note arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    content: Union[_str, 'types.StringWithAggregatesFilter']
    created_at: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class NoteGroupByOutput(TypedDict, total=False):
    id: _int
    content: _str
    created_at: datetime.datetime
    _sum: 'NoteSumAggregateOutput'
    _avg: 'NoteAvgAggregateOutput'
    _min: 'NoteMinAggregateOutput'
    _max: 'NoteMaxAggregateOutput'
    _count: 'NoteCountAggregateOutput'


class NoteAvgAggregateOutput(TypedDict, total=False):
    """Note output for aggregating averages"""
    id: float


class NoteSumAggregateOutput(TypedDict, total=False):
    """Note output for aggregating sums"""
    id: _int


class NoteScalarAggregateOutput(TypedDict, total=False):
    """Note output including scalar fields"""
    id: _int
    content: _str
    created_at: datetime.datetime


NoteMinAggregateOutput = NoteScalarAggregateOutput
NoteMaxAggregateOutput = NoteScalarAggregateOutput


class NoteMaxAggregateInput(TypedDict, total=False):
    """Note input for aggregating by max"""
    id: bool
    content: bool
    created_at: bool


class NoteMinAggregateInput(TypedDict, total=False):
    """Note input for aggregating by min"""
    id: bool
    content: bool
    created_at: bool


class NoteNumberAggregateInput(TypedDict, total=False):
    """Note input for aggregating numbers"""
    id: bool


NoteAvgAggregateInput = NoteNumberAggregateInput
NoteSumAggregateInput = NoteNumberAggregateInput


NoteCountAggregateInput = TypedDict(
    'NoteCountAggregateInput',
    {
        'id': bool,
        'content': bool,
        'created_at': bool,
        '_all': bool,
    },
    total=False,
)

NoteCountAggregateOutput = TypedDict(
    'NoteCountAggregateOutput',
    {
        'id': int,
        'content': int,
        'created_at': int,
        '_all': int,
    },
    total=False,
)


NoteKeys = Literal[
    'id',
    'content',
    'created_at',
    'batteries',
    'rentals',
    'pue_items',
    'pue_rentals',
]
NoteScalarFieldKeys = Literal[
    'id',
    'content',
    'created_at',
]
NoteScalarFieldKeysT = TypeVar('NoteScalarFieldKeysT', bound=NoteScalarFieldKeys)

NoteRelationalFieldKeys = Literal[
        'batteries',
        'rentals',
        'pue_items',
        'pue_rentals',
    ]

# BEPPPBattery_Notes types

class BEPPPBattery_NotesOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the BEPPPBattery_Notes create method"""
    battery_id: _int
    note_id: _int
    battery: 'BEPPPBatteryCreateNestedWithoutRelationsInput'
    note: 'NoteCreateNestedWithoutRelationsInput'


class BEPPPBattery_NotesCreateInput(BEPPPBattery_NotesOptionalCreateInput):
    """Required arguments to the BEPPPBattery_Notes create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class BEPPPBattery_NotesOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the BEPPPBattery_Notes create method, without relations"""
    battery_id: _int
    note_id: _int


class BEPPPBattery_NotesCreateWithoutRelationsInput(BEPPPBattery_NotesOptionalCreateWithoutRelationsInput):
    """Required arguments to the BEPPPBattery_Notes create method, without relations"""


class BEPPPBattery_NotesCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'BEPPPBattery_NotesCreateWithoutRelationsInput'
    connect: 'BEPPPBattery_NotesWhereUniqueInput'


class BEPPPBattery_NotesCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['BEPPPBattery_NotesCreateWithoutRelationsInput', List['BEPPPBattery_NotesCreateWithoutRelationsInput']]
    connect: Union['BEPPPBattery_NotesWhereUniqueInput', List['BEPPPBattery_NotesWhereUniqueInput']]


_BEPPPBattery_NotesCompoundPrimaryKeyInner = TypedDict(
    '_BEPPPBattery_NotesCompoundPrimaryKeyInner',
    {
        'battery_id': '_int',
        'note_id': '_int',
    },
    total=True
)

_BEPPPBattery_NotesCompoundPrimaryKey = TypedDict(
    '_BEPPPBattery_NotesCompoundPrimaryKey',
    {
        'battery_id_note_id': '_BEPPPBattery_NotesCompoundPrimaryKeyInner',
    },
    total=True
)

BEPPPBattery_NotesWhereUniqueInput = _BEPPPBattery_NotesCompoundPrimaryKey


class BEPPPBattery_NotesUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    battery: 'BEPPPBatteryUpdateOneWithoutRelationsInput'
    note: 'NoteUpdateOneWithoutRelationsInput'


class BEPPPBattery_NotesUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""


class BEPPPBattery_NotesUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['BEPPPBattery_NotesCreateWithoutRelationsInput']
    connect: List['BEPPPBattery_NotesWhereUniqueInput']
    set: List['BEPPPBattery_NotesWhereUniqueInput']
    disconnect: List['BEPPPBattery_NotesWhereUniqueInput']
    delete: List['BEPPPBattery_NotesWhereUniqueInput']

    # TODO
    # update: List['BEPPPBattery_NotesUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['BEPPPBattery_NotesUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['BEPPPBattery_NotesScalarWhereInput']
    # upsert: List['BEPPPBattery_NotesUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['BEPPPBattery_NotesCreateOrConnectWithoutRelationsInput']


class BEPPPBattery_NotesUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'BEPPPBattery_NotesCreateWithoutRelationsInput'
    connect: 'BEPPPBattery_NotesWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'BEPPPBattery_NotesUpdateInput'
    # upsert: 'BEPPPBattery_NotesUpsertWithoutRelationsInput'
    # connectOrCreate: 'BEPPPBattery_NotesCreateOrConnectWithoutRelationsInput'


class BEPPPBattery_NotesUpsertInput(TypedDict):
    create: 'BEPPPBattery_NotesCreateInput'
    update: 'BEPPPBattery_NotesUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_BEPPPBattery_Notes_battery_id_OrderByInput = TypedDict(
    '_BEPPPBattery_Notes_battery_id_OrderByInput',
    {
        'battery_id': 'SortOrder',
    },
    total=True
)

_BEPPPBattery_Notes_note_id_OrderByInput = TypedDict(
    '_BEPPPBattery_Notes_note_id_OrderByInput',
    {
        'note_id': 'SortOrder',
    },
    total=True
)

BEPPPBattery_NotesOrderByInput = Union[
    '_BEPPPBattery_Notes_battery_id_OrderByInput',
    '_BEPPPBattery_Notes_note_id_OrderByInput',
]



# recursive BEPPPBattery_Notes types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

BEPPPBattery_NotesRelationFilter = TypedDict(
    'BEPPPBattery_NotesRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class BEPPPBattery_NotesListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class BEPPPBattery_NotesInclude(TypedDict, total=False):
    """BEPPPBattery_Notes relational arguments"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_Notes']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_Notes']


    

class SolarHubIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    users: Union[bool, 'FindManyUserArgsFromBEPPPBattery_NotesRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBEPPPBattery_NotesRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive1']


class SolarHubIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    users: Union[bool, 'FindManyUserArgsFromBEPPPBattery_NotesRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBEPPPBattery_NotesRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive2']


class SolarHubIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    users: Union[bool, 'FindManyUserArgsFromBEPPPBattery_NotesRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBEPPPBattery_NotesRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive3']


class SolarHubIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    users: Union[bool, 'FindManyUserArgsFromBEPPPBattery_NotesRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBEPPPBattery_NotesRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive4']


class SolarHubIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class SolarHubArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManySolarHubArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive1']


class UserIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive2']


class UserIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive3']


class UserIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive4']


class UserIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class UserArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyUserArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive1']


class NoteIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive2']


class NoteIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive3']


class NoteIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive4']


class NoteIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class NoteArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyNoteArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive1']


class BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive2']


class BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive3']


class BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive4']


class BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class BEPPPBattery_NotesArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    rental: Union[bool, 'RentalArgsFromBEPPPBattery_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive1']


class Rental_NotesIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    rental: Union[bool, 'RentalArgsFromBEPPPBattery_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive2']


class Rental_NotesIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    rental: Union[bool, 'RentalArgsFromBEPPPBattery_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive3']


class Rental_NotesIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    rental: Union[bool, 'RentalArgsFromBEPPPBattery_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive4']


class Rental_NotesIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class Rental_NotesArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyRental_NotesArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive1']


class PUE_NotesIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive2']


class PUE_NotesIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive3']


class PUE_NotesIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive4']


class PUE_NotesIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class PUE_NotesArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyPUE_NotesArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBattery_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive1']


class PUERental_NotesIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBattery_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive2']


class PUERental_NotesIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBattery_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive3']


class PUERental_NotesIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBattery_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromBEPPPBattery_NotesRecursive4']


class PUERental_NotesIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class PUERental_NotesArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyPUERental_NotesArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBattery_NotesRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery_NotesRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive1']


class BEPPPBatteryIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBattery_NotesRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery_NotesRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive2']


class BEPPPBatteryIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBattery_NotesRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery_NotesRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive3']


class BEPPPBatteryIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBattery_NotesRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery_NotesRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_NotesRecursive4']


class BEPPPBatteryIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class BEPPPBatteryArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyBEPPPBatteryArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive1']


class LiveDataIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive2']


class LiveDataIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive3']


class LiveDataIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive4']


class LiveDataIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class LiveDataArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyLiveDataArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive1']
    user: Union[bool, 'UserArgsFromBEPPPBattery_NotesRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive1']


class RentalIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive2']
    user: Union[bool, 'UserArgsFromBEPPPBattery_NotesRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive2']


class RentalIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive3']
    user: Union[bool, 'UserArgsFromBEPPPBattery_NotesRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive3']


class RentalIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBattery_NotesRecursive4']
    user: Union[bool, 'UserArgsFromBEPPPBattery_NotesRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBattery_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive4']


class RentalIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class RentalArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyRentalArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive1']


class ProductiveUseEquipmentIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive2']


class ProductiveUseEquipmentIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive3']


class ProductiveUseEquipmentIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery_NotesRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBattery_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive4']


class ProductiveUseEquipmentIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class ProductiveUseEquipmentArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyProductiveUseEquipmentArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive1']
    user: Union[bool, 'UserArgsFromBEPPPBattery_NotesRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive1']


class PUERentalIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive2']
    user: Union[bool, 'UserArgsFromBEPPPBattery_NotesRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive2']


class PUERentalIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive3']
    user: Union[bool, 'UserArgsFromBEPPPBattery_NotesRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive3']


class PUERentalIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBattery_NotesRecursive4']
    user: Union[bool, 'UserArgsFromBEPPPBattery_NotesRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBattery_NotesRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive4']


class PUERentalIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class PUERentalArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyPUERentalArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromBEPPPBattery_Notes(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromBEPPPBattery_NotesRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBattery_NotesRecursive1']


class BatteryPUERentalIncludeFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromBEPPPBattery_NotesRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBattery_NotesRecursive2']


class BatteryPUERentalIncludeFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromBEPPPBattery_NotesRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBattery_NotesRecursive3']


class BatteryPUERentalIncludeFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromBEPPPBattery_NotesRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBattery_NotesRecursive4']


class BatteryPUERentalIncludeFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery_Notes"""

    

class BatteryPUERentalArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    
    

class FindManyBatteryPUERentalArgsFromBEPPPBattery_Notes(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromBEPPPBattery_NotesRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyBEPPPBattery_NotesArgs = FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_Notes
FindFirstBEPPPBattery_NotesArgs = FindManyBEPPPBattery_NotesArgsFromBEPPPBattery_Notes


    

class BEPPPBattery_NotesWhereInput(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    battery: 'BEPPPBatteryRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['BEPPPBattery_NotesWhereInputRecursive1', List['BEPPPBattery_NotesWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['BEPPPBattery_NotesWhereInputRecursive1']
    OR: List['BEPPPBattery_NotesWhereInputRecursive1']
    NOT: List['BEPPPBattery_NotesWhereInputRecursive1']


class BEPPPBattery_NotesWhereInputRecursive1(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    battery: 'BEPPPBatteryRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['BEPPPBattery_NotesWhereInputRecursive2', List['BEPPPBattery_NotesWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['BEPPPBattery_NotesWhereInputRecursive2']
    OR: List['BEPPPBattery_NotesWhereInputRecursive2']
    NOT: List['BEPPPBattery_NotesWhereInputRecursive2']


class BEPPPBattery_NotesWhereInputRecursive2(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    battery: 'BEPPPBatteryRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['BEPPPBattery_NotesWhereInputRecursive3', List['BEPPPBattery_NotesWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['BEPPPBattery_NotesWhereInputRecursive3']
    OR: List['BEPPPBattery_NotesWhereInputRecursive3']
    NOT: List['BEPPPBattery_NotesWhereInputRecursive3']


class BEPPPBattery_NotesWhereInputRecursive3(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    battery: 'BEPPPBatteryRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['BEPPPBattery_NotesWhereInputRecursive4', List['BEPPPBattery_NotesWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['BEPPPBattery_NotesWhereInputRecursive4']
    OR: List['BEPPPBattery_NotesWhereInputRecursive4']
    NOT: List['BEPPPBattery_NotesWhereInputRecursive4']


class BEPPPBattery_NotesWhereInputRecursive4(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    battery: 'BEPPPBatteryRelationFilter'
    note: 'NoteRelationFilter'



# aggregate BEPPPBattery_Notes types


    

class BEPPPBattery_NotesScalarWhereWithAggregatesInput(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive1']
    OR: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive1']
    NOT: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive1']


class BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive2']
    OR: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive2']
    NOT: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive2']


class BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive3']
    OR: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive3']
    NOT: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive3']


class BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive4']
    OR: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive4']
    NOT: List['BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive4']


class BEPPPBattery_NotesScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """BEPPPBattery_Notes arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']



class BEPPPBattery_NotesGroupByOutput(TypedDict, total=False):
    battery_id: _int
    note_id: _int
    _sum: 'BEPPPBattery_NotesSumAggregateOutput'
    _avg: 'BEPPPBattery_NotesAvgAggregateOutput'
    _min: 'BEPPPBattery_NotesMinAggregateOutput'
    _max: 'BEPPPBattery_NotesMaxAggregateOutput'
    _count: 'BEPPPBattery_NotesCountAggregateOutput'


class BEPPPBattery_NotesAvgAggregateOutput(TypedDict, total=False):
    """BEPPPBattery_Notes output for aggregating averages"""
    battery_id: float
    note_id: float


class BEPPPBattery_NotesSumAggregateOutput(TypedDict, total=False):
    """BEPPPBattery_Notes output for aggregating sums"""
    battery_id: _int
    note_id: _int


class BEPPPBattery_NotesScalarAggregateOutput(TypedDict, total=False):
    """BEPPPBattery_Notes output including scalar fields"""
    battery_id: _int
    note_id: _int


BEPPPBattery_NotesMinAggregateOutput = BEPPPBattery_NotesScalarAggregateOutput
BEPPPBattery_NotesMaxAggregateOutput = BEPPPBattery_NotesScalarAggregateOutput


class BEPPPBattery_NotesMaxAggregateInput(TypedDict, total=False):
    """BEPPPBattery_Notes input for aggregating by max"""
    battery_id: bool
    note_id: bool


class BEPPPBattery_NotesMinAggregateInput(TypedDict, total=False):
    """BEPPPBattery_Notes input for aggregating by min"""
    battery_id: bool
    note_id: bool


class BEPPPBattery_NotesNumberAggregateInput(TypedDict, total=False):
    """BEPPPBattery_Notes input for aggregating numbers"""
    battery_id: bool
    note_id: bool


BEPPPBattery_NotesAvgAggregateInput = BEPPPBattery_NotesNumberAggregateInput
BEPPPBattery_NotesSumAggregateInput = BEPPPBattery_NotesNumberAggregateInput


BEPPPBattery_NotesCountAggregateInput = TypedDict(
    'BEPPPBattery_NotesCountAggregateInput',
    {
        'battery_id': bool,
        'note_id': bool,
        '_all': bool,
    },
    total=False,
)

BEPPPBattery_NotesCountAggregateOutput = TypedDict(
    'BEPPPBattery_NotesCountAggregateOutput',
    {
        'battery_id': int,
        'note_id': int,
        '_all': int,
    },
    total=False,
)


BEPPPBattery_NotesKeys = Literal[
    'battery_id',
    'note_id',
    'battery',
    'note',
]
BEPPPBattery_NotesScalarFieldKeys = Literal[
    'battery_id',
    'note_id',
]
BEPPPBattery_NotesScalarFieldKeysT = TypeVar('BEPPPBattery_NotesScalarFieldKeysT', bound=BEPPPBattery_NotesScalarFieldKeys)

BEPPPBattery_NotesRelationalFieldKeys = Literal[
        'battery',
        'note',
    ]

# Rental_Notes types

class Rental_NotesOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Rental_Notes create method"""
    rental_id: _int
    note_id: _int
    rental: 'RentalCreateNestedWithoutRelationsInput'
    note: 'NoteCreateNestedWithoutRelationsInput'


class Rental_NotesCreateInput(Rental_NotesOptionalCreateInput):
    """Required arguments to the Rental_Notes create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class Rental_NotesOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Rental_Notes create method, without relations"""
    rental_id: _int
    note_id: _int


class Rental_NotesCreateWithoutRelationsInput(Rental_NotesOptionalCreateWithoutRelationsInput):
    """Required arguments to the Rental_Notes create method, without relations"""


class Rental_NotesCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'Rental_NotesCreateWithoutRelationsInput'
    connect: 'Rental_NotesWhereUniqueInput'


class Rental_NotesCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['Rental_NotesCreateWithoutRelationsInput', List['Rental_NotesCreateWithoutRelationsInput']]
    connect: Union['Rental_NotesWhereUniqueInput', List['Rental_NotesWhereUniqueInput']]


_Rental_NotesCompoundPrimaryKeyInner = TypedDict(
    '_Rental_NotesCompoundPrimaryKeyInner',
    {
        'rental_id': '_int',
        'note_id': '_int',
    },
    total=True
)

_Rental_NotesCompoundPrimaryKey = TypedDict(
    '_Rental_NotesCompoundPrimaryKey',
    {
        'rental_id_note_id': '_Rental_NotesCompoundPrimaryKeyInner',
    },
    total=True
)

Rental_NotesWhereUniqueInput = _Rental_NotesCompoundPrimaryKey


class Rental_NotesUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    rental: 'RentalUpdateOneWithoutRelationsInput'
    note: 'NoteUpdateOneWithoutRelationsInput'


class Rental_NotesUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""


class Rental_NotesUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['Rental_NotesCreateWithoutRelationsInput']
    connect: List['Rental_NotesWhereUniqueInput']
    set: List['Rental_NotesWhereUniqueInput']
    disconnect: List['Rental_NotesWhereUniqueInput']
    delete: List['Rental_NotesWhereUniqueInput']

    # TODO
    # update: List['Rental_NotesUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['Rental_NotesUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['Rental_NotesScalarWhereInput']
    # upsert: List['Rental_NotesUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['Rental_NotesCreateOrConnectWithoutRelationsInput']


class Rental_NotesUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'Rental_NotesCreateWithoutRelationsInput'
    connect: 'Rental_NotesWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'Rental_NotesUpdateInput'
    # upsert: 'Rental_NotesUpsertWithoutRelationsInput'
    # connectOrCreate: 'Rental_NotesCreateOrConnectWithoutRelationsInput'


class Rental_NotesUpsertInput(TypedDict):
    create: 'Rental_NotesCreateInput'
    update: 'Rental_NotesUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Rental_Notes_rental_id_OrderByInput = TypedDict(
    '_Rental_Notes_rental_id_OrderByInput',
    {
        'rental_id': 'SortOrder',
    },
    total=True
)

_Rental_Notes_note_id_OrderByInput = TypedDict(
    '_Rental_Notes_note_id_OrderByInput',
    {
        'note_id': 'SortOrder',
    },
    total=True
)

Rental_NotesOrderByInput = Union[
    '_Rental_Notes_rental_id_OrderByInput',
    '_Rental_Notes_note_id_OrderByInput',
]



# recursive Rental_Notes types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

Rental_NotesRelationFilter = TypedDict(
    'Rental_NotesRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class Rental_NotesListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class Rental_NotesInclude(TypedDict, total=False):
    """Rental_Notes relational arguments"""
    rental: Union[bool, 'RentalArgsFromRental_Notes']
    note: Union[bool, 'NoteArgsFromRental_Notes']


    

class SolarHubIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    users: Union[bool, 'FindManyUserArgsFromRental_NotesRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromRental_NotesRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromRental_NotesRecursive1']


class SolarHubIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    users: Union[bool, 'FindManyUserArgsFromRental_NotesRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromRental_NotesRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromRental_NotesRecursive2']


class SolarHubIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    users: Union[bool, 'FindManyUserArgsFromRental_NotesRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromRental_NotesRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromRental_NotesRecursive3']


class SolarHubIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    users: Union[bool, 'FindManyUserArgsFromRental_NotesRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromRental_NotesRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromRental_NotesRecursive4']


class SolarHubIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class SolarHubArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManySolarHubArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromRental_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRental_NotesRecursive1']


class UserIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromRental_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRental_NotesRecursive2']


class UserIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromRental_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRental_NotesRecursive3']


class UserIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromRental_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRental_NotesRecursive4']


class UserIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class UserArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyUserArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromRental_NotesRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromRental_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromRental_NotesRecursive1']


class NoteIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromRental_NotesRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromRental_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromRental_NotesRecursive2']


class NoteIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromRental_NotesRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromRental_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromRental_NotesRecursive3']


class NoteIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromRental_NotesRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromRental_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromRental_NotesRecursive4']


class NoteIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class NoteArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyNoteArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive1']


class BEPPPBattery_NotesIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive2']


class BEPPPBattery_NotesIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive3']


class BEPPPBattery_NotesIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive4']


class BEPPPBattery_NotesIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class BEPPPBattery_NotesArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyBEPPPBattery_NotesArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    rental: Union[bool, 'RentalArgsFromRental_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive1']


class Rental_NotesIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    rental: Union[bool, 'RentalArgsFromRental_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive2']


class Rental_NotesIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    rental: Union[bool, 'RentalArgsFromRental_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive3']


class Rental_NotesIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    rental: Union[bool, 'RentalArgsFromRental_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive4']


class Rental_NotesIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class Rental_NotesArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyRental_NotesArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRental_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive1']


class PUE_NotesIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRental_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive2']


class PUE_NotesIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRental_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive3']


class PUE_NotesIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRental_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive4']


class PUE_NotesIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class PUE_NotesArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyPUE_NotesArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromRental_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive1']


class PUERental_NotesIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromRental_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive2']


class PUERental_NotesIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromRental_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive3']


class PUERental_NotesIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromRental_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromRental_NotesRecursive4']


class PUERental_NotesIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class PUERental_NotesArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyPUERental_NotesArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromRental_NotesRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromRental_NotesRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive1']


class BEPPPBatteryIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromRental_NotesRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromRental_NotesRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive2']


class BEPPPBatteryIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromRental_NotesRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromRental_NotesRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive3']


class BEPPPBatteryIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromRental_NotesRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromRental_NotesRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRental_NotesRecursive4']


class BEPPPBatteryIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class BEPPPBatteryArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyBEPPPBatteryArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive1']


class LiveDataIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive2']


class LiveDataIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive3']


class LiveDataIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive4']


class LiveDataIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class LiveDataArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyLiveDataArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive1']
    user: Union[bool, 'UserArgsFromRental_NotesRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRental_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental_NotesRecursive1']


class RentalIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive2']
    user: Union[bool, 'UserArgsFromRental_NotesRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRental_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental_NotesRecursive2']


class RentalIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive3']
    user: Union[bool, 'UserArgsFromRental_NotesRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRental_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental_NotesRecursive3']


class RentalIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental_NotesRecursive4']
    user: Union[bool, 'UserArgsFromRental_NotesRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRental_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental_NotesRecursive4']


class RentalIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class RentalArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyRentalArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromRental_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRental_NotesRecursive1']


class ProductiveUseEquipmentIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromRental_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRental_NotesRecursive2']


class ProductiveUseEquipmentIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromRental_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRental_NotesRecursive3']


class ProductiveUseEquipmentIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromRental_NotesRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromRental_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRental_NotesRecursive4']


class ProductiveUseEquipmentIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class ProductiveUseEquipmentArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyProductiveUseEquipmentArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRental_NotesRecursive1']
    user: Union[bool, 'UserArgsFromRental_NotesRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromRental_NotesRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental_NotesRecursive1']


class PUERentalIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRental_NotesRecursive2']
    user: Union[bool, 'UserArgsFromRental_NotesRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromRental_NotesRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental_NotesRecursive2']


class PUERentalIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRental_NotesRecursive3']
    user: Union[bool, 'UserArgsFromRental_NotesRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromRental_NotesRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental_NotesRecursive3']


class PUERentalIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRental_NotesRecursive4']
    user: Union[bool, 'UserArgsFromRental_NotesRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromRental_NotesRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental_NotesRecursive4']


class PUERentalIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class PUERentalArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyPUERentalArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromRental_Notes(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromRental_NotesRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromRental_NotesRecursive1']


class BatteryPUERentalIncludeFromRental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromRental_NotesRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromRental_NotesRecursive2']


class BatteryPUERentalIncludeFromRental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromRental_NotesRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromRental_NotesRecursive3']


class BatteryPUERentalIncludeFromRental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromRental_NotesRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromRental_NotesRecursive4']


class BatteryPUERentalIncludeFromRental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for Rental_Notes"""

    

class BatteryPUERentalArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    
    

class FindManyBatteryPUERentalArgsFromRental_Notes(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromRental_NotesRecursive1(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromRental_NotesRecursive2(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromRental_NotesRecursive3(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromRental_NotesRecursive4(TypedDict, total=False):
    """Arguments for Rental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyRental_NotesArgs = FindManyRental_NotesArgsFromRental_Notes
FindFirstRental_NotesArgs = FindManyRental_NotesArgsFromRental_Notes


    

class Rental_NotesWhereInput(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    rental: 'RentalRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['Rental_NotesWhereInputRecursive1', List['Rental_NotesWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['Rental_NotesWhereInputRecursive1']
    OR: List['Rental_NotesWhereInputRecursive1']
    NOT: List['Rental_NotesWhereInputRecursive1']


class Rental_NotesWhereInputRecursive1(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    rental: 'RentalRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['Rental_NotesWhereInputRecursive2', List['Rental_NotesWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['Rental_NotesWhereInputRecursive2']
    OR: List['Rental_NotesWhereInputRecursive2']
    NOT: List['Rental_NotesWhereInputRecursive2']


class Rental_NotesWhereInputRecursive2(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    rental: 'RentalRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['Rental_NotesWhereInputRecursive3', List['Rental_NotesWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['Rental_NotesWhereInputRecursive3']
    OR: List['Rental_NotesWhereInputRecursive3']
    NOT: List['Rental_NotesWhereInputRecursive3']


class Rental_NotesWhereInputRecursive3(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    rental: 'RentalRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['Rental_NotesWhereInputRecursive4', List['Rental_NotesWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['Rental_NotesWhereInputRecursive4']
    OR: List['Rental_NotesWhereInputRecursive4']
    NOT: List['Rental_NotesWhereInputRecursive4']


class Rental_NotesWhereInputRecursive4(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    rental: 'RentalRelationFilter'
    note: 'NoteRelationFilter'



# aggregate Rental_Notes types


    

class Rental_NotesScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['Rental_NotesScalarWhereWithAggregatesInputRecursive1']
    OR: List['Rental_NotesScalarWhereWithAggregatesInputRecursive1']
    NOT: List['Rental_NotesScalarWhereWithAggregatesInputRecursive1']


class Rental_NotesScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['Rental_NotesScalarWhereWithAggregatesInputRecursive2']
    OR: List['Rental_NotesScalarWhereWithAggregatesInputRecursive2']
    NOT: List['Rental_NotesScalarWhereWithAggregatesInputRecursive2']


class Rental_NotesScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['Rental_NotesScalarWhereWithAggregatesInputRecursive3']
    OR: List['Rental_NotesScalarWhereWithAggregatesInputRecursive3']
    NOT: List['Rental_NotesScalarWhereWithAggregatesInputRecursive3']


class Rental_NotesScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['Rental_NotesScalarWhereWithAggregatesInputRecursive4']
    OR: List['Rental_NotesScalarWhereWithAggregatesInputRecursive4']
    NOT: List['Rental_NotesScalarWhereWithAggregatesInputRecursive4']


class Rental_NotesScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Rental_Notes arguments for searching"""
    rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']



class Rental_NotesGroupByOutput(TypedDict, total=False):
    rental_id: _int
    note_id: _int
    _sum: 'Rental_NotesSumAggregateOutput'
    _avg: 'Rental_NotesAvgAggregateOutput'
    _min: 'Rental_NotesMinAggregateOutput'
    _max: 'Rental_NotesMaxAggregateOutput'
    _count: 'Rental_NotesCountAggregateOutput'


class Rental_NotesAvgAggregateOutput(TypedDict, total=False):
    """Rental_Notes output for aggregating averages"""
    rental_id: float
    note_id: float


class Rental_NotesSumAggregateOutput(TypedDict, total=False):
    """Rental_Notes output for aggregating sums"""
    rental_id: _int
    note_id: _int


class Rental_NotesScalarAggregateOutput(TypedDict, total=False):
    """Rental_Notes output including scalar fields"""
    rental_id: _int
    note_id: _int


Rental_NotesMinAggregateOutput = Rental_NotesScalarAggregateOutput
Rental_NotesMaxAggregateOutput = Rental_NotesScalarAggregateOutput


class Rental_NotesMaxAggregateInput(TypedDict, total=False):
    """Rental_Notes input for aggregating by max"""
    rental_id: bool
    note_id: bool


class Rental_NotesMinAggregateInput(TypedDict, total=False):
    """Rental_Notes input for aggregating by min"""
    rental_id: bool
    note_id: bool


class Rental_NotesNumberAggregateInput(TypedDict, total=False):
    """Rental_Notes input for aggregating numbers"""
    rental_id: bool
    note_id: bool


Rental_NotesAvgAggregateInput = Rental_NotesNumberAggregateInput
Rental_NotesSumAggregateInput = Rental_NotesNumberAggregateInput


Rental_NotesCountAggregateInput = TypedDict(
    'Rental_NotesCountAggregateInput',
    {
        'rental_id': bool,
        'note_id': bool,
        '_all': bool,
    },
    total=False,
)

Rental_NotesCountAggregateOutput = TypedDict(
    'Rental_NotesCountAggregateOutput',
    {
        'rental_id': int,
        'note_id': int,
        '_all': int,
    },
    total=False,
)


Rental_NotesKeys = Literal[
    'rental_id',
    'note_id',
    'rental',
    'note',
]
Rental_NotesScalarFieldKeys = Literal[
    'rental_id',
    'note_id',
]
Rental_NotesScalarFieldKeysT = TypeVar('Rental_NotesScalarFieldKeysT', bound=Rental_NotesScalarFieldKeys)

Rental_NotesRelationalFieldKeys = Literal[
        'rental',
        'note',
    ]

# PUE_Notes types

class PUE_NotesOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the PUE_Notes create method"""
    pue_id: _int
    note_id: _int
    pue: 'ProductiveUseEquipmentCreateNestedWithoutRelationsInput'
    note: 'NoteCreateNestedWithoutRelationsInput'


class PUE_NotesCreateInput(PUE_NotesOptionalCreateInput):
    """Required arguments to the PUE_Notes create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class PUE_NotesOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the PUE_Notes create method, without relations"""
    pue_id: _int
    note_id: _int


class PUE_NotesCreateWithoutRelationsInput(PUE_NotesOptionalCreateWithoutRelationsInput):
    """Required arguments to the PUE_Notes create method, without relations"""


class PUE_NotesCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'PUE_NotesCreateWithoutRelationsInput'
    connect: 'PUE_NotesWhereUniqueInput'


class PUE_NotesCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['PUE_NotesCreateWithoutRelationsInput', List['PUE_NotesCreateWithoutRelationsInput']]
    connect: Union['PUE_NotesWhereUniqueInput', List['PUE_NotesWhereUniqueInput']]


_PUE_NotesCompoundPrimaryKeyInner = TypedDict(
    '_PUE_NotesCompoundPrimaryKeyInner',
    {
        'pue_id': '_int',
        'note_id': '_int',
    },
    total=True
)

_PUE_NotesCompoundPrimaryKey = TypedDict(
    '_PUE_NotesCompoundPrimaryKey',
    {
        'pue_id_note_id': '_PUE_NotesCompoundPrimaryKeyInner',
    },
    total=True
)

PUE_NotesWhereUniqueInput = _PUE_NotesCompoundPrimaryKey


class PUE_NotesUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    pue: 'ProductiveUseEquipmentUpdateOneWithoutRelationsInput'
    note: 'NoteUpdateOneWithoutRelationsInput'


class PUE_NotesUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""


class PUE_NotesUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['PUE_NotesCreateWithoutRelationsInput']
    connect: List['PUE_NotesWhereUniqueInput']
    set: List['PUE_NotesWhereUniqueInput']
    disconnect: List['PUE_NotesWhereUniqueInput']
    delete: List['PUE_NotesWhereUniqueInput']

    # TODO
    # update: List['PUE_NotesUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['PUE_NotesUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['PUE_NotesScalarWhereInput']
    # upsert: List['PUE_NotesUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['PUE_NotesCreateOrConnectWithoutRelationsInput']


class PUE_NotesUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'PUE_NotesCreateWithoutRelationsInput'
    connect: 'PUE_NotesWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'PUE_NotesUpdateInput'
    # upsert: 'PUE_NotesUpsertWithoutRelationsInput'
    # connectOrCreate: 'PUE_NotesCreateOrConnectWithoutRelationsInput'


class PUE_NotesUpsertInput(TypedDict):
    create: 'PUE_NotesCreateInput'
    update: 'PUE_NotesUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_PUE_Notes_pue_id_OrderByInput = TypedDict(
    '_PUE_Notes_pue_id_OrderByInput',
    {
        'pue_id': 'SortOrder',
    },
    total=True
)

_PUE_Notes_note_id_OrderByInput = TypedDict(
    '_PUE_Notes_note_id_OrderByInput',
    {
        'note_id': 'SortOrder',
    },
    total=True
)

PUE_NotesOrderByInput = Union[
    '_PUE_Notes_pue_id_OrderByInput',
    '_PUE_Notes_note_id_OrderByInput',
]



# recursive PUE_Notes types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

PUE_NotesRelationFilter = TypedDict(
    'PUE_NotesRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class PUE_NotesListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class PUE_NotesInclude(TypedDict, total=False):
    """PUE_Notes relational arguments"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_Notes']
    note: Union[bool, 'NoteArgsFromPUE_Notes']


    

class SolarHubIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    users: Union[bool, 'FindManyUserArgsFromPUE_NotesRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUE_NotesRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUE_NotesRecursive1']


class SolarHubIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    users: Union[bool, 'FindManyUserArgsFromPUE_NotesRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUE_NotesRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUE_NotesRecursive2']


class SolarHubIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    users: Union[bool, 'FindManyUserArgsFromPUE_NotesRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUE_NotesRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUE_NotesRecursive3']


class SolarHubIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    users: Union[bool, 'FindManyUserArgsFromPUE_NotesRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUE_NotesRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUE_NotesRecursive4']


class SolarHubIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class SolarHubArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManySolarHubArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUE_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUE_NotesRecursive1']


class UserIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUE_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUE_NotesRecursive2']


class UserIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUE_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUE_NotesRecursive3']


class UserIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUE_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUE_NotesRecursive4']


class UserIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class UserArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyUserArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUE_NotesRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUE_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUE_NotesRecursive1']


class NoteIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUE_NotesRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUE_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUE_NotesRecursive2']


class NoteIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUE_NotesRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUE_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUE_NotesRecursive3']


class NoteIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUE_NotesRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUE_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUE_NotesRecursive4']


class NoteIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class NoteArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyNoteArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive1']


class BEPPPBattery_NotesIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive2']


class BEPPPBattery_NotesIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive3']


class BEPPPBattery_NotesIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive4']


class BEPPPBattery_NotesIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class BEPPPBattery_NotesArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyBEPPPBattery_NotesArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    rental: Union[bool, 'RentalArgsFromPUE_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive1']


class Rental_NotesIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    rental: Union[bool, 'RentalArgsFromPUE_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive2']


class Rental_NotesIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    rental: Union[bool, 'RentalArgsFromPUE_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive3']


class Rental_NotesIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    rental: Union[bool, 'RentalArgsFromPUE_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive4']


class Rental_NotesIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class Rental_NotesArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyRental_NotesArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive1']


class PUE_NotesIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive2']


class PUE_NotesIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive3']


class PUE_NotesIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive4']


class PUE_NotesIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class PUE_NotesArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyPUE_NotesArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUE_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive1']


class PUERental_NotesIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUE_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive2']


class PUERental_NotesIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUE_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive3']


class PUERental_NotesIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUE_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromPUE_NotesRecursive4']


class PUERental_NotesIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class PUERental_NotesArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyPUERental_NotesArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUE_NotesRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromPUE_NotesRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive1']


class BEPPPBatteryIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUE_NotesRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromPUE_NotesRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive2']


class BEPPPBatteryIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUE_NotesRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromPUE_NotesRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive3']


class BEPPPBatteryIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUE_NotesRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromPUE_NotesRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUE_NotesRecursive4']


class BEPPPBatteryIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class BEPPPBatteryArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyBEPPPBatteryArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive1']


class LiveDataIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive2']


class LiveDataIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive3']


class LiveDataIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive4']


class LiveDataIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class LiveDataArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyLiveDataArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive1']
    user: Union[bool, 'UserArgsFromPUE_NotesRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUE_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUE_NotesRecursive1']


class RentalIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive2']
    user: Union[bool, 'UserArgsFromPUE_NotesRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUE_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUE_NotesRecursive2']


class RentalIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive3']
    user: Union[bool, 'UserArgsFromPUE_NotesRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUE_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUE_NotesRecursive3']


class RentalIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUE_NotesRecursive4']
    user: Union[bool, 'UserArgsFromPUE_NotesRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUE_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUE_NotesRecursive4']


class RentalIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class RentalArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyRentalArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUE_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUE_NotesRecursive1']


class ProductiveUseEquipmentIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUE_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUE_NotesRecursive2']


class ProductiveUseEquipmentIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUE_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUE_NotesRecursive3']


class ProductiveUseEquipmentIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUE_NotesRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUE_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUE_NotesRecursive4']


class ProductiveUseEquipmentIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class ProductiveUseEquipmentArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyProductiveUseEquipmentArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_NotesRecursive1']
    user: Union[bool, 'UserArgsFromPUE_NotesRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUE_NotesRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUE_NotesRecursive1']


class PUERentalIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_NotesRecursive2']
    user: Union[bool, 'UserArgsFromPUE_NotesRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUE_NotesRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUE_NotesRecursive2']


class PUERentalIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_NotesRecursive3']
    user: Union[bool, 'UserArgsFromPUE_NotesRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUE_NotesRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUE_NotesRecursive3']


class PUERentalIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUE_NotesRecursive4']
    user: Union[bool, 'UserArgsFromPUE_NotesRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUE_NotesRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUE_NotesRecursive4']


class PUERentalIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class PUERentalArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyPUERentalArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromPUE_Notes(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromPUE_NotesRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromPUE_NotesRecursive1']


class BatteryPUERentalIncludeFromPUE_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromPUE_NotesRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromPUE_NotesRecursive2']


class BatteryPUERentalIncludeFromPUE_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromPUE_NotesRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromPUE_NotesRecursive3']


class BatteryPUERentalIncludeFromPUE_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromPUE_NotesRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromPUE_NotesRecursive4']


class BatteryPUERentalIncludeFromPUE_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUE_Notes"""

    

class BatteryPUERentalArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    
    

class FindManyBatteryPUERentalArgsFromPUE_Notes(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromPUE_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromPUE_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromPUE_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromPUE_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUE_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyPUE_NotesArgs = FindManyPUE_NotesArgsFromPUE_Notes
FindFirstPUE_NotesArgs = FindManyPUE_NotesArgsFromPUE_Notes


    

class PUE_NotesWhereInput(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['PUE_NotesWhereInputRecursive1', List['PUE_NotesWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['PUE_NotesWhereInputRecursive1']
    OR: List['PUE_NotesWhereInputRecursive1']
    NOT: List['PUE_NotesWhereInputRecursive1']


class PUE_NotesWhereInputRecursive1(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['PUE_NotesWhereInputRecursive2', List['PUE_NotesWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['PUE_NotesWhereInputRecursive2']
    OR: List['PUE_NotesWhereInputRecursive2']
    NOT: List['PUE_NotesWhereInputRecursive2']


class PUE_NotesWhereInputRecursive2(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['PUE_NotesWhereInputRecursive3', List['PUE_NotesWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['PUE_NotesWhereInputRecursive3']
    OR: List['PUE_NotesWhereInputRecursive3']
    NOT: List['PUE_NotesWhereInputRecursive3']


class PUE_NotesWhereInputRecursive3(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['PUE_NotesWhereInputRecursive4', List['PUE_NotesWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['PUE_NotesWhereInputRecursive4']
    OR: List['PUE_NotesWhereInputRecursive4']
    NOT: List['PUE_NotesWhereInputRecursive4']


class PUE_NotesWhereInputRecursive4(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    note: 'NoteRelationFilter'



# aggregate PUE_Notes types


    

class PUE_NotesScalarWhereWithAggregatesInput(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['PUE_NotesScalarWhereWithAggregatesInputRecursive1']
    OR: List['PUE_NotesScalarWhereWithAggregatesInputRecursive1']
    NOT: List['PUE_NotesScalarWhereWithAggregatesInputRecursive1']


class PUE_NotesScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['PUE_NotesScalarWhereWithAggregatesInputRecursive2']
    OR: List['PUE_NotesScalarWhereWithAggregatesInputRecursive2']
    NOT: List['PUE_NotesScalarWhereWithAggregatesInputRecursive2']


class PUE_NotesScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['PUE_NotesScalarWhereWithAggregatesInputRecursive3']
    OR: List['PUE_NotesScalarWhereWithAggregatesInputRecursive3']
    NOT: List['PUE_NotesScalarWhereWithAggregatesInputRecursive3']


class PUE_NotesScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['PUE_NotesScalarWhereWithAggregatesInputRecursive4']
    OR: List['PUE_NotesScalarWhereWithAggregatesInputRecursive4']
    NOT: List['PUE_NotesScalarWhereWithAggregatesInputRecursive4']


class PUE_NotesScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """PUE_Notes arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']



class PUE_NotesGroupByOutput(TypedDict, total=False):
    pue_id: _int
    note_id: _int
    _sum: 'PUE_NotesSumAggregateOutput'
    _avg: 'PUE_NotesAvgAggregateOutput'
    _min: 'PUE_NotesMinAggregateOutput'
    _max: 'PUE_NotesMaxAggregateOutput'
    _count: 'PUE_NotesCountAggregateOutput'


class PUE_NotesAvgAggregateOutput(TypedDict, total=False):
    """PUE_Notes output for aggregating averages"""
    pue_id: float
    note_id: float


class PUE_NotesSumAggregateOutput(TypedDict, total=False):
    """PUE_Notes output for aggregating sums"""
    pue_id: _int
    note_id: _int


class PUE_NotesScalarAggregateOutput(TypedDict, total=False):
    """PUE_Notes output including scalar fields"""
    pue_id: _int
    note_id: _int


PUE_NotesMinAggregateOutput = PUE_NotesScalarAggregateOutput
PUE_NotesMaxAggregateOutput = PUE_NotesScalarAggregateOutput


class PUE_NotesMaxAggregateInput(TypedDict, total=False):
    """PUE_Notes input for aggregating by max"""
    pue_id: bool
    note_id: bool


class PUE_NotesMinAggregateInput(TypedDict, total=False):
    """PUE_Notes input for aggregating by min"""
    pue_id: bool
    note_id: bool


class PUE_NotesNumberAggregateInput(TypedDict, total=False):
    """PUE_Notes input for aggregating numbers"""
    pue_id: bool
    note_id: bool


PUE_NotesAvgAggregateInput = PUE_NotesNumberAggregateInput
PUE_NotesSumAggregateInput = PUE_NotesNumberAggregateInput


PUE_NotesCountAggregateInput = TypedDict(
    'PUE_NotesCountAggregateInput',
    {
        'pue_id': bool,
        'note_id': bool,
        '_all': bool,
    },
    total=False,
)

PUE_NotesCountAggregateOutput = TypedDict(
    'PUE_NotesCountAggregateOutput',
    {
        'pue_id': int,
        'note_id': int,
        '_all': int,
    },
    total=False,
)


PUE_NotesKeys = Literal[
    'pue_id',
    'note_id',
    'pue',
    'note',
]
PUE_NotesScalarFieldKeys = Literal[
    'pue_id',
    'note_id',
]
PUE_NotesScalarFieldKeysT = TypeVar('PUE_NotesScalarFieldKeysT', bound=PUE_NotesScalarFieldKeys)

PUE_NotesRelationalFieldKeys = Literal[
        'pue',
        'note',
    ]

# PUERental_Notes types

class PUERental_NotesOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the PUERental_Notes create method"""
    pue_rental_id: _int
    note_id: _int
    pue_rental: 'PUERentalCreateNestedWithoutRelationsInput'
    note: 'NoteCreateNestedWithoutRelationsInput'


class PUERental_NotesCreateInput(PUERental_NotesOptionalCreateInput):
    """Required arguments to the PUERental_Notes create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class PUERental_NotesOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the PUERental_Notes create method, without relations"""
    pue_rental_id: _int
    note_id: _int


class PUERental_NotesCreateWithoutRelationsInput(PUERental_NotesOptionalCreateWithoutRelationsInput):
    """Required arguments to the PUERental_Notes create method, without relations"""


class PUERental_NotesCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'PUERental_NotesCreateWithoutRelationsInput'
    connect: 'PUERental_NotesWhereUniqueInput'


class PUERental_NotesCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['PUERental_NotesCreateWithoutRelationsInput', List['PUERental_NotesCreateWithoutRelationsInput']]
    connect: Union['PUERental_NotesWhereUniqueInput', List['PUERental_NotesWhereUniqueInput']]


_PUERental_NotesCompoundPrimaryKeyInner = TypedDict(
    '_PUERental_NotesCompoundPrimaryKeyInner',
    {
        'pue_rental_id': '_int',
        'note_id': '_int',
    },
    total=True
)

_PUERental_NotesCompoundPrimaryKey = TypedDict(
    '_PUERental_NotesCompoundPrimaryKey',
    {
        'pue_rental_id_note_id': '_PUERental_NotesCompoundPrimaryKeyInner',
    },
    total=True
)

PUERental_NotesWhereUniqueInput = _PUERental_NotesCompoundPrimaryKey


class PUERental_NotesUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    pue_rental: 'PUERentalUpdateOneWithoutRelationsInput'
    note: 'NoteUpdateOneWithoutRelationsInput'


class PUERental_NotesUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""


class PUERental_NotesUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['PUERental_NotesCreateWithoutRelationsInput']
    connect: List['PUERental_NotesWhereUniqueInput']
    set: List['PUERental_NotesWhereUniqueInput']
    disconnect: List['PUERental_NotesWhereUniqueInput']
    delete: List['PUERental_NotesWhereUniqueInput']

    # TODO
    # update: List['PUERental_NotesUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['PUERental_NotesUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['PUERental_NotesScalarWhereInput']
    # upsert: List['PUERental_NotesUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['PUERental_NotesCreateOrConnectWithoutRelationsInput']


class PUERental_NotesUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'PUERental_NotesCreateWithoutRelationsInput'
    connect: 'PUERental_NotesWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'PUERental_NotesUpdateInput'
    # upsert: 'PUERental_NotesUpsertWithoutRelationsInput'
    # connectOrCreate: 'PUERental_NotesCreateOrConnectWithoutRelationsInput'


class PUERental_NotesUpsertInput(TypedDict):
    create: 'PUERental_NotesCreateInput'
    update: 'PUERental_NotesUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_PUERental_Notes_pue_rental_id_OrderByInput = TypedDict(
    '_PUERental_Notes_pue_rental_id_OrderByInput',
    {
        'pue_rental_id': 'SortOrder',
    },
    total=True
)

_PUERental_Notes_note_id_OrderByInput = TypedDict(
    '_PUERental_Notes_note_id_OrderByInput',
    {
        'note_id': 'SortOrder',
    },
    total=True
)

PUERental_NotesOrderByInput = Union[
    '_PUERental_Notes_pue_rental_id_OrderByInput',
    '_PUERental_Notes_note_id_OrderByInput',
]



# recursive PUERental_Notes types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

PUERental_NotesRelationFilter = TypedDict(
    'PUERental_NotesRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class PUERental_NotesListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class PUERental_NotesInclude(TypedDict, total=False):
    """PUERental_Notes relational arguments"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_Notes']
    note: Union[bool, 'NoteArgsFromPUERental_Notes']


    

class SolarHubIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    users: Union[bool, 'FindManyUserArgsFromPUERental_NotesRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUERental_NotesRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUERental_NotesRecursive1']


class SolarHubIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    users: Union[bool, 'FindManyUserArgsFromPUERental_NotesRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUERental_NotesRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUERental_NotesRecursive2']


class SolarHubIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    users: Union[bool, 'FindManyUserArgsFromPUERental_NotesRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUERental_NotesRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUERental_NotesRecursive3']


class SolarHubIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    users: Union[bool, 'FindManyUserArgsFromPUERental_NotesRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUERental_NotesRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUERental_NotesRecursive4']


class SolarHubIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class SolarHubArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManySolarHubArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUERental_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERental_NotesRecursive1']


class UserIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUERental_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERental_NotesRecursive2']


class UserIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUERental_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERental_NotesRecursive3']


class UserIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUERental_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERental_NotesRecursive4']


class UserIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class UserArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyUserArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUERental_NotesRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUERental_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental_NotesRecursive1']


class NoteIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUERental_NotesRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUERental_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental_NotesRecursive2']


class NoteIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUERental_NotesRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUERental_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental_NotesRecursive3']


class NoteIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUERental_NotesRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUERental_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental_NotesRecursive4']


class NoteIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class NoteArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyNoteArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive1']


class BEPPPBattery_NotesIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive2']


class BEPPPBattery_NotesIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive3']


class BEPPPBattery_NotesIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive4']


class BEPPPBattery_NotesIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class BEPPPBattery_NotesArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyBEPPPBattery_NotesArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    rental: Union[bool, 'RentalArgsFromPUERental_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive1']


class Rental_NotesIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    rental: Union[bool, 'RentalArgsFromPUERental_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive2']


class Rental_NotesIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    rental: Union[bool, 'RentalArgsFromPUERental_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive3']


class Rental_NotesIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    rental: Union[bool, 'RentalArgsFromPUERental_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive4']


class Rental_NotesIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class Rental_NotesArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyRental_NotesArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive1']


class PUE_NotesIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive2']


class PUE_NotesIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive3']


class PUE_NotesIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive4']


class PUE_NotesIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class PUE_NotesArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyPUE_NotesArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_NotesRecursive1']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive1']


class PUERental_NotesIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_NotesRecursive2']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive2']


class PUERental_NotesIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_NotesRecursive3']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive3']


class PUERental_NotesIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_NotesRecursive4']
    note: Union[bool, 'NoteArgsFromPUERental_NotesRecursive4']


class PUERental_NotesIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class PUERental_NotesArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyPUERental_NotesArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUERental_NotesRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromPUERental_NotesRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive1']


class BEPPPBatteryIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUERental_NotesRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromPUERental_NotesRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive2']


class BEPPPBatteryIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUERental_NotesRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromPUERental_NotesRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive3']


class BEPPPBatteryIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUERental_NotesRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromPUERental_NotesRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERental_NotesRecursive4']


class BEPPPBatteryIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class BEPPPBatteryArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyBEPPPBatteryArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive1']


class LiveDataIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive2']


class LiveDataIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive3']


class LiveDataIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive4']


class LiveDataIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class LiveDataArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyLiveDataArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive1']
    user: Union[bool, 'UserArgsFromPUERental_NotesRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUERental_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive1']


class RentalIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive2']
    user: Union[bool, 'UserArgsFromPUERental_NotesRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUERental_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive2']


class RentalIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive3']
    user: Union[bool, 'UserArgsFromPUERental_NotesRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUERental_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive3']


class RentalIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERental_NotesRecursive4']
    user: Union[bool, 'UserArgsFromPUERental_NotesRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUERental_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive4']


class RentalIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class RentalArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyRentalArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUERental_NotesRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERental_NotesRecursive1']


class ProductiveUseEquipmentIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUERental_NotesRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERental_NotesRecursive2']


class ProductiveUseEquipmentIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUERental_NotesRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERental_NotesRecursive3']


class ProductiveUseEquipmentIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    hub: Union[bool, 'SolarHubArgsFromPUERental_NotesRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUERental_NotesRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERental_NotesRecursive4']


class ProductiveUseEquipmentIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class ProductiveUseEquipmentArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyProductiveUseEquipmentArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental_NotesRecursive1']
    user: Union[bool, 'UserArgsFromPUERental_NotesRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental_NotesRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive1']


class PUERentalIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental_NotesRecursive2']
    user: Union[bool, 'UserArgsFromPUERental_NotesRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental_NotesRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive2']


class PUERentalIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental_NotesRecursive3']
    user: Union[bool, 'UserArgsFromPUERental_NotesRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental_NotesRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive3']


class PUERentalIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental_NotesRecursive4']
    user: Union[bool, 'UserArgsFromPUERental_NotesRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental_NotesRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive4']


class PUERentalIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class PUERentalArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyPUERentalArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromPUERental_Notes(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromPUERental_NotesRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_NotesRecursive1']


class BatteryPUERentalIncludeFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromPUERental_NotesRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_NotesRecursive2']


class BatteryPUERentalIncludeFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromPUERental_NotesRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_NotesRecursive3']


class BatteryPUERentalIncludeFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""
    battery_rental: Union[bool, 'RentalArgsFromPUERental_NotesRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromPUERental_NotesRecursive4']


class BatteryPUERentalIncludeFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental_Notes"""

    

class BatteryPUERentalArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    
    

class FindManyBatteryPUERentalArgsFromPUERental_Notes(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive1(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive2(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive3(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromPUERental_NotesRecursive4(TypedDict, total=False):
    """Arguments for PUERental_Notes"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyPUERental_NotesArgs = FindManyPUERental_NotesArgsFromPUERental_Notes
FindFirstPUERental_NotesArgs = FindManyPUERental_NotesArgsFromPUERental_Notes


    

class PUERental_NotesWhereInput(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue_rental: 'PUERentalRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['PUERental_NotesWhereInputRecursive1', List['PUERental_NotesWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['PUERental_NotesWhereInputRecursive1']
    OR: List['PUERental_NotesWhereInputRecursive1']
    NOT: List['PUERental_NotesWhereInputRecursive1']


class PUERental_NotesWhereInputRecursive1(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue_rental: 'PUERentalRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['PUERental_NotesWhereInputRecursive2', List['PUERental_NotesWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['PUERental_NotesWhereInputRecursive2']
    OR: List['PUERental_NotesWhereInputRecursive2']
    NOT: List['PUERental_NotesWhereInputRecursive2']


class PUERental_NotesWhereInputRecursive2(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue_rental: 'PUERentalRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['PUERental_NotesWhereInputRecursive3', List['PUERental_NotesWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['PUERental_NotesWhereInputRecursive3']
    OR: List['PUERental_NotesWhereInputRecursive3']
    NOT: List['PUERental_NotesWhereInputRecursive3']


class PUERental_NotesWhereInputRecursive3(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue_rental: 'PUERentalRelationFilter'
    note: 'NoteRelationFilter'

    # should be noted that AND and NOT should be Union['PUERental_NotesWhereInputRecursive4', List['PUERental_NotesWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['PUERental_NotesWhereInputRecursive4']
    OR: List['PUERental_NotesWhereInputRecursive4']
    NOT: List['PUERental_NotesWhereInputRecursive4']


class PUERental_NotesWhereInputRecursive4(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    note_id: Union[_int, 'types.BigIntFilter']
    pue_rental: 'PUERentalRelationFilter'
    note: 'NoteRelationFilter'



# aggregate PUERental_Notes types


    

class PUERental_NotesScalarWhereWithAggregatesInput(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive1']
    OR: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive1']
    NOT: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive1']


class PUERental_NotesScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive2']
    OR: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive2']
    NOT: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive2']


class PUERental_NotesScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive3']
    OR: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive3']
    NOT: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive3']


class PUERental_NotesScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive4']
    OR: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive4']
    NOT: List['PUERental_NotesScalarWhereWithAggregatesInputRecursive4']


class PUERental_NotesScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """PUERental_Notes arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    note_id: Union[_int, 'types.BigIntWithAggregatesFilter']



class PUERental_NotesGroupByOutput(TypedDict, total=False):
    pue_rental_id: _int
    note_id: _int
    _sum: 'PUERental_NotesSumAggregateOutput'
    _avg: 'PUERental_NotesAvgAggregateOutput'
    _min: 'PUERental_NotesMinAggregateOutput'
    _max: 'PUERental_NotesMaxAggregateOutput'
    _count: 'PUERental_NotesCountAggregateOutput'


class PUERental_NotesAvgAggregateOutput(TypedDict, total=False):
    """PUERental_Notes output for aggregating averages"""
    pue_rental_id: float
    note_id: float


class PUERental_NotesSumAggregateOutput(TypedDict, total=False):
    """PUERental_Notes output for aggregating sums"""
    pue_rental_id: _int
    note_id: _int


class PUERental_NotesScalarAggregateOutput(TypedDict, total=False):
    """PUERental_Notes output including scalar fields"""
    pue_rental_id: _int
    note_id: _int


PUERental_NotesMinAggregateOutput = PUERental_NotesScalarAggregateOutput
PUERental_NotesMaxAggregateOutput = PUERental_NotesScalarAggregateOutput


class PUERental_NotesMaxAggregateInput(TypedDict, total=False):
    """PUERental_Notes input for aggregating by max"""
    pue_rental_id: bool
    note_id: bool


class PUERental_NotesMinAggregateInput(TypedDict, total=False):
    """PUERental_Notes input for aggregating by min"""
    pue_rental_id: bool
    note_id: bool


class PUERental_NotesNumberAggregateInput(TypedDict, total=False):
    """PUERental_Notes input for aggregating numbers"""
    pue_rental_id: bool
    note_id: bool


PUERental_NotesAvgAggregateInput = PUERental_NotesNumberAggregateInput
PUERental_NotesSumAggregateInput = PUERental_NotesNumberAggregateInput


PUERental_NotesCountAggregateInput = TypedDict(
    'PUERental_NotesCountAggregateInput',
    {
        'pue_rental_id': bool,
        'note_id': bool,
        '_all': bool,
    },
    total=False,
)

PUERental_NotesCountAggregateOutput = TypedDict(
    'PUERental_NotesCountAggregateOutput',
    {
        'pue_rental_id': int,
        'note_id': int,
        '_all': int,
    },
    total=False,
)


PUERental_NotesKeys = Literal[
    'pue_rental_id',
    'note_id',
    'pue_rental',
    'note',
]
PUERental_NotesScalarFieldKeys = Literal[
    'pue_rental_id',
    'note_id',
]
PUERental_NotesScalarFieldKeysT = TypeVar('PUERental_NotesScalarFieldKeysT', bound=PUERental_NotesScalarFieldKeys)

PUERental_NotesRelationalFieldKeys = Literal[
        'pue_rental',
        'note',
    ]

# BEPPPBattery types

class BEPPPBatteryOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the BEPPPBattery create method"""
    hub_id: _int
    battery_capacity_wh: Optional[_int]
    status: Optional[_str]
    hub: 'SolarHubCreateNestedWithoutRelationsInput'
    live_data: 'LiveDataCreateManyNestedWithoutRelationsInput'
    rentals: 'RentalCreateManyNestedWithoutRelationsInput'
    notes: 'BEPPPBattery_NotesCreateManyNestedWithoutRelationsInput'


class BEPPPBatteryCreateInput(BEPPPBatteryOptionalCreateInput):
    """Required arguments to the BEPPPBattery create method"""
    battery_id: _int


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class BEPPPBatteryOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the BEPPPBattery create method, without relations"""
    hub_id: _int
    battery_capacity_wh: Optional[_int]
    status: Optional[_str]


class BEPPPBatteryCreateWithoutRelationsInput(BEPPPBatteryOptionalCreateWithoutRelationsInput):
    """Required arguments to the BEPPPBattery create method, without relations"""
    battery_id: _int


class BEPPPBatteryCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'BEPPPBatteryCreateWithoutRelationsInput'
    connect: 'BEPPPBatteryWhereUniqueInput'


class BEPPPBatteryCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['BEPPPBatteryCreateWithoutRelationsInput', List['BEPPPBatteryCreateWithoutRelationsInput']]
    connect: Union['BEPPPBatteryWhereUniqueInput', List['BEPPPBatteryWhereUniqueInput']]


_BEPPPBatteryWhereUnique_battery_id_Input = TypedDict(
    '_BEPPPBatteryWhereUnique_battery_id_Input',
    {
        'battery_id': '_int',
    },
    total=True
)

BEPPPBatteryWhereUniqueInput = _BEPPPBatteryWhereUnique_battery_id_Input


class BEPPPBatteryUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    battery_id: Union[AtomicBigIntInput, _int]
    battery_capacity_wh: Optional[Union[AtomicBigIntInput, _int]]
    status: Optional[_str]
    hub: 'SolarHubUpdateOneWithoutRelationsInput'
    live_data: 'LiveDataUpdateManyWithoutRelationsInput'
    rentals: 'RentalUpdateManyWithoutRelationsInput'
    notes: 'BEPPPBattery_NotesUpdateManyWithoutRelationsInput'


class BEPPPBatteryUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    battery_id: Union[AtomicBigIntInput, _int]
    battery_capacity_wh: Optional[Union[AtomicBigIntInput, _int]]
    status: Optional[_str]


class BEPPPBatteryUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['BEPPPBatteryCreateWithoutRelationsInput']
    connect: List['BEPPPBatteryWhereUniqueInput']
    set: List['BEPPPBatteryWhereUniqueInput']
    disconnect: List['BEPPPBatteryWhereUniqueInput']
    delete: List['BEPPPBatteryWhereUniqueInput']

    # TODO
    # update: List['BEPPPBatteryUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['BEPPPBatteryUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['BEPPPBatteryScalarWhereInput']
    # upsert: List['BEPPPBatteryUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['BEPPPBatteryCreateOrConnectWithoutRelationsInput']


class BEPPPBatteryUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'BEPPPBatteryCreateWithoutRelationsInput'
    connect: 'BEPPPBatteryWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'BEPPPBatteryUpdateInput'
    # upsert: 'BEPPPBatteryUpsertWithoutRelationsInput'
    # connectOrCreate: 'BEPPPBatteryCreateOrConnectWithoutRelationsInput'


class BEPPPBatteryUpsertInput(TypedDict):
    create: 'BEPPPBatteryCreateInput'
    update: 'BEPPPBatteryUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_BEPPPBattery_battery_id_OrderByInput = TypedDict(
    '_BEPPPBattery_battery_id_OrderByInput',
    {
        'battery_id': 'SortOrder',
    },
    total=True
)

_BEPPPBattery_hub_id_OrderByInput = TypedDict(
    '_BEPPPBattery_hub_id_OrderByInput',
    {
        'hub_id': 'SortOrder',
    },
    total=True
)

_BEPPPBattery_battery_capacity_wh_OrderByInput = TypedDict(
    '_BEPPPBattery_battery_capacity_wh_OrderByInput',
    {
        'battery_capacity_wh': 'SortOrder',
    },
    total=True
)

_BEPPPBattery_status_OrderByInput = TypedDict(
    '_BEPPPBattery_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

BEPPPBatteryOrderByInput = Union[
    '_BEPPPBattery_battery_id_OrderByInput',
    '_BEPPPBattery_hub_id_OrderByInput',
    '_BEPPPBattery_battery_capacity_wh_OrderByInput',
    '_BEPPPBattery_status_OrderByInput',
]



# recursive BEPPPBattery types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

BEPPPBatteryRelationFilter = TypedDict(
    'BEPPPBatteryRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class BEPPPBatteryListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class BEPPPBatteryInclude(TypedDict, total=False):
    """BEPPPBattery relational arguments"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBattery']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBattery']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBattery']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBattery']


    

class SolarHubIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    users: Union[bool, 'FindManyUserArgsFromBEPPPBatteryRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBEPPPBatteryRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBEPPPBatteryRecursive1']


class SolarHubIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    users: Union[bool, 'FindManyUserArgsFromBEPPPBatteryRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBEPPPBatteryRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBEPPPBatteryRecursive2']


class SolarHubIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    users: Union[bool, 'FindManyUserArgsFromBEPPPBatteryRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBEPPPBatteryRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBEPPPBatteryRecursive3']


class SolarHubIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    users: Union[bool, 'FindManyUserArgsFromBEPPPBatteryRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBEPPPBatteryRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBEPPPBatteryRecursive4']


class SolarHubIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class SolarHubArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManySolarHubArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBatteryRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBatteryRecursive1']


class UserIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBatteryRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBatteryRecursive2']


class UserIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBatteryRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBatteryRecursive3']


class UserIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBatteryRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBatteryRecursive4']


class UserIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class UserArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyUserArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBatteryRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBatteryRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive1']


class NoteIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBatteryRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBatteryRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive2']


class NoteIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBatteryRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBatteryRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive3']


class NoteIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBatteryRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBatteryRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive4']


class NoteIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class NoteArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyNoteArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive1']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive1']


class BEPPPBattery_NotesIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive2']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive2']


class BEPPPBattery_NotesIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive3']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive3']


class BEPPPBattery_NotesIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive4']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive4']


class BEPPPBattery_NotesIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class BEPPPBattery_NotesArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyBEPPPBattery_NotesArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    rental: Union[bool, 'RentalArgsFromBEPPPBatteryRecursive1']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive1']


class Rental_NotesIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    rental: Union[bool, 'RentalArgsFromBEPPPBatteryRecursive2']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive2']


class Rental_NotesIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    rental: Union[bool, 'RentalArgsFromBEPPPBatteryRecursive3']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive3']


class Rental_NotesIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    rental: Union[bool, 'RentalArgsFromBEPPPBatteryRecursive4']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive4']


class Rental_NotesIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class Rental_NotesArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyRental_NotesArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive1']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive1']


class PUE_NotesIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive2']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive2']


class PUE_NotesIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive3']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive3']


class PUE_NotesIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive4']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive4']


class PUE_NotesIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class PUE_NotesArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyPUE_NotesArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBatteryRecursive1']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive1']


class PUERental_NotesIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBatteryRecursive2']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive2']


class PUERental_NotesIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBatteryRecursive3']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive3']


class PUERental_NotesIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBatteryRecursive4']
    note: Union[bool, 'NoteArgsFromBEPPPBatteryRecursive4']


class PUERental_NotesIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class PUERental_NotesArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyPUERental_NotesArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBatteryRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBatteryRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive1']


class BEPPPBatteryIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBatteryRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBatteryRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive2']


class BEPPPBatteryIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBatteryRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBatteryRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive3']


class BEPPPBatteryIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBEPPPBatteryRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromBEPPPBatteryRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBEPPPBatteryRecursive4']


class BEPPPBatteryIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class BEPPPBatteryArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyBEPPPBatteryArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive1']


class LiveDataIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive2']


class LiveDataIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive3']


class LiveDataIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive4']


class LiveDataIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class LiveDataArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyLiveDataArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive1']
    user: Union[bool, 'UserArgsFromBEPPPBatteryRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBatteryRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive1']


class RentalIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive2']
    user: Union[bool, 'UserArgsFromBEPPPBatteryRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBatteryRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive2']


class RentalIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive3']
    user: Union[bool, 'UserArgsFromBEPPPBatteryRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBatteryRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive3']


class RentalIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBEPPPBatteryRecursive4']
    user: Union[bool, 'UserArgsFromBEPPPBatteryRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBEPPPBatteryRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive4']


class RentalIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class RentalArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyRentalArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBatteryRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBatteryRecursive1']


class ProductiveUseEquipmentIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBatteryRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBatteryRecursive2']


class ProductiveUseEquipmentIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBatteryRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBatteryRecursive3']


class ProductiveUseEquipmentIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    hub: Union[bool, 'SolarHubArgsFromBEPPPBatteryRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBEPPPBatteryRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBEPPPBatteryRecursive4']


class ProductiveUseEquipmentIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class ProductiveUseEquipmentArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyProductiveUseEquipmentArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive1']
    user: Union[bool, 'UserArgsFromBEPPPBatteryRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive1']


class PUERentalIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive2']
    user: Union[bool, 'UserArgsFromBEPPPBatteryRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive2']


class PUERentalIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive3']
    user: Union[bool, 'UserArgsFromBEPPPBatteryRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive3']


class PUERentalIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBEPPPBatteryRecursive4']
    user: Union[bool, 'UserArgsFromBEPPPBatteryRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBEPPPBatteryRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive4']


class PUERentalIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class PUERentalArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyPUERentalArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromBEPPPBattery(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery_rental: Union[bool, 'RentalArgsFromBEPPPBatteryRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBatteryRecursive1']


class BatteryPUERentalIncludeFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery_rental: Union[bool, 'RentalArgsFromBEPPPBatteryRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBatteryRecursive2']


class BatteryPUERentalIncludeFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery_rental: Union[bool, 'RentalArgsFromBEPPPBatteryRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBatteryRecursive3']


class BatteryPUERentalIncludeFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""
    battery_rental: Union[bool, 'RentalArgsFromBEPPPBatteryRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromBEPPPBatteryRecursive4']


class BatteryPUERentalIncludeFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Relational arguments for BEPPPBattery"""

    

class BatteryPUERentalArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    
    

class FindManyBatteryPUERentalArgsFromBEPPPBattery(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive1(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive2(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive3(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromBEPPPBatteryRecursive4(TypedDict, total=False):
    """Arguments for BEPPPBattery"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyBEPPPBatteryArgs = FindManyBEPPPBatteryArgsFromBEPPPBattery
FindFirstBEPPPBatteryArgs = FindManyBEPPPBatteryArgsFromBEPPPBattery


    

class BEPPPBatteryWhereInput(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    battery_capacity_wh: Union[None, _int, 'types.BigIntFilter']
    status: Union[None, _str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    live_data: 'LiveDataListRelationFilter'
    rentals: 'RentalListRelationFilter'
    notes: 'BEPPPBattery_NotesListRelationFilter'

    # should be noted that AND and NOT should be Union['BEPPPBatteryWhereInputRecursive1', List['BEPPPBatteryWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['BEPPPBatteryWhereInputRecursive1']
    OR: List['BEPPPBatteryWhereInputRecursive1']
    NOT: List['BEPPPBatteryWhereInputRecursive1']


class BEPPPBatteryWhereInputRecursive1(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    battery_capacity_wh: Union[None, _int, 'types.BigIntFilter']
    status: Union[None, _str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    live_data: 'LiveDataListRelationFilter'
    rentals: 'RentalListRelationFilter'
    notes: 'BEPPPBattery_NotesListRelationFilter'

    # should be noted that AND and NOT should be Union['BEPPPBatteryWhereInputRecursive2', List['BEPPPBatteryWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['BEPPPBatteryWhereInputRecursive2']
    OR: List['BEPPPBatteryWhereInputRecursive2']
    NOT: List['BEPPPBatteryWhereInputRecursive2']


class BEPPPBatteryWhereInputRecursive2(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    battery_capacity_wh: Union[None, _int, 'types.BigIntFilter']
    status: Union[None, _str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    live_data: 'LiveDataListRelationFilter'
    rentals: 'RentalListRelationFilter'
    notes: 'BEPPPBattery_NotesListRelationFilter'

    # should be noted that AND and NOT should be Union['BEPPPBatteryWhereInputRecursive3', List['BEPPPBatteryWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['BEPPPBatteryWhereInputRecursive3']
    OR: List['BEPPPBatteryWhereInputRecursive3']
    NOT: List['BEPPPBatteryWhereInputRecursive3']


class BEPPPBatteryWhereInputRecursive3(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    battery_capacity_wh: Union[None, _int, 'types.BigIntFilter']
    status: Union[None, _str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    live_data: 'LiveDataListRelationFilter'
    rentals: 'RentalListRelationFilter'
    notes: 'BEPPPBattery_NotesListRelationFilter'

    # should be noted that AND and NOT should be Union['BEPPPBatteryWhereInputRecursive4', List['BEPPPBatteryWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['BEPPPBatteryWhereInputRecursive4']
    OR: List['BEPPPBatteryWhereInputRecursive4']
    NOT: List['BEPPPBatteryWhereInputRecursive4']


class BEPPPBatteryWhereInputRecursive4(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    battery_capacity_wh: Union[None, _int, 'types.BigIntFilter']
    status: Union[None, _str, 'types.StringFilter']
    hub: 'SolarHubRelationFilter'
    live_data: 'LiveDataListRelationFilter'
    rentals: 'RentalListRelationFilter'
    notes: 'BEPPPBattery_NotesListRelationFilter'



# aggregate BEPPPBattery types


    

class BEPPPBatteryScalarWhereWithAggregatesInput(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_capacity_wh: Union[_int, 'types.BigIntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive1']
    OR: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive1']
    NOT: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive1']


class BEPPPBatteryScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_capacity_wh: Union[_int, 'types.BigIntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive2']
    OR: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive2']
    NOT: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive2']


class BEPPPBatteryScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_capacity_wh: Union[_int, 'types.BigIntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive3']
    OR: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive3']
    NOT: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive3']


class BEPPPBatteryScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_capacity_wh: Union[_int, 'types.BigIntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']

    AND: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive4']
    OR: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive4']
    NOT: List['BEPPPBatteryScalarWhereWithAggregatesInputRecursive4']


class BEPPPBatteryScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """BEPPPBattery arguments for searching"""
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_capacity_wh: Union[_int, 'types.BigIntWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']



class BEPPPBatteryGroupByOutput(TypedDict, total=False):
    battery_id: _int
    hub_id: _int
    battery_capacity_wh: _int
    status: _str
    _sum: 'BEPPPBatterySumAggregateOutput'
    _avg: 'BEPPPBatteryAvgAggregateOutput'
    _min: 'BEPPPBatteryMinAggregateOutput'
    _max: 'BEPPPBatteryMaxAggregateOutput'
    _count: 'BEPPPBatteryCountAggregateOutput'


class BEPPPBatteryAvgAggregateOutput(TypedDict, total=False):
    """BEPPPBattery output for aggregating averages"""
    battery_id: float
    hub_id: float
    battery_capacity_wh: float


class BEPPPBatterySumAggregateOutput(TypedDict, total=False):
    """BEPPPBattery output for aggregating sums"""
    battery_id: _int
    hub_id: _int
    battery_capacity_wh: _int


class BEPPPBatteryScalarAggregateOutput(TypedDict, total=False):
    """BEPPPBattery output including scalar fields"""
    battery_id: _int
    hub_id: _int
    battery_capacity_wh: _int
    status: _str


BEPPPBatteryMinAggregateOutput = BEPPPBatteryScalarAggregateOutput
BEPPPBatteryMaxAggregateOutput = BEPPPBatteryScalarAggregateOutput


class BEPPPBatteryMaxAggregateInput(TypedDict, total=False):
    """BEPPPBattery input for aggregating by max"""
    battery_id: bool
    hub_id: bool
    battery_capacity_wh: bool
    status: bool


class BEPPPBatteryMinAggregateInput(TypedDict, total=False):
    """BEPPPBattery input for aggregating by min"""
    battery_id: bool
    hub_id: bool
    battery_capacity_wh: bool
    status: bool


class BEPPPBatteryNumberAggregateInput(TypedDict, total=False):
    """BEPPPBattery input for aggregating numbers"""
    battery_id: bool
    hub_id: bool
    battery_capacity_wh: bool


BEPPPBatteryAvgAggregateInput = BEPPPBatteryNumberAggregateInput
BEPPPBatterySumAggregateInput = BEPPPBatteryNumberAggregateInput


BEPPPBatteryCountAggregateInput = TypedDict(
    'BEPPPBatteryCountAggregateInput',
    {
        'battery_id': bool,
        'hub_id': bool,
        'battery_capacity_wh': bool,
        'status': bool,
        '_all': bool,
    },
    total=False,
)

BEPPPBatteryCountAggregateOutput = TypedDict(
    'BEPPPBatteryCountAggregateOutput',
    {
        'battery_id': int,
        'hub_id': int,
        'battery_capacity_wh': int,
        'status': int,
        '_all': int,
    },
    total=False,
)


BEPPPBatteryKeys = Literal[
    'battery_id',
    'hub_id',
    'battery_capacity_wh',
    'status',
    'hub',
    'live_data',
    'rentals',
    'notes',
]
BEPPPBatteryScalarFieldKeys = Literal[
    'battery_id',
    'hub_id',
    'battery_capacity_wh',
    'status',
]
BEPPPBatteryScalarFieldKeysT = TypeVar('BEPPPBatteryScalarFieldKeysT', bound=BEPPPBatteryScalarFieldKeys)

BEPPPBatteryRelationalFieldKeys = Literal[
        'hub',
        'live_data',
        'rentals',
        'notes',
    ]

# LiveData types

class LiveDataOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the LiveData create method"""
    battery_id: _int
    state_of_charge: Optional[_int]
    voltage: Optional[_float]
    current_amps: Optional[_float]
    power_watts: Optional[_float]
    time_remaining: Optional[_int]
    temp_battery: Optional[_float]
    amp_hours_consumed: Optional[_float]
    charging_current: Optional[_float]
    timestamp: Optional[datetime.datetime]
    usb_voltage: Optional[_float]
    usb_power: Optional[_float]
    usb_current: Optional[_float]
    latitude: Optional[_float]
    longitude: Optional[_float]
    altitude: Optional[_float]
    SD_card_storage_remaining: Optional[_float]
    battery_orientation: Optional[_str]
    number_GPS_satellites_for_fix: Optional[_int]
    mobile_signal_strength: Optional[_int]
    event_type: Optional[_str]
    new_battery_cycle: Optional[_int]
    battery: 'BEPPPBatteryCreateNestedWithoutRelationsInput'


class LiveDataCreateInput(LiveDataOptionalCreateInput):
    """Required arguments to the LiveData create method"""
    id: _int


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class LiveDataOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the LiveData create method, without relations"""
    battery_id: _int
    state_of_charge: Optional[_int]
    voltage: Optional[_float]
    current_amps: Optional[_float]
    power_watts: Optional[_float]
    time_remaining: Optional[_int]
    temp_battery: Optional[_float]
    amp_hours_consumed: Optional[_float]
    charging_current: Optional[_float]
    timestamp: Optional[datetime.datetime]
    usb_voltage: Optional[_float]
    usb_power: Optional[_float]
    usb_current: Optional[_float]
    latitude: Optional[_float]
    longitude: Optional[_float]
    altitude: Optional[_float]
    SD_card_storage_remaining: Optional[_float]
    battery_orientation: Optional[_str]
    number_GPS_satellites_for_fix: Optional[_int]
    mobile_signal_strength: Optional[_int]
    event_type: Optional[_str]
    new_battery_cycle: Optional[_int]


class LiveDataCreateWithoutRelationsInput(LiveDataOptionalCreateWithoutRelationsInput):
    """Required arguments to the LiveData create method, without relations"""
    id: _int


class LiveDataCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'LiveDataCreateWithoutRelationsInput'
    connect: 'LiveDataWhereUniqueInput'


class LiveDataCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['LiveDataCreateWithoutRelationsInput', List['LiveDataCreateWithoutRelationsInput']]
    connect: Union['LiveDataWhereUniqueInput', List['LiveDataWhereUniqueInput']]


_LiveDataWhereUnique_id_Input = TypedDict(
    '_LiveDataWhereUnique_id_Input',
    {
        'id': '_int',
    },
    total=True
)

LiveDataWhereUniqueInput = _LiveDataWhereUnique_id_Input


class LiveDataUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    id: Union[AtomicBigIntInput, _int]
    state_of_charge: Optional[Union[AtomicBigIntInput, _int]]
    voltage: Optional[Union[AtomicFloatInput, _float]]
    current_amps: Optional[Union[AtomicFloatInput, _float]]
    power_watts: Optional[Union[AtomicFloatInput, _float]]
    time_remaining: Optional[Union[AtomicBigIntInput, _int]]
    temp_battery: Optional[Union[AtomicFloatInput, _float]]
    amp_hours_consumed: Optional[Union[AtomicFloatInput, _float]]
    charging_current: Optional[Union[AtomicFloatInput, _float]]
    timestamp: Optional[datetime.datetime]
    usb_voltage: Optional[Union[AtomicFloatInput, _float]]
    usb_power: Optional[Union[AtomicFloatInput, _float]]
    usb_current: Optional[Union[AtomicFloatInput, _float]]
    latitude: Optional[Union[AtomicFloatInput, _float]]
    longitude: Optional[Union[AtomicFloatInput, _float]]
    altitude: Optional[Union[AtomicFloatInput, _float]]
    SD_card_storage_remaining: Optional[Union[AtomicFloatInput, _float]]
    battery_orientation: Optional[_str]
    number_GPS_satellites_for_fix: Optional[Union[AtomicIntInput, _int]]
    mobile_signal_strength: Optional[Union[AtomicIntInput, _int]]
    event_type: Optional[_str]
    new_battery_cycle: Optional[Union[AtomicIntInput, _int]]
    battery: 'BEPPPBatteryUpdateOneWithoutRelationsInput'


class LiveDataUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    id: Union[AtomicBigIntInput, _int]
    state_of_charge: Optional[Union[AtomicBigIntInput, _int]]
    voltage: Optional[Union[AtomicFloatInput, _float]]
    current_amps: Optional[Union[AtomicFloatInput, _float]]
    power_watts: Optional[Union[AtomicFloatInput, _float]]
    time_remaining: Optional[Union[AtomicBigIntInput, _int]]
    temp_battery: Optional[Union[AtomicFloatInput, _float]]
    amp_hours_consumed: Optional[Union[AtomicFloatInput, _float]]
    charging_current: Optional[Union[AtomicFloatInput, _float]]
    timestamp: Optional[datetime.datetime]
    usb_voltage: Optional[Union[AtomicFloatInput, _float]]
    usb_power: Optional[Union[AtomicFloatInput, _float]]
    usb_current: Optional[Union[AtomicFloatInput, _float]]
    latitude: Optional[Union[AtomicFloatInput, _float]]
    longitude: Optional[Union[AtomicFloatInput, _float]]
    altitude: Optional[Union[AtomicFloatInput, _float]]
    SD_card_storage_remaining: Optional[Union[AtomicFloatInput, _float]]
    battery_orientation: Optional[_str]
    number_GPS_satellites_for_fix: Optional[Union[AtomicIntInput, _int]]
    mobile_signal_strength: Optional[Union[AtomicIntInput, _int]]
    event_type: Optional[_str]
    new_battery_cycle: Optional[Union[AtomicIntInput, _int]]


class LiveDataUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['LiveDataCreateWithoutRelationsInput']
    connect: List['LiveDataWhereUniqueInput']
    set: List['LiveDataWhereUniqueInput']
    disconnect: List['LiveDataWhereUniqueInput']
    delete: List['LiveDataWhereUniqueInput']

    # TODO
    # update: List['LiveDataUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['LiveDataUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['LiveDataScalarWhereInput']
    # upsert: List['LiveDataUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['LiveDataCreateOrConnectWithoutRelationsInput']


class LiveDataUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'LiveDataCreateWithoutRelationsInput'
    connect: 'LiveDataWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'LiveDataUpdateInput'
    # upsert: 'LiveDataUpsertWithoutRelationsInput'
    # connectOrCreate: 'LiveDataCreateOrConnectWithoutRelationsInput'


class LiveDataUpsertInput(TypedDict):
    create: 'LiveDataCreateInput'
    update: 'LiveDataUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_LiveData_id_OrderByInput = TypedDict(
    '_LiveData_id_OrderByInput',
    {
        'id': 'SortOrder',
    },
    total=True
)

_LiveData_battery_id_OrderByInput = TypedDict(
    '_LiveData_battery_id_OrderByInput',
    {
        'battery_id': 'SortOrder',
    },
    total=True
)

_LiveData_state_of_charge_OrderByInput = TypedDict(
    '_LiveData_state_of_charge_OrderByInput',
    {
        'state_of_charge': 'SortOrder',
    },
    total=True
)

_LiveData_voltage_OrderByInput = TypedDict(
    '_LiveData_voltage_OrderByInput',
    {
        'voltage': 'SortOrder',
    },
    total=True
)

_LiveData_current_amps_OrderByInput = TypedDict(
    '_LiveData_current_amps_OrderByInput',
    {
        'current_amps': 'SortOrder',
    },
    total=True
)

_LiveData_power_watts_OrderByInput = TypedDict(
    '_LiveData_power_watts_OrderByInput',
    {
        'power_watts': 'SortOrder',
    },
    total=True
)

_LiveData_time_remaining_OrderByInput = TypedDict(
    '_LiveData_time_remaining_OrderByInput',
    {
        'time_remaining': 'SortOrder',
    },
    total=True
)

_LiveData_temp_battery_OrderByInput = TypedDict(
    '_LiveData_temp_battery_OrderByInput',
    {
        'temp_battery': 'SortOrder',
    },
    total=True
)

_LiveData_amp_hours_consumed_OrderByInput = TypedDict(
    '_LiveData_amp_hours_consumed_OrderByInput',
    {
        'amp_hours_consumed': 'SortOrder',
    },
    total=True
)

_LiveData_charging_current_OrderByInput = TypedDict(
    '_LiveData_charging_current_OrderByInput',
    {
        'charging_current': 'SortOrder',
    },
    total=True
)

_LiveData_timestamp_OrderByInput = TypedDict(
    '_LiveData_timestamp_OrderByInput',
    {
        'timestamp': 'SortOrder',
    },
    total=True
)

_LiveData_usb_voltage_OrderByInput = TypedDict(
    '_LiveData_usb_voltage_OrderByInput',
    {
        'usb_voltage': 'SortOrder',
    },
    total=True
)

_LiveData_usb_power_OrderByInput = TypedDict(
    '_LiveData_usb_power_OrderByInput',
    {
        'usb_power': 'SortOrder',
    },
    total=True
)

_LiveData_usb_current_OrderByInput = TypedDict(
    '_LiveData_usb_current_OrderByInput',
    {
        'usb_current': 'SortOrder',
    },
    total=True
)

_LiveData_latitude_OrderByInput = TypedDict(
    '_LiveData_latitude_OrderByInput',
    {
        'latitude': 'SortOrder',
    },
    total=True
)

_LiveData_longitude_OrderByInput = TypedDict(
    '_LiveData_longitude_OrderByInput',
    {
        'longitude': 'SortOrder',
    },
    total=True
)

_LiveData_altitude_OrderByInput = TypedDict(
    '_LiveData_altitude_OrderByInput',
    {
        'altitude': 'SortOrder',
    },
    total=True
)

_LiveData_SD_card_storage_remaining_OrderByInput = TypedDict(
    '_LiveData_SD_card_storage_remaining_OrderByInput',
    {
        'SD_card_storage_remaining': 'SortOrder',
    },
    total=True
)

_LiveData_battery_orientation_OrderByInput = TypedDict(
    '_LiveData_battery_orientation_OrderByInput',
    {
        'battery_orientation': 'SortOrder',
    },
    total=True
)

_LiveData_number_GPS_satellites_for_fix_OrderByInput = TypedDict(
    '_LiveData_number_GPS_satellites_for_fix_OrderByInput',
    {
        'number_GPS_satellites_for_fix': 'SortOrder',
    },
    total=True
)

_LiveData_mobile_signal_strength_OrderByInput = TypedDict(
    '_LiveData_mobile_signal_strength_OrderByInput',
    {
        'mobile_signal_strength': 'SortOrder',
    },
    total=True
)

_LiveData_event_type_OrderByInput = TypedDict(
    '_LiveData_event_type_OrderByInput',
    {
        'event_type': 'SortOrder',
    },
    total=True
)

_LiveData_new_battery_cycle_OrderByInput = TypedDict(
    '_LiveData_new_battery_cycle_OrderByInput',
    {
        'new_battery_cycle': 'SortOrder',
    },
    total=True
)

LiveDataOrderByInput = Union[
    '_LiveData_id_OrderByInput',
    '_LiveData_battery_id_OrderByInput',
    '_LiveData_state_of_charge_OrderByInput',
    '_LiveData_voltage_OrderByInput',
    '_LiveData_current_amps_OrderByInput',
    '_LiveData_power_watts_OrderByInput',
    '_LiveData_time_remaining_OrderByInput',
    '_LiveData_temp_battery_OrderByInput',
    '_LiveData_amp_hours_consumed_OrderByInput',
    '_LiveData_charging_current_OrderByInput',
    '_LiveData_timestamp_OrderByInput',
    '_LiveData_usb_voltage_OrderByInput',
    '_LiveData_usb_power_OrderByInput',
    '_LiveData_usb_current_OrderByInput',
    '_LiveData_latitude_OrderByInput',
    '_LiveData_longitude_OrderByInput',
    '_LiveData_altitude_OrderByInput',
    '_LiveData_SD_card_storage_remaining_OrderByInput',
    '_LiveData_battery_orientation_OrderByInput',
    '_LiveData_number_GPS_satellites_for_fix_OrderByInput',
    '_LiveData_mobile_signal_strength_OrderByInput',
    '_LiveData_event_type_OrderByInput',
    '_LiveData_new_battery_cycle_OrderByInput',
]



# recursive LiveData types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

LiveDataRelationFilter = TypedDict(
    'LiveDataRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class LiveDataListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class LiveDataInclude(TypedDict, total=False):
    """LiveData relational arguments"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveData']


    

class SolarHubIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    users: Union[bool, 'FindManyUserArgsFromLiveDataRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromLiveDataRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromLiveDataRecursive1']


class SolarHubIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    users: Union[bool, 'FindManyUserArgsFromLiveDataRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromLiveDataRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromLiveDataRecursive2']


class SolarHubIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    users: Union[bool, 'FindManyUserArgsFromLiveDataRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromLiveDataRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromLiveDataRecursive3']


class SolarHubIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    users: Union[bool, 'FindManyUserArgsFromLiveDataRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromLiveDataRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromLiveDataRecursive4']


class SolarHubIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class SolarHubArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManySolarHubArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromLiveDataRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromLiveDataRecursive1']


class UserIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromLiveDataRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromLiveDataRecursive2']


class UserIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromLiveDataRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromLiveDataRecursive3']


class UserIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromLiveDataRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromLiveDataRecursive4']


class UserIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class UserArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyUserArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromLiveDataRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromLiveDataRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromLiveDataRecursive1']


class NoteIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromLiveDataRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromLiveDataRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromLiveDataRecursive2']


class NoteIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromLiveDataRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromLiveDataRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromLiveDataRecursive3']


class NoteIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromLiveDataRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromLiveDataRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromLiveDataRecursive4']


class NoteIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class NoteArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyNoteArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive1']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive1']


class BEPPPBattery_NotesIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive2']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive2']


class BEPPPBattery_NotesIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive3']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive3']


class BEPPPBattery_NotesIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive4']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive4']


class BEPPPBattery_NotesIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class BEPPPBattery_NotesArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyBEPPPBattery_NotesArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    rental: Union[bool, 'RentalArgsFromLiveDataRecursive1']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive1']


class Rental_NotesIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    rental: Union[bool, 'RentalArgsFromLiveDataRecursive2']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive2']


class Rental_NotesIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    rental: Union[bool, 'RentalArgsFromLiveDataRecursive3']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive3']


class Rental_NotesIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    rental: Union[bool, 'RentalArgsFromLiveDataRecursive4']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive4']


class Rental_NotesIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class Rental_NotesArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyRental_NotesArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromLiveDataRecursive1']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive1']


class PUE_NotesIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromLiveDataRecursive2']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive2']


class PUE_NotesIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromLiveDataRecursive3']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive3']


class PUE_NotesIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromLiveDataRecursive4']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive4']


class PUE_NotesIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class PUE_NotesArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyPUE_NotesArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue_rental: Union[bool, 'PUERentalArgsFromLiveDataRecursive1']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive1']


class PUERental_NotesIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue_rental: Union[bool, 'PUERentalArgsFromLiveDataRecursive2']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive2']


class PUERental_NotesIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue_rental: Union[bool, 'PUERentalArgsFromLiveDataRecursive3']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive3']


class PUERental_NotesIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue_rental: Union[bool, 'PUERentalArgsFromLiveDataRecursive4']
    note: Union[bool, 'NoteArgsFromLiveDataRecursive4']


class PUERental_NotesIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class PUERental_NotesArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyPUERental_NotesArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromLiveDataRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromLiveDataRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive1']


class BEPPPBatteryIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromLiveDataRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromLiveDataRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive2']


class BEPPPBatteryIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromLiveDataRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromLiveDataRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive3']


class BEPPPBatteryIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromLiveDataRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromLiveDataRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromLiveDataRecursive4']


class BEPPPBatteryIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class BEPPPBatteryArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyBEPPPBatteryArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive1']


class LiveDataIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive2']


class LiveDataIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive3']


class LiveDataIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive4']


class LiveDataIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class LiveDataArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyLiveDataArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive1']
    user: Union[bool, 'UserArgsFromLiveDataRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromLiveDataRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromLiveDataRecursive1']


class RentalIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive2']
    user: Union[bool, 'UserArgsFromLiveDataRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromLiveDataRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromLiveDataRecursive2']


class RentalIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive3']
    user: Union[bool, 'UserArgsFromLiveDataRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromLiveDataRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromLiveDataRecursive3']


class RentalIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery: Union[bool, 'BEPPPBatteryArgsFromLiveDataRecursive4']
    user: Union[bool, 'UserArgsFromLiveDataRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromLiveDataRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromLiveDataRecursive4']


class RentalIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class RentalArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyRentalArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromLiveDataRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromLiveDataRecursive1']


class ProductiveUseEquipmentIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromLiveDataRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromLiveDataRecursive2']


class ProductiveUseEquipmentIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromLiveDataRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromLiveDataRecursive3']


class ProductiveUseEquipmentIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    hub: Union[bool, 'SolarHubArgsFromLiveDataRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromLiveDataRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromLiveDataRecursive4']


class ProductiveUseEquipmentIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class ProductiveUseEquipmentArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyProductiveUseEquipmentArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromLiveDataRecursive1']
    user: Union[bool, 'UserArgsFromLiveDataRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromLiveDataRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromLiveDataRecursive1']


class PUERentalIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromLiveDataRecursive2']
    user: Union[bool, 'UserArgsFromLiveDataRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromLiveDataRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromLiveDataRecursive2']


class PUERentalIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromLiveDataRecursive3']
    user: Union[bool, 'UserArgsFromLiveDataRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromLiveDataRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromLiveDataRecursive3']


class PUERentalIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromLiveDataRecursive4']
    user: Union[bool, 'UserArgsFromLiveDataRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromLiveDataRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromLiveDataRecursive4']


class PUERentalIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class PUERentalArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyPUERentalArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromLiveData(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery_rental: Union[bool, 'RentalArgsFromLiveDataRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromLiveDataRecursive1']


class BatteryPUERentalIncludeFromLiveDataRecursive1(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery_rental: Union[bool, 'RentalArgsFromLiveDataRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromLiveDataRecursive2']


class BatteryPUERentalIncludeFromLiveDataRecursive2(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery_rental: Union[bool, 'RentalArgsFromLiveDataRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromLiveDataRecursive3']


class BatteryPUERentalIncludeFromLiveDataRecursive3(TypedDict, total=False):
    """Relational arguments for LiveData"""
    battery_rental: Union[bool, 'RentalArgsFromLiveDataRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromLiveDataRecursive4']


class BatteryPUERentalIncludeFromLiveDataRecursive4(TypedDict, total=False):
    """Relational arguments for LiveData"""

    

class BatteryPUERentalArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    
    

class FindManyBatteryPUERentalArgsFromLiveData(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromLiveDataRecursive1(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromLiveDataRecursive2(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromLiveDataRecursive3(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromLiveDataRecursive4(TypedDict, total=False):
    """Arguments for LiveData"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyLiveDataArgs = FindManyLiveDataArgsFromLiveData
FindFirstLiveDataArgs = FindManyLiveDataArgsFromLiveData


    

class LiveDataWhereInput(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    state_of_charge: Union[None, _int, 'types.BigIntFilter']
    voltage: Union[None, _float, 'types.FloatFilter']
    current_amps: Union[None, _float, 'types.FloatFilter']
    power_watts: Union[None, _float, 'types.FloatFilter']
    time_remaining: Union[None, _int, 'types.BigIntFilter']
    temp_battery: Union[None, _float, 'types.FloatFilter']
    amp_hours_consumed: Union[None, _float, 'types.FloatFilter']
    charging_current: Union[None, _float, 'types.FloatFilter']
    timestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    usb_voltage: Union[None, _float, 'types.FloatFilter']
    usb_power: Union[None, _float, 'types.FloatFilter']
    usb_current: Union[None, _float, 'types.FloatFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    altitude: Union[None, _float, 'types.FloatFilter']
    SD_card_storage_remaining: Union[None, _float, 'types.FloatFilter']
    battery_orientation: Union[None, _str, 'types.StringFilter']
    number_GPS_satellites_for_fix: Union[None, _int, 'types.IntFilter']
    mobile_signal_strength: Union[None, _int, 'types.IntFilter']
    event_type: Union[None, _str, 'types.StringFilter']
    new_battery_cycle: Union[None, _int, 'types.IntFilter']
    battery: 'BEPPPBatteryRelationFilter'

    # should be noted that AND and NOT should be Union['LiveDataWhereInputRecursive1', List['LiveDataWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['LiveDataWhereInputRecursive1']
    OR: List['LiveDataWhereInputRecursive1']
    NOT: List['LiveDataWhereInputRecursive1']


class LiveDataWhereInputRecursive1(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    state_of_charge: Union[None, _int, 'types.BigIntFilter']
    voltage: Union[None, _float, 'types.FloatFilter']
    current_amps: Union[None, _float, 'types.FloatFilter']
    power_watts: Union[None, _float, 'types.FloatFilter']
    time_remaining: Union[None, _int, 'types.BigIntFilter']
    temp_battery: Union[None, _float, 'types.FloatFilter']
    amp_hours_consumed: Union[None, _float, 'types.FloatFilter']
    charging_current: Union[None, _float, 'types.FloatFilter']
    timestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    usb_voltage: Union[None, _float, 'types.FloatFilter']
    usb_power: Union[None, _float, 'types.FloatFilter']
    usb_current: Union[None, _float, 'types.FloatFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    altitude: Union[None, _float, 'types.FloatFilter']
    SD_card_storage_remaining: Union[None, _float, 'types.FloatFilter']
    battery_orientation: Union[None, _str, 'types.StringFilter']
    number_GPS_satellites_for_fix: Union[None, _int, 'types.IntFilter']
    mobile_signal_strength: Union[None, _int, 'types.IntFilter']
    event_type: Union[None, _str, 'types.StringFilter']
    new_battery_cycle: Union[None, _int, 'types.IntFilter']
    battery: 'BEPPPBatteryRelationFilter'

    # should be noted that AND and NOT should be Union['LiveDataWhereInputRecursive2', List['LiveDataWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['LiveDataWhereInputRecursive2']
    OR: List['LiveDataWhereInputRecursive2']
    NOT: List['LiveDataWhereInputRecursive2']


class LiveDataWhereInputRecursive2(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    state_of_charge: Union[None, _int, 'types.BigIntFilter']
    voltage: Union[None, _float, 'types.FloatFilter']
    current_amps: Union[None, _float, 'types.FloatFilter']
    power_watts: Union[None, _float, 'types.FloatFilter']
    time_remaining: Union[None, _int, 'types.BigIntFilter']
    temp_battery: Union[None, _float, 'types.FloatFilter']
    amp_hours_consumed: Union[None, _float, 'types.FloatFilter']
    charging_current: Union[None, _float, 'types.FloatFilter']
    timestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    usb_voltage: Union[None, _float, 'types.FloatFilter']
    usb_power: Union[None, _float, 'types.FloatFilter']
    usb_current: Union[None, _float, 'types.FloatFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    altitude: Union[None, _float, 'types.FloatFilter']
    SD_card_storage_remaining: Union[None, _float, 'types.FloatFilter']
    battery_orientation: Union[None, _str, 'types.StringFilter']
    number_GPS_satellites_for_fix: Union[None, _int, 'types.IntFilter']
    mobile_signal_strength: Union[None, _int, 'types.IntFilter']
    event_type: Union[None, _str, 'types.StringFilter']
    new_battery_cycle: Union[None, _int, 'types.IntFilter']
    battery: 'BEPPPBatteryRelationFilter'

    # should be noted that AND and NOT should be Union['LiveDataWhereInputRecursive3', List['LiveDataWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['LiveDataWhereInputRecursive3']
    OR: List['LiveDataWhereInputRecursive3']
    NOT: List['LiveDataWhereInputRecursive3']


class LiveDataWhereInputRecursive3(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    state_of_charge: Union[None, _int, 'types.BigIntFilter']
    voltage: Union[None, _float, 'types.FloatFilter']
    current_amps: Union[None, _float, 'types.FloatFilter']
    power_watts: Union[None, _float, 'types.FloatFilter']
    time_remaining: Union[None, _int, 'types.BigIntFilter']
    temp_battery: Union[None, _float, 'types.FloatFilter']
    amp_hours_consumed: Union[None, _float, 'types.FloatFilter']
    charging_current: Union[None, _float, 'types.FloatFilter']
    timestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    usb_voltage: Union[None, _float, 'types.FloatFilter']
    usb_power: Union[None, _float, 'types.FloatFilter']
    usb_current: Union[None, _float, 'types.FloatFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    altitude: Union[None, _float, 'types.FloatFilter']
    SD_card_storage_remaining: Union[None, _float, 'types.FloatFilter']
    battery_orientation: Union[None, _str, 'types.StringFilter']
    number_GPS_satellites_for_fix: Union[None, _int, 'types.IntFilter']
    mobile_signal_strength: Union[None, _int, 'types.IntFilter']
    event_type: Union[None, _str, 'types.StringFilter']
    new_battery_cycle: Union[None, _int, 'types.IntFilter']
    battery: 'BEPPPBatteryRelationFilter'

    # should be noted that AND and NOT should be Union['LiveDataWhereInputRecursive4', List['LiveDataWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['LiveDataWhereInputRecursive4']
    OR: List['LiveDataWhereInputRecursive4']
    NOT: List['LiveDataWhereInputRecursive4']


class LiveDataWhereInputRecursive4(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    state_of_charge: Union[None, _int, 'types.BigIntFilter']
    voltage: Union[None, _float, 'types.FloatFilter']
    current_amps: Union[None, _float, 'types.FloatFilter']
    power_watts: Union[None, _float, 'types.FloatFilter']
    time_remaining: Union[None, _int, 'types.BigIntFilter']
    temp_battery: Union[None, _float, 'types.FloatFilter']
    amp_hours_consumed: Union[None, _float, 'types.FloatFilter']
    charging_current: Union[None, _float, 'types.FloatFilter']
    timestamp: Union[None, datetime.datetime, 'types.DateTimeFilter']
    usb_voltage: Union[None, _float, 'types.FloatFilter']
    usb_power: Union[None, _float, 'types.FloatFilter']
    usb_current: Union[None, _float, 'types.FloatFilter']
    latitude: Union[None, _float, 'types.FloatFilter']
    longitude: Union[None, _float, 'types.FloatFilter']
    altitude: Union[None, _float, 'types.FloatFilter']
    SD_card_storage_remaining: Union[None, _float, 'types.FloatFilter']
    battery_orientation: Union[None, _str, 'types.StringFilter']
    number_GPS_satellites_for_fix: Union[None, _int, 'types.IntFilter']
    mobile_signal_strength: Union[None, _int, 'types.IntFilter']
    event_type: Union[None, _str, 'types.StringFilter']
    new_battery_cycle: Union[None, _int, 'types.IntFilter']
    battery: 'BEPPPBatteryRelationFilter'



# aggregate LiveData types


    

class LiveDataScalarWhereWithAggregatesInput(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    state_of_charge: Union[_int, 'types.BigIntWithAggregatesFilter']
    voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    current_amps: Union[_float, 'types.FloatWithAggregatesFilter']
    power_watts: Union[_float, 'types.FloatWithAggregatesFilter']
    time_remaining: Union[_int, 'types.BigIntWithAggregatesFilter']
    temp_battery: Union[_float, 'types.FloatWithAggregatesFilter']
    amp_hours_consumed: Union[_float, 'types.FloatWithAggregatesFilter']
    charging_current: Union[_float, 'types.FloatWithAggregatesFilter']
    timestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usb_voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_power: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_current: Union[_float, 'types.FloatWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']
    altitude: Union[_float, 'types.FloatWithAggregatesFilter']
    SD_card_storage_remaining: Union[_float, 'types.FloatWithAggregatesFilter']
    battery_orientation: Union[_str, 'types.StringWithAggregatesFilter']
    number_GPS_satellites_for_fix: Union[_int, 'types.IntWithAggregatesFilter']
    mobile_signal_strength: Union[_int, 'types.IntWithAggregatesFilter']
    event_type: Union[_str, 'types.StringWithAggregatesFilter']
    new_battery_cycle: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['LiveDataScalarWhereWithAggregatesInputRecursive1']
    OR: List['LiveDataScalarWhereWithAggregatesInputRecursive1']
    NOT: List['LiveDataScalarWhereWithAggregatesInputRecursive1']


class LiveDataScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    state_of_charge: Union[_int, 'types.BigIntWithAggregatesFilter']
    voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    current_amps: Union[_float, 'types.FloatWithAggregatesFilter']
    power_watts: Union[_float, 'types.FloatWithAggregatesFilter']
    time_remaining: Union[_int, 'types.BigIntWithAggregatesFilter']
    temp_battery: Union[_float, 'types.FloatWithAggregatesFilter']
    amp_hours_consumed: Union[_float, 'types.FloatWithAggregatesFilter']
    charging_current: Union[_float, 'types.FloatWithAggregatesFilter']
    timestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usb_voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_power: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_current: Union[_float, 'types.FloatWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']
    altitude: Union[_float, 'types.FloatWithAggregatesFilter']
    SD_card_storage_remaining: Union[_float, 'types.FloatWithAggregatesFilter']
    battery_orientation: Union[_str, 'types.StringWithAggregatesFilter']
    number_GPS_satellites_for_fix: Union[_int, 'types.IntWithAggregatesFilter']
    mobile_signal_strength: Union[_int, 'types.IntWithAggregatesFilter']
    event_type: Union[_str, 'types.StringWithAggregatesFilter']
    new_battery_cycle: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['LiveDataScalarWhereWithAggregatesInputRecursive2']
    OR: List['LiveDataScalarWhereWithAggregatesInputRecursive2']
    NOT: List['LiveDataScalarWhereWithAggregatesInputRecursive2']


class LiveDataScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    state_of_charge: Union[_int, 'types.BigIntWithAggregatesFilter']
    voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    current_amps: Union[_float, 'types.FloatWithAggregatesFilter']
    power_watts: Union[_float, 'types.FloatWithAggregatesFilter']
    time_remaining: Union[_int, 'types.BigIntWithAggregatesFilter']
    temp_battery: Union[_float, 'types.FloatWithAggregatesFilter']
    amp_hours_consumed: Union[_float, 'types.FloatWithAggregatesFilter']
    charging_current: Union[_float, 'types.FloatWithAggregatesFilter']
    timestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usb_voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_power: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_current: Union[_float, 'types.FloatWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']
    altitude: Union[_float, 'types.FloatWithAggregatesFilter']
    SD_card_storage_remaining: Union[_float, 'types.FloatWithAggregatesFilter']
    battery_orientation: Union[_str, 'types.StringWithAggregatesFilter']
    number_GPS_satellites_for_fix: Union[_int, 'types.IntWithAggregatesFilter']
    mobile_signal_strength: Union[_int, 'types.IntWithAggregatesFilter']
    event_type: Union[_str, 'types.StringWithAggregatesFilter']
    new_battery_cycle: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['LiveDataScalarWhereWithAggregatesInputRecursive3']
    OR: List['LiveDataScalarWhereWithAggregatesInputRecursive3']
    NOT: List['LiveDataScalarWhereWithAggregatesInputRecursive3']


class LiveDataScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    state_of_charge: Union[_int, 'types.BigIntWithAggregatesFilter']
    voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    current_amps: Union[_float, 'types.FloatWithAggregatesFilter']
    power_watts: Union[_float, 'types.FloatWithAggregatesFilter']
    time_remaining: Union[_int, 'types.BigIntWithAggregatesFilter']
    temp_battery: Union[_float, 'types.FloatWithAggregatesFilter']
    amp_hours_consumed: Union[_float, 'types.FloatWithAggregatesFilter']
    charging_current: Union[_float, 'types.FloatWithAggregatesFilter']
    timestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usb_voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_power: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_current: Union[_float, 'types.FloatWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']
    altitude: Union[_float, 'types.FloatWithAggregatesFilter']
    SD_card_storage_remaining: Union[_float, 'types.FloatWithAggregatesFilter']
    battery_orientation: Union[_str, 'types.StringWithAggregatesFilter']
    number_GPS_satellites_for_fix: Union[_int, 'types.IntWithAggregatesFilter']
    mobile_signal_strength: Union[_int, 'types.IntWithAggregatesFilter']
    event_type: Union[_str, 'types.StringWithAggregatesFilter']
    new_battery_cycle: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['LiveDataScalarWhereWithAggregatesInputRecursive4']
    OR: List['LiveDataScalarWhereWithAggregatesInputRecursive4']
    NOT: List['LiveDataScalarWhereWithAggregatesInputRecursive4']


class LiveDataScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """LiveData arguments for searching"""
    id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    state_of_charge: Union[_int, 'types.BigIntWithAggregatesFilter']
    voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    current_amps: Union[_float, 'types.FloatWithAggregatesFilter']
    power_watts: Union[_float, 'types.FloatWithAggregatesFilter']
    time_remaining: Union[_int, 'types.BigIntWithAggregatesFilter']
    temp_battery: Union[_float, 'types.FloatWithAggregatesFilter']
    amp_hours_consumed: Union[_float, 'types.FloatWithAggregatesFilter']
    charging_current: Union[_float, 'types.FloatWithAggregatesFilter']
    timestamp: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    usb_voltage: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_power: Union[_float, 'types.FloatWithAggregatesFilter']
    usb_current: Union[_float, 'types.FloatWithAggregatesFilter']
    latitude: Union[_float, 'types.FloatWithAggregatesFilter']
    longitude: Union[_float, 'types.FloatWithAggregatesFilter']
    altitude: Union[_float, 'types.FloatWithAggregatesFilter']
    SD_card_storage_remaining: Union[_float, 'types.FloatWithAggregatesFilter']
    battery_orientation: Union[_str, 'types.StringWithAggregatesFilter']
    number_GPS_satellites_for_fix: Union[_int, 'types.IntWithAggregatesFilter']
    mobile_signal_strength: Union[_int, 'types.IntWithAggregatesFilter']
    event_type: Union[_str, 'types.StringWithAggregatesFilter']
    new_battery_cycle: Union[_int, 'types.IntWithAggregatesFilter']



class LiveDataGroupByOutput(TypedDict, total=False):
    id: _int
    battery_id: _int
    state_of_charge: _int
    voltage: _float
    current_amps: _float
    power_watts: _float
    time_remaining: _int
    temp_battery: _float
    amp_hours_consumed: _float
    charging_current: _float
    timestamp: datetime.datetime
    usb_voltage: _float
    usb_power: _float
    usb_current: _float
    latitude: _float
    longitude: _float
    altitude: _float
    SD_card_storage_remaining: _float
    battery_orientation: _str
    number_GPS_satellites_for_fix: _int
    mobile_signal_strength: _int
    event_type: _str
    new_battery_cycle: _int
    _sum: 'LiveDataSumAggregateOutput'
    _avg: 'LiveDataAvgAggregateOutput'
    _min: 'LiveDataMinAggregateOutput'
    _max: 'LiveDataMaxAggregateOutput'
    _count: 'LiveDataCountAggregateOutput'


class LiveDataAvgAggregateOutput(TypedDict, total=False):
    """LiveData output for aggregating averages"""
    id: float
    battery_id: float
    state_of_charge: float
    voltage: float
    current_amps: float
    power_watts: float
    time_remaining: float
    temp_battery: float
    amp_hours_consumed: float
    charging_current: float
    usb_voltage: float
    usb_power: float
    usb_current: float
    latitude: float
    longitude: float
    altitude: float
    SD_card_storage_remaining: float
    number_GPS_satellites_for_fix: float
    mobile_signal_strength: float
    new_battery_cycle: float


class LiveDataSumAggregateOutput(TypedDict, total=False):
    """LiveData output for aggregating sums"""
    id: _int
    battery_id: _int
    state_of_charge: _int
    voltage: _float
    current_amps: _float
    power_watts: _float
    time_remaining: _int
    temp_battery: _float
    amp_hours_consumed: _float
    charging_current: _float
    usb_voltage: _float
    usb_power: _float
    usb_current: _float
    latitude: _float
    longitude: _float
    altitude: _float
    SD_card_storage_remaining: _float
    number_GPS_satellites_for_fix: _int
    mobile_signal_strength: _int
    new_battery_cycle: _int


class LiveDataScalarAggregateOutput(TypedDict, total=False):
    """LiveData output including scalar fields"""
    id: _int
    battery_id: _int
    state_of_charge: _int
    voltage: _float
    current_amps: _float
    power_watts: _float
    time_remaining: _int
    temp_battery: _float
    amp_hours_consumed: _float
    charging_current: _float
    timestamp: datetime.datetime
    usb_voltage: _float
    usb_power: _float
    usb_current: _float
    latitude: _float
    longitude: _float
    altitude: _float
    SD_card_storage_remaining: _float
    battery_orientation: _str
    number_GPS_satellites_for_fix: _int
    mobile_signal_strength: _int
    event_type: _str
    new_battery_cycle: _int


LiveDataMinAggregateOutput = LiveDataScalarAggregateOutput
LiveDataMaxAggregateOutput = LiveDataScalarAggregateOutput


class LiveDataMaxAggregateInput(TypedDict, total=False):
    """LiveData input for aggregating by max"""
    id: bool
    battery_id: bool
    state_of_charge: bool
    voltage: bool
    current_amps: bool
    power_watts: bool
    time_remaining: bool
    temp_battery: bool
    amp_hours_consumed: bool
    charging_current: bool
    timestamp: bool
    usb_voltage: bool
    usb_power: bool
    usb_current: bool
    latitude: bool
    longitude: bool
    altitude: bool
    SD_card_storage_remaining: bool
    battery_orientation: bool
    number_GPS_satellites_for_fix: bool
    mobile_signal_strength: bool
    event_type: bool
    new_battery_cycle: bool


class LiveDataMinAggregateInput(TypedDict, total=False):
    """LiveData input for aggregating by min"""
    id: bool
    battery_id: bool
    state_of_charge: bool
    voltage: bool
    current_amps: bool
    power_watts: bool
    time_remaining: bool
    temp_battery: bool
    amp_hours_consumed: bool
    charging_current: bool
    timestamp: bool
    usb_voltage: bool
    usb_power: bool
    usb_current: bool
    latitude: bool
    longitude: bool
    altitude: bool
    SD_card_storage_remaining: bool
    battery_orientation: bool
    number_GPS_satellites_for_fix: bool
    mobile_signal_strength: bool
    event_type: bool
    new_battery_cycle: bool


class LiveDataNumberAggregateInput(TypedDict, total=False):
    """LiveData input for aggregating numbers"""
    id: bool
    battery_id: bool
    state_of_charge: bool
    voltage: bool
    current_amps: bool
    power_watts: bool
    time_remaining: bool
    temp_battery: bool
    amp_hours_consumed: bool
    charging_current: bool
    usb_voltage: bool
    usb_power: bool
    usb_current: bool
    latitude: bool
    longitude: bool
    altitude: bool
    SD_card_storage_remaining: bool
    number_GPS_satellites_for_fix: bool
    mobile_signal_strength: bool
    new_battery_cycle: bool


LiveDataAvgAggregateInput = LiveDataNumberAggregateInput
LiveDataSumAggregateInput = LiveDataNumberAggregateInput


LiveDataCountAggregateInput = TypedDict(
    'LiveDataCountAggregateInput',
    {
        'id': bool,
        'battery_id': bool,
        'state_of_charge': bool,
        'voltage': bool,
        'current_amps': bool,
        'power_watts': bool,
        'time_remaining': bool,
        'temp_battery': bool,
        'amp_hours_consumed': bool,
        'charging_current': bool,
        'timestamp': bool,
        'usb_voltage': bool,
        'usb_power': bool,
        'usb_current': bool,
        'latitude': bool,
        'longitude': bool,
        'altitude': bool,
        'SD_card_storage_remaining': bool,
        'battery_orientation': bool,
        'number_GPS_satellites_for_fix': bool,
        'mobile_signal_strength': bool,
        'event_type': bool,
        'new_battery_cycle': bool,
        '_all': bool,
    },
    total=False,
)

LiveDataCountAggregateOutput = TypedDict(
    'LiveDataCountAggregateOutput',
    {
        'id': int,
        'battery_id': int,
        'state_of_charge': int,
        'voltage': int,
        'current_amps': int,
        'power_watts': int,
        'time_remaining': int,
        'temp_battery': int,
        'amp_hours_consumed': int,
        'charging_current': int,
        'timestamp': int,
        'usb_voltage': int,
        'usb_power': int,
        'usb_current': int,
        'latitude': int,
        'longitude': int,
        'altitude': int,
        'SD_card_storage_remaining': int,
        'battery_orientation': int,
        'number_GPS_satellites_for_fix': int,
        'mobile_signal_strength': int,
        'event_type': int,
        'new_battery_cycle': int,
        '_all': int,
    },
    total=False,
)


LiveDataKeys = Literal[
    'id',
    'battery_id',
    'state_of_charge',
    'voltage',
    'current_amps',
    'power_watts',
    'time_remaining',
    'temp_battery',
    'amp_hours_consumed',
    'charging_current',
    'timestamp',
    'usb_voltage',
    'usb_power',
    'usb_current',
    'latitude',
    'longitude',
    'altitude',
    'SD_card_storage_remaining',
    'battery_orientation',
    'number_GPS_satellites_for_fix',
    'mobile_signal_strength',
    'event_type',
    'new_battery_cycle',
    'battery',
]
LiveDataScalarFieldKeys = Literal[
    'id',
    'battery_id',
    'state_of_charge',
    'voltage',
    'current_amps',
    'power_watts',
    'time_remaining',
    'temp_battery',
    'amp_hours_consumed',
    'charging_current',
    'timestamp',
    'usb_voltage',
    'usb_power',
    'usb_current',
    'latitude',
    'longitude',
    'altitude',
    'SD_card_storage_remaining',
    'battery_orientation',
    'number_GPS_satellites_for_fix',
    'mobile_signal_strength',
    'event_type',
    'new_battery_cycle',
]
LiveDataScalarFieldKeysT = TypeVar('LiveDataScalarFieldKeysT', bound=LiveDataScalarFieldKeys)

LiveDataRelationalFieldKeys = Literal[
        'battery',
    ]

# Rental types

class RentalOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the Rental create method"""
    battery_id: _int
    user_id: _int
    due_back: Optional[datetime.datetime]
    date_returned: Optional[datetime.datetime]
    battery: 'BEPPPBatteryCreateNestedWithoutRelationsInput'
    user: 'UserCreateNestedWithoutRelationsInput'
    notes: 'Rental_NotesCreateManyNestedWithoutRelationsInput'
    pue_rentals: 'BatteryPUERentalCreateManyNestedWithoutRelationsInput'


class RentalCreateInput(RentalOptionalCreateInput):
    """Required arguments to the Rental create method"""
    rentral_id: _int
    timestamp_taken: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class RentalOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the Rental create method, without relations"""
    battery_id: _int
    user_id: _int
    due_back: Optional[datetime.datetime]
    date_returned: Optional[datetime.datetime]


class RentalCreateWithoutRelationsInput(RentalOptionalCreateWithoutRelationsInput):
    """Required arguments to the Rental create method, without relations"""
    rentral_id: _int
    timestamp_taken: datetime.datetime


class RentalCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'RentalCreateWithoutRelationsInput'
    connect: 'RentalWhereUniqueInput'


class RentalCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['RentalCreateWithoutRelationsInput', List['RentalCreateWithoutRelationsInput']]
    connect: Union['RentalWhereUniqueInput', List['RentalWhereUniqueInput']]


_RentalWhereUnique_rentral_id_Input = TypedDict(
    '_RentalWhereUnique_rentral_id_Input',
    {
        'rentral_id': '_int',
    },
    total=True
)

RentalWhereUniqueInput = _RentalWhereUnique_rentral_id_Input


class RentalUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    rentral_id: Union[AtomicBigIntInput, _int]
    timestamp_taken: datetime.datetime
    due_back: Optional[datetime.datetime]
    date_returned: Optional[datetime.datetime]
    battery: 'BEPPPBatteryUpdateOneWithoutRelationsInput'
    user: 'UserUpdateOneWithoutRelationsInput'
    notes: 'Rental_NotesUpdateManyWithoutRelationsInput'
    pue_rentals: 'BatteryPUERentalUpdateManyWithoutRelationsInput'


class RentalUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    rentral_id: Union[AtomicBigIntInput, _int]
    timestamp_taken: datetime.datetime
    due_back: Optional[datetime.datetime]
    date_returned: Optional[datetime.datetime]


class RentalUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['RentalCreateWithoutRelationsInput']
    connect: List['RentalWhereUniqueInput']
    set: List['RentalWhereUniqueInput']
    disconnect: List['RentalWhereUniqueInput']
    delete: List['RentalWhereUniqueInput']

    # TODO
    # update: List['RentalUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['RentalUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['RentalScalarWhereInput']
    # upsert: List['RentalUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['RentalCreateOrConnectWithoutRelationsInput']


class RentalUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'RentalCreateWithoutRelationsInput'
    connect: 'RentalWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'RentalUpdateInput'
    # upsert: 'RentalUpsertWithoutRelationsInput'
    # connectOrCreate: 'RentalCreateOrConnectWithoutRelationsInput'


class RentalUpsertInput(TypedDict):
    create: 'RentalCreateInput'
    update: 'RentalUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_Rental_rentral_id_OrderByInput = TypedDict(
    '_Rental_rentral_id_OrderByInput',
    {
        'rentral_id': 'SortOrder',
    },
    total=True
)

_Rental_battery_id_OrderByInput = TypedDict(
    '_Rental_battery_id_OrderByInput',
    {
        'battery_id': 'SortOrder',
    },
    total=True
)

_Rental_user_id_OrderByInput = TypedDict(
    '_Rental_user_id_OrderByInput',
    {
        'user_id': 'SortOrder',
    },
    total=True
)

_Rental_timestamp_taken_OrderByInput = TypedDict(
    '_Rental_timestamp_taken_OrderByInput',
    {
        'timestamp_taken': 'SortOrder',
    },
    total=True
)

_Rental_due_back_OrderByInput = TypedDict(
    '_Rental_due_back_OrderByInput',
    {
        'due_back': 'SortOrder',
    },
    total=True
)

_Rental_date_returned_OrderByInput = TypedDict(
    '_Rental_date_returned_OrderByInput',
    {
        'date_returned': 'SortOrder',
    },
    total=True
)

RentalOrderByInput = Union[
    '_Rental_rentral_id_OrderByInput',
    '_Rental_battery_id_OrderByInput',
    '_Rental_user_id_OrderByInput',
    '_Rental_timestamp_taken_OrderByInput',
    '_Rental_due_back_OrderByInput',
    '_Rental_date_returned_OrderByInput',
]



# recursive Rental types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

RentalRelationFilter = TypedDict(
    'RentalRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class RentalListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class RentalInclude(TypedDict, total=False):
    """Rental relational arguments"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRental']
    user: Union[bool, 'UserArgsFromRental']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRental']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRental']


    

class SolarHubIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    users: Union[bool, 'FindManyUserArgsFromRentalRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromRentalRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromRentalRecursive1']


class SolarHubIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    users: Union[bool, 'FindManyUserArgsFromRentalRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromRentalRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromRentalRecursive2']


class SolarHubIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    users: Union[bool, 'FindManyUserArgsFromRentalRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromRentalRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromRentalRecursive3']


class SolarHubIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    users: Union[bool, 'FindManyUserArgsFromRentalRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromRentalRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromRentalRecursive4']


class SolarHubIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class SolarHubArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManySolarHubArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromRentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRentalRecursive1']


class UserIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromRentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRentalRecursive2']


class UserIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromRentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRentalRecursive3']


class UserIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromRentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRentalRecursive4']


class UserIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class UserArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyUserArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRentalRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromRentalRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromRentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromRentalRecursive1']


class NoteIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRentalRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromRentalRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromRentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromRentalRecursive2']


class NoteIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRentalRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromRentalRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromRentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromRentalRecursive3']


class NoteIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRentalRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromRentalRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromRentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromRentalRecursive4']


class NoteIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class NoteArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyNoteArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive1']
    note: Union[bool, 'NoteArgsFromRentalRecursive1']


class BEPPPBattery_NotesIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive2']
    note: Union[bool, 'NoteArgsFromRentalRecursive2']


class BEPPPBattery_NotesIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive3']
    note: Union[bool, 'NoteArgsFromRentalRecursive3']


class BEPPPBattery_NotesIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive4']
    note: Union[bool, 'NoteArgsFromRentalRecursive4']


class BEPPPBattery_NotesIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class BEPPPBattery_NotesArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyBEPPPBattery_NotesArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    rental: Union[bool, 'RentalArgsFromRentalRecursive1']
    note: Union[bool, 'NoteArgsFromRentalRecursive1']


class Rental_NotesIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    rental: Union[bool, 'RentalArgsFromRentalRecursive2']
    note: Union[bool, 'NoteArgsFromRentalRecursive2']


class Rental_NotesIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    rental: Union[bool, 'RentalArgsFromRentalRecursive3']
    note: Union[bool, 'NoteArgsFromRentalRecursive3']


class Rental_NotesIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    rental: Union[bool, 'RentalArgsFromRentalRecursive4']
    note: Union[bool, 'NoteArgsFromRentalRecursive4']


class Rental_NotesIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class Rental_NotesArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyRental_NotesArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRentalRecursive1']
    note: Union[bool, 'NoteArgsFromRentalRecursive1']


class PUE_NotesIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRentalRecursive2']
    note: Union[bool, 'NoteArgsFromRentalRecursive2']


class PUE_NotesIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRentalRecursive3']
    note: Union[bool, 'NoteArgsFromRentalRecursive3']


class PUE_NotesIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRentalRecursive4']
    note: Union[bool, 'NoteArgsFromRentalRecursive4']


class PUE_NotesIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class PUE_NotesArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyPUE_NotesArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue_rental: Union[bool, 'PUERentalArgsFromRentalRecursive1']
    note: Union[bool, 'NoteArgsFromRentalRecursive1']


class PUERental_NotesIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue_rental: Union[bool, 'PUERentalArgsFromRentalRecursive2']
    note: Union[bool, 'NoteArgsFromRentalRecursive2']


class PUERental_NotesIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue_rental: Union[bool, 'PUERentalArgsFromRentalRecursive3']
    note: Union[bool, 'NoteArgsFromRentalRecursive3']


class PUERental_NotesIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue_rental: Union[bool, 'PUERentalArgsFromRentalRecursive4']
    note: Union[bool, 'NoteArgsFromRentalRecursive4']


class PUERental_NotesIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class PUERental_NotesArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyPUERental_NotesArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromRentalRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromRentalRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRentalRecursive1']


class BEPPPBatteryIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromRentalRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromRentalRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRentalRecursive2']


class BEPPPBatteryIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromRentalRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromRentalRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRentalRecursive3']


class BEPPPBatteryIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromRentalRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromRentalRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromRentalRecursive4']


class BEPPPBatteryIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class BEPPPBatteryArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyBEPPPBatteryArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive1']


class LiveDataIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive2']


class LiveDataIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive3']


class LiveDataIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive4']


class LiveDataIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class LiveDataArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyLiveDataArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive1']
    user: Union[bool, 'UserArgsFromRentalRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRentalRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRentalRecursive1']


class RentalIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive2']
    user: Union[bool, 'UserArgsFromRentalRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRentalRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRentalRecursive2']


class RentalIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive3']
    user: Union[bool, 'UserArgsFromRentalRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRentalRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRentalRecursive3']


class RentalIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromRentalRecursive4']
    user: Union[bool, 'UserArgsFromRentalRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromRentalRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRentalRecursive4']


class RentalIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class RentalArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyRentalArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromRentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRentalRecursive1']


class ProductiveUseEquipmentIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromRentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRentalRecursive2']


class ProductiveUseEquipmentIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromRentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRentalRecursive3']


class ProductiveUseEquipmentIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    hub: Union[bool, 'SolarHubArgsFromRentalRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromRentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromRentalRecursive4']


class ProductiveUseEquipmentIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class ProductiveUseEquipmentArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyProductiveUseEquipmentArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRentalRecursive1']
    user: Union[bool, 'UserArgsFromRentalRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromRentalRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRentalRecursive1']


class PUERentalIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRentalRecursive2']
    user: Union[bool, 'UserArgsFromRentalRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromRentalRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRentalRecursive2']


class PUERentalIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRentalRecursive3']
    user: Union[bool, 'UserArgsFromRentalRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromRentalRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRentalRecursive3']


class PUERentalIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromRentalRecursive4']
    user: Union[bool, 'UserArgsFromRentalRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromRentalRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromRentalRecursive4']


class PUERentalIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class PUERentalArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyPUERentalArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromRental(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery_rental: Union[bool, 'RentalArgsFromRentalRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromRentalRecursive1']


class BatteryPUERentalIncludeFromRentalRecursive1(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery_rental: Union[bool, 'RentalArgsFromRentalRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromRentalRecursive2']


class BatteryPUERentalIncludeFromRentalRecursive2(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery_rental: Union[bool, 'RentalArgsFromRentalRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromRentalRecursive3']


class BatteryPUERentalIncludeFromRentalRecursive3(TypedDict, total=False):
    """Relational arguments for Rental"""
    battery_rental: Union[bool, 'RentalArgsFromRentalRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromRentalRecursive4']


class BatteryPUERentalIncludeFromRentalRecursive4(TypedDict, total=False):
    """Relational arguments for Rental"""

    

class BatteryPUERentalArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    
    

class FindManyBatteryPUERentalArgsFromRental(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromRentalRecursive1(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromRentalRecursive2(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromRentalRecursive3(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromRentalRecursive4(TypedDict, total=False):
    """Arguments for Rental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyRentalArgs = FindManyRentalArgsFromRental
FindFirstRentalArgs = FindManyRentalArgsFromRental


    

class RentalWhereInput(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    battery: 'BEPPPBatteryRelationFilter'
    user: 'UserRelationFilter'
    notes: 'Rental_NotesListRelationFilter'
    pue_rentals: 'BatteryPUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['RentalWhereInputRecursive1', List['RentalWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['RentalWhereInputRecursive1']
    OR: List['RentalWhereInputRecursive1']
    NOT: List['RentalWhereInputRecursive1']


class RentalWhereInputRecursive1(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    battery: 'BEPPPBatteryRelationFilter'
    user: 'UserRelationFilter'
    notes: 'Rental_NotesListRelationFilter'
    pue_rentals: 'BatteryPUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['RentalWhereInputRecursive2', List['RentalWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['RentalWhereInputRecursive2']
    OR: List['RentalWhereInputRecursive2']
    NOT: List['RentalWhereInputRecursive2']


class RentalWhereInputRecursive2(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    battery: 'BEPPPBatteryRelationFilter'
    user: 'UserRelationFilter'
    notes: 'Rental_NotesListRelationFilter'
    pue_rentals: 'BatteryPUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['RentalWhereInputRecursive3', List['RentalWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['RentalWhereInputRecursive3']
    OR: List['RentalWhereInputRecursive3']
    NOT: List['RentalWhereInputRecursive3']


class RentalWhereInputRecursive3(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    battery: 'BEPPPBatteryRelationFilter'
    user: 'UserRelationFilter'
    notes: 'Rental_NotesListRelationFilter'
    pue_rentals: 'BatteryPUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['RentalWhereInputRecursive4', List['RentalWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['RentalWhereInputRecursive4']
    OR: List['RentalWhereInputRecursive4']
    NOT: List['RentalWhereInputRecursive4']


class RentalWhereInputRecursive4(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntFilter']
    battery_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    battery: 'BEPPPBatteryRelationFilter'
    user: 'UserRelationFilter'
    notes: 'Rental_NotesListRelationFilter'
    pue_rentals: 'BatteryPUERentalListRelationFilter'



# aggregate Rental types


    

class RentalScalarWhereWithAggregatesInput(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['RentalScalarWhereWithAggregatesInputRecursive1']
    OR: List['RentalScalarWhereWithAggregatesInputRecursive1']
    NOT: List['RentalScalarWhereWithAggregatesInputRecursive1']


class RentalScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['RentalScalarWhereWithAggregatesInputRecursive2']
    OR: List['RentalScalarWhereWithAggregatesInputRecursive2']
    NOT: List['RentalScalarWhereWithAggregatesInputRecursive2']


class RentalScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['RentalScalarWhereWithAggregatesInputRecursive3']
    OR: List['RentalScalarWhereWithAggregatesInputRecursive3']
    NOT: List['RentalScalarWhereWithAggregatesInputRecursive3']


class RentalScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['RentalScalarWhereWithAggregatesInputRecursive4']
    OR: List['RentalScalarWhereWithAggregatesInputRecursive4']
    NOT: List['RentalScalarWhereWithAggregatesInputRecursive4']


class RentalScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """Rental arguments for searching"""
    rentral_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    battery_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class RentalGroupByOutput(TypedDict, total=False):
    rentral_id: _int
    battery_id: _int
    user_id: _int
    timestamp_taken: datetime.datetime
    due_back: datetime.datetime
    date_returned: datetime.datetime
    _sum: 'RentalSumAggregateOutput'
    _avg: 'RentalAvgAggregateOutput'
    _min: 'RentalMinAggregateOutput'
    _max: 'RentalMaxAggregateOutput'
    _count: 'RentalCountAggregateOutput'


class RentalAvgAggregateOutput(TypedDict, total=False):
    """Rental output for aggregating averages"""
    rentral_id: float
    battery_id: float
    user_id: float


class RentalSumAggregateOutput(TypedDict, total=False):
    """Rental output for aggregating sums"""
    rentral_id: _int
    battery_id: _int
    user_id: _int


class RentalScalarAggregateOutput(TypedDict, total=False):
    """Rental output including scalar fields"""
    rentral_id: _int
    battery_id: _int
    user_id: _int
    timestamp_taken: datetime.datetime
    due_back: datetime.datetime
    date_returned: datetime.datetime


RentalMinAggregateOutput = RentalScalarAggregateOutput
RentalMaxAggregateOutput = RentalScalarAggregateOutput


class RentalMaxAggregateInput(TypedDict, total=False):
    """Rental input for aggregating by max"""
    rentral_id: bool
    battery_id: bool
    user_id: bool
    timestamp_taken: bool
    due_back: bool
    date_returned: bool


class RentalMinAggregateInput(TypedDict, total=False):
    """Rental input for aggregating by min"""
    rentral_id: bool
    battery_id: bool
    user_id: bool
    timestamp_taken: bool
    due_back: bool
    date_returned: bool


class RentalNumberAggregateInput(TypedDict, total=False):
    """Rental input for aggregating numbers"""
    rentral_id: bool
    battery_id: bool
    user_id: bool


RentalAvgAggregateInput = RentalNumberAggregateInput
RentalSumAggregateInput = RentalNumberAggregateInput


RentalCountAggregateInput = TypedDict(
    'RentalCountAggregateInput',
    {
        'rentral_id': bool,
        'battery_id': bool,
        'user_id': bool,
        'timestamp_taken': bool,
        'due_back': bool,
        'date_returned': bool,
        '_all': bool,
    },
    total=False,
)

RentalCountAggregateOutput = TypedDict(
    'RentalCountAggregateOutput',
    {
        'rentral_id': int,
        'battery_id': int,
        'user_id': int,
        'timestamp_taken': int,
        'due_back': int,
        'date_returned': int,
        '_all': int,
    },
    total=False,
)


RentalKeys = Literal[
    'rentral_id',
    'battery_id',
    'user_id',
    'timestamp_taken',
    'due_back',
    'date_returned',
    'battery',
    'user',
    'notes',
    'pue_rentals',
]
RentalScalarFieldKeys = Literal[
    'rentral_id',
    'battery_id',
    'user_id',
    'timestamp_taken',
    'due_back',
    'date_returned',
]
RentalScalarFieldKeysT = TypeVar('RentalScalarFieldKeysT', bound=RentalScalarFieldKeys)

RentalRelationalFieldKeys = Literal[
        'battery',
        'user',
        'notes',
        'pue_rentals',
    ]

# ProductiveUseEquipment types

class ProductiveUseEquipmentOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the ProductiveUseEquipment create method"""
    hub_id: _int
    description: Optional[_str]
    rental_cost: Optional[_float]
    status: Optional[_str]
    rental_count: _int
    hub: 'SolarHubCreateNestedWithoutRelationsInput'
    notes: 'PUE_NotesCreateManyNestedWithoutRelationsInput'
    pue_rentals: 'PUERentalCreateManyNestedWithoutRelationsInput'


class ProductiveUseEquipmentCreateInput(ProductiveUseEquipmentOptionalCreateInput):
    """Required arguments to the ProductiveUseEquipment create method"""
    pue_id: _int
    name: _str


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class ProductiveUseEquipmentOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the ProductiveUseEquipment create method, without relations"""
    hub_id: _int
    description: Optional[_str]
    rental_cost: Optional[_float]
    status: Optional[_str]
    rental_count: _int


class ProductiveUseEquipmentCreateWithoutRelationsInput(ProductiveUseEquipmentOptionalCreateWithoutRelationsInput):
    """Required arguments to the ProductiveUseEquipment create method, without relations"""
    pue_id: _int
    name: _str


class ProductiveUseEquipmentCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'ProductiveUseEquipmentCreateWithoutRelationsInput'
    connect: 'ProductiveUseEquipmentWhereUniqueInput'


class ProductiveUseEquipmentCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['ProductiveUseEquipmentCreateWithoutRelationsInput', List['ProductiveUseEquipmentCreateWithoutRelationsInput']]
    connect: Union['ProductiveUseEquipmentWhereUniqueInput', List['ProductiveUseEquipmentWhereUniqueInput']]


_ProductiveUseEquipmentWhereUnique_pue_id_Input = TypedDict(
    '_ProductiveUseEquipmentWhereUnique_pue_id_Input',
    {
        'pue_id': '_int',
    },
    total=True
)

ProductiveUseEquipmentWhereUniqueInput = _ProductiveUseEquipmentWhereUnique_pue_id_Input


class ProductiveUseEquipmentUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    pue_id: Union[AtomicBigIntInput, _int]
    name: _str
    description: Optional[_str]
    rental_cost: Optional[Union[AtomicFloatInput, _float]]
    status: Optional[_str]
    rental_count: Union[AtomicIntInput, _int]
    hub: 'SolarHubUpdateOneWithoutRelationsInput'
    notes: 'PUE_NotesUpdateManyWithoutRelationsInput'
    pue_rentals: 'PUERentalUpdateManyWithoutRelationsInput'


class ProductiveUseEquipmentUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    pue_id: Union[AtomicBigIntInput, _int]
    name: _str
    description: Optional[_str]
    rental_cost: Optional[Union[AtomicFloatInput, _float]]
    status: Optional[_str]
    rental_count: Union[AtomicIntInput, _int]


class ProductiveUseEquipmentUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['ProductiveUseEquipmentCreateWithoutRelationsInput']
    connect: List['ProductiveUseEquipmentWhereUniqueInput']
    set: List['ProductiveUseEquipmentWhereUniqueInput']
    disconnect: List['ProductiveUseEquipmentWhereUniqueInput']
    delete: List['ProductiveUseEquipmentWhereUniqueInput']

    # TODO
    # update: List['ProductiveUseEquipmentUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['ProductiveUseEquipmentUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['ProductiveUseEquipmentScalarWhereInput']
    # upsert: List['ProductiveUseEquipmentUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['ProductiveUseEquipmentCreateOrConnectWithoutRelationsInput']


class ProductiveUseEquipmentUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'ProductiveUseEquipmentCreateWithoutRelationsInput'
    connect: 'ProductiveUseEquipmentWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'ProductiveUseEquipmentUpdateInput'
    # upsert: 'ProductiveUseEquipmentUpsertWithoutRelationsInput'
    # connectOrCreate: 'ProductiveUseEquipmentCreateOrConnectWithoutRelationsInput'


class ProductiveUseEquipmentUpsertInput(TypedDict):
    create: 'ProductiveUseEquipmentCreateInput'
    update: 'ProductiveUseEquipmentUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_ProductiveUseEquipment_pue_id_OrderByInput = TypedDict(
    '_ProductiveUseEquipment_pue_id_OrderByInput',
    {
        'pue_id': 'SortOrder',
    },
    total=True
)

_ProductiveUseEquipment_hub_id_OrderByInput = TypedDict(
    '_ProductiveUseEquipment_hub_id_OrderByInput',
    {
        'hub_id': 'SortOrder',
    },
    total=True
)

_ProductiveUseEquipment_name_OrderByInput = TypedDict(
    '_ProductiveUseEquipment_name_OrderByInput',
    {
        'name': 'SortOrder',
    },
    total=True
)

_ProductiveUseEquipment_description_OrderByInput = TypedDict(
    '_ProductiveUseEquipment_description_OrderByInput',
    {
        'description': 'SortOrder',
    },
    total=True
)

_ProductiveUseEquipment_rental_cost_OrderByInput = TypedDict(
    '_ProductiveUseEquipment_rental_cost_OrderByInput',
    {
        'rental_cost': 'SortOrder',
    },
    total=True
)

_ProductiveUseEquipment_status_OrderByInput = TypedDict(
    '_ProductiveUseEquipment_status_OrderByInput',
    {
        'status': 'SortOrder',
    },
    total=True
)

_ProductiveUseEquipment_rental_count_OrderByInput = TypedDict(
    '_ProductiveUseEquipment_rental_count_OrderByInput',
    {
        'rental_count': 'SortOrder',
    },
    total=True
)

ProductiveUseEquipmentOrderByInput = Union[
    '_ProductiveUseEquipment_pue_id_OrderByInput',
    '_ProductiveUseEquipment_hub_id_OrderByInput',
    '_ProductiveUseEquipment_name_OrderByInput',
    '_ProductiveUseEquipment_description_OrderByInput',
    '_ProductiveUseEquipment_rental_cost_OrderByInput',
    '_ProductiveUseEquipment_status_OrderByInput',
    '_ProductiveUseEquipment_rental_count_OrderByInput',
]



# recursive ProductiveUseEquipment types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

ProductiveUseEquipmentRelationFilter = TypedDict(
    'ProductiveUseEquipmentRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class ProductiveUseEquipmentListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class ProductiveUseEquipmentInclude(TypedDict, total=False):
    """ProductiveUseEquipment relational arguments"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipment']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipment']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipment']


    

class SolarHubIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    users: Union[bool, 'FindManyUserArgsFromProductiveUseEquipmentRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromProductiveUseEquipmentRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive1']


class SolarHubIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    users: Union[bool, 'FindManyUserArgsFromProductiveUseEquipmentRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromProductiveUseEquipmentRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive2']


class SolarHubIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    users: Union[bool, 'FindManyUserArgsFromProductiveUseEquipmentRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromProductiveUseEquipmentRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive3']


class SolarHubIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    users: Union[bool, 'FindManyUserArgsFromProductiveUseEquipmentRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromProductiveUseEquipmentRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive4']


class SolarHubIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class SolarHubArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManySolarHubArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromProductiveUseEquipmentRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipmentRecursive1']


class UserIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromProductiveUseEquipmentRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipmentRecursive2']


class UserIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromProductiveUseEquipmentRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipmentRecursive3']


class UserIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromProductiveUseEquipmentRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipmentRecursive4']


class UserIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class UserArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyUserArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive1']


class NoteIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive2']


class NoteIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive3']


class NoteIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive4']


class NoteIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class NoteArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyNoteArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive1']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive1']


class BEPPPBattery_NotesIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive2']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive2']


class BEPPPBattery_NotesIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive3']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive3']


class BEPPPBattery_NotesIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive4']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive4']


class BEPPPBattery_NotesIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class BEPPPBattery_NotesArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    rental: Union[bool, 'RentalArgsFromProductiveUseEquipmentRecursive1']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive1']


class Rental_NotesIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    rental: Union[bool, 'RentalArgsFromProductiveUseEquipmentRecursive2']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive2']


class Rental_NotesIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    rental: Union[bool, 'RentalArgsFromProductiveUseEquipmentRecursive3']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive3']


class Rental_NotesIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    rental: Union[bool, 'RentalArgsFromProductiveUseEquipmentRecursive4']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive4']


class Rental_NotesIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class Rental_NotesArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyRental_NotesArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive1']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive1']


class PUE_NotesIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive2']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive2']


class PUE_NotesIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive3']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive3']


class PUE_NotesIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive4']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive4']


class PUE_NotesIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class PUE_NotesArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyPUE_NotesArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue_rental: Union[bool, 'PUERentalArgsFromProductiveUseEquipmentRecursive1']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive1']


class PUERental_NotesIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue_rental: Union[bool, 'PUERentalArgsFromProductiveUseEquipmentRecursive2']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive2']


class PUERental_NotesIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue_rental: Union[bool, 'PUERentalArgsFromProductiveUseEquipmentRecursive3']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive3']


class PUERental_NotesIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue_rental: Union[bool, 'PUERentalArgsFromProductiveUseEquipmentRecursive4']
    note: Union[bool, 'NoteArgsFromProductiveUseEquipmentRecursive4']


class PUERental_NotesIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class PUERental_NotesArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyPUERental_NotesArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromProductiveUseEquipmentRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromProductiveUseEquipmentRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive1']


class BEPPPBatteryIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromProductiveUseEquipmentRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromProductiveUseEquipmentRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive2']


class BEPPPBatteryIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromProductiveUseEquipmentRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromProductiveUseEquipmentRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive3']


class BEPPPBatteryIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromProductiveUseEquipmentRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromProductiveUseEquipmentRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromProductiveUseEquipmentRecursive4']


class BEPPPBatteryIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class BEPPPBatteryArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyBEPPPBatteryArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive1']


class LiveDataIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive2']


class LiveDataIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive3']


class LiveDataIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive4']


class LiveDataIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class LiveDataArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyLiveDataArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive1']
    user: Union[bool, 'UserArgsFromProductiveUseEquipmentRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive1']


class RentalIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive2']
    user: Union[bool, 'UserArgsFromProductiveUseEquipmentRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive2']


class RentalIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive3']
    user: Union[bool, 'UserArgsFromProductiveUseEquipmentRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive3']


class RentalIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery: Union[bool, 'BEPPPBatteryArgsFromProductiveUseEquipmentRecursive4']
    user: Union[bool, 'UserArgsFromProductiveUseEquipmentRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromProductiveUseEquipmentRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive4']


class RentalIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class RentalArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyRentalArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipmentRecursive1']


class ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipmentRecursive2']


class ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipmentRecursive3']


class ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    hub: Union[bool, 'SolarHubArgsFromProductiveUseEquipmentRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromProductiveUseEquipmentRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromProductiveUseEquipmentRecursive4']


class ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class ProductiveUseEquipmentArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyProductiveUseEquipmentArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive1']
    user: Union[bool, 'UserArgsFromProductiveUseEquipmentRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive1']


class PUERentalIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive2']
    user: Union[bool, 'UserArgsFromProductiveUseEquipmentRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive2']


class PUERentalIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive3']
    user: Union[bool, 'UserArgsFromProductiveUseEquipmentRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive3']


class PUERentalIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromProductiveUseEquipmentRecursive4']
    user: Union[bool, 'UserArgsFromProductiveUseEquipmentRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromProductiveUseEquipmentRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive4']


class PUERentalIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class PUERentalArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyPUERentalArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromProductiveUseEquipment(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery_rental: Union[bool, 'RentalArgsFromProductiveUseEquipmentRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromProductiveUseEquipmentRecursive1']


class BatteryPUERentalIncludeFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery_rental: Union[bool, 'RentalArgsFromProductiveUseEquipmentRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromProductiveUseEquipmentRecursive2']


class BatteryPUERentalIncludeFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery_rental: Union[bool, 'RentalArgsFromProductiveUseEquipmentRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromProductiveUseEquipmentRecursive3']


class BatteryPUERentalIncludeFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""
    battery_rental: Union[bool, 'RentalArgsFromProductiveUseEquipmentRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromProductiveUseEquipmentRecursive4']


class BatteryPUERentalIncludeFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Relational arguments for ProductiveUseEquipment"""

    

class BatteryPUERentalArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    
    

class FindManyBatteryPUERentalArgsFromProductiveUseEquipment(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive1(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive2(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive3(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromProductiveUseEquipmentRecursive4(TypedDict, total=False):
    """Arguments for ProductiveUseEquipment"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyProductiveUseEquipmentArgs = FindManyProductiveUseEquipmentArgsFromProductiveUseEquipment
FindFirstProductiveUseEquipmentArgs = FindManyProductiveUseEquipmentArgsFromProductiveUseEquipment


    

class ProductiveUseEquipmentWhereInput(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    rental_cost: Union[None, _float, 'types.FloatFilter']
    status: Union[None, _str, 'types.StringFilter']
    rental_count: Union[_int, 'types.IntFilter']
    hub: 'SolarHubRelationFilter'
    notes: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['ProductiveUseEquipmentWhereInputRecursive1', List['ProductiveUseEquipmentWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['ProductiveUseEquipmentWhereInputRecursive1']
    OR: List['ProductiveUseEquipmentWhereInputRecursive1']
    NOT: List['ProductiveUseEquipmentWhereInputRecursive1']


class ProductiveUseEquipmentWhereInputRecursive1(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    rental_cost: Union[None, _float, 'types.FloatFilter']
    status: Union[None, _str, 'types.StringFilter']
    rental_count: Union[_int, 'types.IntFilter']
    hub: 'SolarHubRelationFilter'
    notes: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['ProductiveUseEquipmentWhereInputRecursive2', List['ProductiveUseEquipmentWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['ProductiveUseEquipmentWhereInputRecursive2']
    OR: List['ProductiveUseEquipmentWhereInputRecursive2']
    NOT: List['ProductiveUseEquipmentWhereInputRecursive2']


class ProductiveUseEquipmentWhereInputRecursive2(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    rental_cost: Union[None, _float, 'types.FloatFilter']
    status: Union[None, _str, 'types.StringFilter']
    rental_count: Union[_int, 'types.IntFilter']
    hub: 'SolarHubRelationFilter'
    notes: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['ProductiveUseEquipmentWhereInputRecursive3', List['ProductiveUseEquipmentWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['ProductiveUseEquipmentWhereInputRecursive3']
    OR: List['ProductiveUseEquipmentWhereInputRecursive3']
    NOT: List['ProductiveUseEquipmentWhereInputRecursive3']


class ProductiveUseEquipmentWhereInputRecursive3(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    rental_cost: Union[None, _float, 'types.FloatFilter']
    status: Union[None, _str, 'types.StringFilter']
    rental_count: Union[_int, 'types.IntFilter']
    hub: 'SolarHubRelationFilter'
    notes: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['ProductiveUseEquipmentWhereInputRecursive4', List['ProductiveUseEquipmentWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['ProductiveUseEquipmentWhereInputRecursive4']
    OR: List['ProductiveUseEquipmentWhereInputRecursive4']
    NOT: List['ProductiveUseEquipmentWhereInputRecursive4']


class ProductiveUseEquipmentWhereInputRecursive4(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntFilter']
    hub_id: Union[_int, 'types.BigIntFilter']
    name: Union[_str, 'types.StringFilter']
    description: Union[None, _str, 'types.StringFilter']
    rental_cost: Union[None, _float, 'types.FloatFilter']
    status: Union[None, _str, 'types.StringFilter']
    rental_count: Union[_int, 'types.IntFilter']
    hub: 'SolarHubRelationFilter'
    notes: 'PUE_NotesListRelationFilter'
    pue_rentals: 'PUERentalListRelationFilter'



# aggregate ProductiveUseEquipment types


    

class ProductiveUseEquipmentScalarWhereWithAggregatesInput(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    rental_cost: Union[_float, 'types.FloatWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    rental_count: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive1']
    OR: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive1']
    NOT: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive1']


class ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    rental_cost: Union[_float, 'types.FloatWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    rental_count: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive2']
    OR: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive2']
    NOT: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive2']


class ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    rental_cost: Union[_float, 'types.FloatWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    rental_count: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive3']
    OR: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive3']
    NOT: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive3']


class ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    rental_cost: Union[_float, 'types.FloatWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    rental_count: Union[_int, 'types.IntWithAggregatesFilter']

    AND: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive4']
    OR: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive4']
    NOT: List['ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive4']


class ProductiveUseEquipmentScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """ProductiveUseEquipment arguments for searching"""
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    hub_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    name: Union[_str, 'types.StringWithAggregatesFilter']
    description: Union[_str, 'types.StringWithAggregatesFilter']
    rental_cost: Union[_float, 'types.FloatWithAggregatesFilter']
    status: Union[_str, 'types.StringWithAggregatesFilter']
    rental_count: Union[_int, 'types.IntWithAggregatesFilter']



class ProductiveUseEquipmentGroupByOutput(TypedDict, total=False):
    pue_id: _int
    hub_id: _int
    name: _str
    description: _str
    rental_cost: _float
    status: _str
    rental_count: _int
    _sum: 'ProductiveUseEquipmentSumAggregateOutput'
    _avg: 'ProductiveUseEquipmentAvgAggregateOutput'
    _min: 'ProductiveUseEquipmentMinAggregateOutput'
    _max: 'ProductiveUseEquipmentMaxAggregateOutput'
    _count: 'ProductiveUseEquipmentCountAggregateOutput'


class ProductiveUseEquipmentAvgAggregateOutput(TypedDict, total=False):
    """ProductiveUseEquipment output for aggregating averages"""
    pue_id: float
    hub_id: float
    rental_cost: float
    rental_count: float


class ProductiveUseEquipmentSumAggregateOutput(TypedDict, total=False):
    """ProductiveUseEquipment output for aggregating sums"""
    pue_id: _int
    hub_id: _int
    rental_cost: _float
    rental_count: _int


class ProductiveUseEquipmentScalarAggregateOutput(TypedDict, total=False):
    """ProductiveUseEquipment output including scalar fields"""
    pue_id: _int
    hub_id: _int
    name: _str
    description: _str
    rental_cost: _float
    status: _str
    rental_count: _int


ProductiveUseEquipmentMinAggregateOutput = ProductiveUseEquipmentScalarAggregateOutput
ProductiveUseEquipmentMaxAggregateOutput = ProductiveUseEquipmentScalarAggregateOutput


class ProductiveUseEquipmentMaxAggregateInput(TypedDict, total=False):
    """ProductiveUseEquipment input for aggregating by max"""
    pue_id: bool
    hub_id: bool
    name: bool
    description: bool
    rental_cost: bool
    status: bool
    rental_count: bool


class ProductiveUseEquipmentMinAggregateInput(TypedDict, total=False):
    """ProductiveUseEquipment input for aggregating by min"""
    pue_id: bool
    hub_id: bool
    name: bool
    description: bool
    rental_cost: bool
    status: bool
    rental_count: bool


class ProductiveUseEquipmentNumberAggregateInput(TypedDict, total=False):
    """ProductiveUseEquipment input for aggregating numbers"""
    pue_id: bool
    hub_id: bool
    rental_cost: bool
    rental_count: bool


ProductiveUseEquipmentAvgAggregateInput = ProductiveUseEquipmentNumberAggregateInput
ProductiveUseEquipmentSumAggregateInput = ProductiveUseEquipmentNumberAggregateInput


ProductiveUseEquipmentCountAggregateInput = TypedDict(
    'ProductiveUseEquipmentCountAggregateInput',
    {
        'pue_id': bool,
        'hub_id': bool,
        'name': bool,
        'description': bool,
        'rental_cost': bool,
        'status': bool,
        'rental_count': bool,
        '_all': bool,
    },
    total=False,
)

ProductiveUseEquipmentCountAggregateOutput = TypedDict(
    'ProductiveUseEquipmentCountAggregateOutput',
    {
        'pue_id': int,
        'hub_id': int,
        'name': int,
        'description': int,
        'rental_cost': int,
        'status': int,
        'rental_count': int,
        '_all': int,
    },
    total=False,
)


ProductiveUseEquipmentKeys = Literal[
    'pue_id',
    'hub_id',
    'name',
    'description',
    'rental_cost',
    'status',
    'rental_count',
    'hub',
    'notes',
    'pue_rentals',
]
ProductiveUseEquipmentScalarFieldKeys = Literal[
    'pue_id',
    'hub_id',
    'name',
    'description',
    'rental_cost',
    'status',
    'rental_count',
]
ProductiveUseEquipmentScalarFieldKeysT = TypeVar('ProductiveUseEquipmentScalarFieldKeysT', bound=ProductiveUseEquipmentScalarFieldKeys)

ProductiveUseEquipmentRelationalFieldKeys = Literal[
        'hub',
        'notes',
        'pue_rentals',
    ]

# PUERental types

class PUERentalOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the PUERental create method"""
    pue_id: _int
    user_id: _int
    due_back: Optional[datetime.datetime]
    date_returned: Optional[datetime.datetime]
    pue: 'ProductiveUseEquipmentCreateNestedWithoutRelationsInput'
    user: 'UserCreateNestedWithoutRelationsInput'
    notes: 'PUERental_NotesCreateManyNestedWithoutRelationsInput'
    battery_rentals: 'BatteryPUERentalCreateManyNestedWithoutRelationsInput'


class PUERentalCreateInput(PUERentalOptionalCreateInput):
    """Required arguments to the PUERental create method"""
    pue_rental_id: _int
    timestamp_taken: datetime.datetime


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class PUERentalOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the PUERental create method, without relations"""
    pue_id: _int
    user_id: _int
    due_back: Optional[datetime.datetime]
    date_returned: Optional[datetime.datetime]


class PUERentalCreateWithoutRelationsInput(PUERentalOptionalCreateWithoutRelationsInput):
    """Required arguments to the PUERental create method, without relations"""
    pue_rental_id: _int
    timestamp_taken: datetime.datetime


class PUERentalCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'PUERentalCreateWithoutRelationsInput'
    connect: 'PUERentalWhereUniqueInput'


class PUERentalCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['PUERentalCreateWithoutRelationsInput', List['PUERentalCreateWithoutRelationsInput']]
    connect: Union['PUERentalWhereUniqueInput', List['PUERentalWhereUniqueInput']]


_PUERentalWhereUnique_pue_rental_id_Input = TypedDict(
    '_PUERentalWhereUnique_pue_rental_id_Input',
    {
        'pue_rental_id': '_int',
    },
    total=True
)

PUERentalWhereUniqueInput = _PUERentalWhereUnique_pue_rental_id_Input


class PUERentalUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    pue_rental_id: Union[AtomicBigIntInput, _int]
    timestamp_taken: datetime.datetime
    due_back: Optional[datetime.datetime]
    date_returned: Optional[datetime.datetime]
    pue: 'ProductiveUseEquipmentUpdateOneWithoutRelationsInput'
    user: 'UserUpdateOneWithoutRelationsInput'
    notes: 'PUERental_NotesUpdateManyWithoutRelationsInput'
    battery_rentals: 'BatteryPUERentalUpdateManyWithoutRelationsInput'


class PUERentalUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""
    pue_rental_id: Union[AtomicBigIntInput, _int]
    timestamp_taken: datetime.datetime
    due_back: Optional[datetime.datetime]
    date_returned: Optional[datetime.datetime]


class PUERentalUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['PUERentalCreateWithoutRelationsInput']
    connect: List['PUERentalWhereUniqueInput']
    set: List['PUERentalWhereUniqueInput']
    disconnect: List['PUERentalWhereUniqueInput']
    delete: List['PUERentalWhereUniqueInput']

    # TODO
    # update: List['PUERentalUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['PUERentalUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['PUERentalScalarWhereInput']
    # upsert: List['PUERentalUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['PUERentalCreateOrConnectWithoutRelationsInput']


class PUERentalUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'PUERentalCreateWithoutRelationsInput'
    connect: 'PUERentalWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'PUERentalUpdateInput'
    # upsert: 'PUERentalUpsertWithoutRelationsInput'
    # connectOrCreate: 'PUERentalCreateOrConnectWithoutRelationsInput'


class PUERentalUpsertInput(TypedDict):
    create: 'PUERentalCreateInput'
    update: 'PUERentalUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_PUERental_pue_rental_id_OrderByInput = TypedDict(
    '_PUERental_pue_rental_id_OrderByInput',
    {
        'pue_rental_id': 'SortOrder',
    },
    total=True
)

_PUERental_pue_id_OrderByInput = TypedDict(
    '_PUERental_pue_id_OrderByInput',
    {
        'pue_id': 'SortOrder',
    },
    total=True
)

_PUERental_user_id_OrderByInput = TypedDict(
    '_PUERental_user_id_OrderByInput',
    {
        'user_id': 'SortOrder',
    },
    total=True
)

_PUERental_timestamp_taken_OrderByInput = TypedDict(
    '_PUERental_timestamp_taken_OrderByInput',
    {
        'timestamp_taken': 'SortOrder',
    },
    total=True
)

_PUERental_due_back_OrderByInput = TypedDict(
    '_PUERental_due_back_OrderByInput',
    {
        'due_back': 'SortOrder',
    },
    total=True
)

_PUERental_date_returned_OrderByInput = TypedDict(
    '_PUERental_date_returned_OrderByInput',
    {
        'date_returned': 'SortOrder',
    },
    total=True
)

PUERentalOrderByInput = Union[
    '_PUERental_pue_rental_id_OrderByInput',
    '_PUERental_pue_id_OrderByInput',
    '_PUERental_user_id_OrderByInput',
    '_PUERental_timestamp_taken_OrderByInput',
    '_PUERental_due_back_OrderByInput',
    '_PUERental_date_returned_OrderByInput',
]



# recursive PUERental types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

PUERentalRelationFilter = TypedDict(
    'PUERentalRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class PUERentalListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class PUERentalInclude(TypedDict, total=False):
    """PUERental relational arguments"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERental']
    user: Union[bool, 'UserArgsFromPUERental']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERental']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERental']


    

class SolarHubIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    users: Union[bool, 'FindManyUserArgsFromPUERentalRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUERentalRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUERentalRecursive1']


class SolarHubIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    users: Union[bool, 'FindManyUserArgsFromPUERentalRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUERentalRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUERentalRecursive2']


class SolarHubIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    users: Union[bool, 'FindManyUserArgsFromPUERentalRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUERentalRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUERentalRecursive3']


class SolarHubIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    users: Union[bool, 'FindManyUserArgsFromPUERentalRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromPUERentalRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromPUERentalRecursive4']


class SolarHubIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class SolarHubArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManySolarHubArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUERentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERentalRecursive1']


class UserIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUERentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERentalRecursive2']


class UserIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUERentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERentalRecursive3']


class UserIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromPUERentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERentalRecursive4']


class UserIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class UserArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyUserArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUERentalRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUERentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUERentalRecursive1']


class NoteIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUERentalRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUERentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUERentalRecursive2']


class NoteIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUERentalRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUERentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUERentalRecursive3']


class NoteIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromPUERentalRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromPUERentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromPUERentalRecursive4']


class NoteIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class NoteArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyNoteArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive1']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive1']


class BEPPPBattery_NotesIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive2']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive2']


class BEPPPBattery_NotesIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive3']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive3']


class BEPPPBattery_NotesIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive4']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive4']


class BEPPPBattery_NotesIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class BEPPPBattery_NotesArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyBEPPPBattery_NotesArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    rental: Union[bool, 'RentalArgsFromPUERentalRecursive1']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive1']


class Rental_NotesIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    rental: Union[bool, 'RentalArgsFromPUERentalRecursive2']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive2']


class Rental_NotesIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    rental: Union[bool, 'RentalArgsFromPUERentalRecursive3']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive3']


class Rental_NotesIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    rental: Union[bool, 'RentalArgsFromPUERentalRecursive4']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive4']


class Rental_NotesIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class Rental_NotesArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyRental_NotesArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERentalRecursive1']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive1']


class PUE_NotesIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERentalRecursive2']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive2']


class PUE_NotesIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERentalRecursive3']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive3']


class PUE_NotesIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERentalRecursive4']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive4']


class PUE_NotesIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class PUE_NotesArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyPUE_NotesArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERentalRecursive1']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive1']


class PUERental_NotesIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERentalRecursive2']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive2']


class PUERental_NotesIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERentalRecursive3']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive3']


class PUERental_NotesIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue_rental: Union[bool, 'PUERentalArgsFromPUERentalRecursive4']
    note: Union[bool, 'NoteArgsFromPUERentalRecursive4']


class PUERental_NotesIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class PUERental_NotesArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyPUERental_NotesArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUERentalRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromPUERentalRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive1']


class BEPPPBatteryIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUERentalRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromPUERentalRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive2']


class BEPPPBatteryIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUERentalRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromPUERentalRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive3']


class BEPPPBatteryIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromPUERentalRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromPUERentalRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromPUERentalRecursive4']


class BEPPPBatteryIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class BEPPPBatteryArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyBEPPPBatteryArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive1']


class LiveDataIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive2']


class LiveDataIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive3']


class LiveDataIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive4']


class LiveDataIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class LiveDataArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyLiveDataArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive1']
    user: Union[bool, 'UserArgsFromPUERentalRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUERentalRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERentalRecursive1']


class RentalIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive2']
    user: Union[bool, 'UserArgsFromPUERentalRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUERentalRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERentalRecursive2']


class RentalIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive3']
    user: Union[bool, 'UserArgsFromPUERentalRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUERentalRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERentalRecursive3']


class RentalIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromPUERentalRecursive4']
    user: Union[bool, 'UserArgsFromPUERentalRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromPUERentalRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERentalRecursive4']


class RentalIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class RentalArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyRentalArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUERentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERentalRecursive1']


class ProductiveUseEquipmentIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUERentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERentalRecursive2']


class ProductiveUseEquipmentIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUERentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERentalRecursive3']


class ProductiveUseEquipmentIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    hub: Union[bool, 'SolarHubArgsFromPUERentalRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromPUERentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromPUERentalRecursive4']


class ProductiveUseEquipmentIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class ProductiveUseEquipmentArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyProductiveUseEquipmentArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERentalRecursive1']
    user: Union[bool, 'UserArgsFromPUERentalRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERentalRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERentalRecursive1']


class PUERentalIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERentalRecursive2']
    user: Union[bool, 'UserArgsFromPUERentalRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERentalRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERentalRecursive2']


class PUERentalIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERentalRecursive3']
    user: Union[bool, 'UserArgsFromPUERentalRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERentalRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERentalRecursive3']


class PUERentalIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromPUERentalRecursive4']
    user: Union[bool, 'UserArgsFromPUERentalRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromPUERentalRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromPUERentalRecursive4']


class PUERentalIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class PUERentalArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyPUERentalArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromPUERental(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery_rental: Union[bool, 'RentalArgsFromPUERentalRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromPUERentalRecursive1']


class BatteryPUERentalIncludeFromPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery_rental: Union[bool, 'RentalArgsFromPUERentalRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromPUERentalRecursive2']


class BatteryPUERentalIncludeFromPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery_rental: Union[bool, 'RentalArgsFromPUERentalRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromPUERentalRecursive3']


class BatteryPUERentalIncludeFromPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for PUERental"""
    battery_rental: Union[bool, 'RentalArgsFromPUERentalRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromPUERentalRecursive4']


class BatteryPUERentalIncludeFromPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for PUERental"""

    

class BatteryPUERentalArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    
    

class FindManyBatteryPUERentalArgsFromPUERental(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromPUERentalRecursive1(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromPUERentalRecursive2(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromPUERentalRecursive3(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromPUERentalRecursive4(TypedDict, total=False):
    """Arguments for PUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyPUERentalArgs = FindManyPUERentalArgsFromPUERental
FindFirstPUERentalArgs = FindManyPUERentalArgsFromPUERental


    

class PUERentalWhereInput(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    pue_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    user: 'UserRelationFilter'
    notes: 'PUERental_NotesListRelationFilter'
    battery_rentals: 'BatteryPUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['PUERentalWhereInputRecursive1', List['PUERentalWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['PUERentalWhereInputRecursive1']
    OR: List['PUERentalWhereInputRecursive1']
    NOT: List['PUERentalWhereInputRecursive1']


class PUERentalWhereInputRecursive1(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    pue_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    user: 'UserRelationFilter'
    notes: 'PUERental_NotesListRelationFilter'
    battery_rentals: 'BatteryPUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['PUERentalWhereInputRecursive2', List['PUERentalWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['PUERentalWhereInputRecursive2']
    OR: List['PUERentalWhereInputRecursive2']
    NOT: List['PUERentalWhereInputRecursive2']


class PUERentalWhereInputRecursive2(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    pue_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    user: 'UserRelationFilter'
    notes: 'PUERental_NotesListRelationFilter'
    battery_rentals: 'BatteryPUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['PUERentalWhereInputRecursive3', List['PUERentalWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['PUERentalWhereInputRecursive3']
    OR: List['PUERentalWhereInputRecursive3']
    NOT: List['PUERentalWhereInputRecursive3']


class PUERentalWhereInputRecursive3(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    pue_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    user: 'UserRelationFilter'
    notes: 'PUERental_NotesListRelationFilter'
    battery_rentals: 'BatteryPUERentalListRelationFilter'

    # should be noted that AND and NOT should be Union['PUERentalWhereInputRecursive4', List['PUERentalWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['PUERentalWhereInputRecursive4']
    OR: List['PUERentalWhereInputRecursive4']
    NOT: List['PUERentalWhereInputRecursive4']


class PUERentalWhereInputRecursive4(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    pue_id: Union[_int, 'types.BigIntFilter']
    user_id: Union[_int, 'types.BigIntFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeFilter']
    due_back: Union[None, datetime.datetime, 'types.DateTimeFilter']
    date_returned: Union[None, datetime.datetime, 'types.DateTimeFilter']
    pue: 'ProductiveUseEquipmentRelationFilter'
    user: 'UserRelationFilter'
    notes: 'PUERental_NotesListRelationFilter'
    battery_rentals: 'BatteryPUERentalListRelationFilter'



# aggregate PUERental types


    

class PUERentalScalarWhereWithAggregatesInput(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['PUERentalScalarWhereWithAggregatesInputRecursive1']
    OR: List['PUERentalScalarWhereWithAggregatesInputRecursive1']
    NOT: List['PUERentalScalarWhereWithAggregatesInputRecursive1']


class PUERentalScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['PUERentalScalarWhereWithAggregatesInputRecursive2']
    OR: List['PUERentalScalarWhereWithAggregatesInputRecursive2']
    NOT: List['PUERentalScalarWhereWithAggregatesInputRecursive2']


class PUERentalScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['PUERentalScalarWhereWithAggregatesInputRecursive3']
    OR: List['PUERentalScalarWhereWithAggregatesInputRecursive3']
    NOT: List['PUERentalScalarWhereWithAggregatesInputRecursive3']


class PUERentalScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']

    AND: List['PUERentalScalarWhereWithAggregatesInputRecursive4']
    OR: List['PUERentalScalarWhereWithAggregatesInputRecursive4']
    NOT: List['PUERentalScalarWhereWithAggregatesInputRecursive4']


class PUERentalScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """PUERental arguments for searching"""
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    user_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    timestamp_taken: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    due_back: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']
    date_returned: Union[datetime.datetime, 'types.DateTimeWithAggregatesFilter']



class PUERentalGroupByOutput(TypedDict, total=False):
    pue_rental_id: _int
    pue_id: _int
    user_id: _int
    timestamp_taken: datetime.datetime
    due_back: datetime.datetime
    date_returned: datetime.datetime
    _sum: 'PUERentalSumAggregateOutput'
    _avg: 'PUERentalAvgAggregateOutput'
    _min: 'PUERentalMinAggregateOutput'
    _max: 'PUERentalMaxAggregateOutput'
    _count: 'PUERentalCountAggregateOutput'


class PUERentalAvgAggregateOutput(TypedDict, total=False):
    """PUERental output for aggregating averages"""
    pue_rental_id: float
    pue_id: float
    user_id: float


class PUERentalSumAggregateOutput(TypedDict, total=False):
    """PUERental output for aggregating sums"""
    pue_rental_id: _int
    pue_id: _int
    user_id: _int


class PUERentalScalarAggregateOutput(TypedDict, total=False):
    """PUERental output including scalar fields"""
    pue_rental_id: _int
    pue_id: _int
    user_id: _int
    timestamp_taken: datetime.datetime
    due_back: datetime.datetime
    date_returned: datetime.datetime


PUERentalMinAggregateOutput = PUERentalScalarAggregateOutput
PUERentalMaxAggregateOutput = PUERentalScalarAggregateOutput


class PUERentalMaxAggregateInput(TypedDict, total=False):
    """PUERental input for aggregating by max"""
    pue_rental_id: bool
    pue_id: bool
    user_id: bool
    timestamp_taken: bool
    due_back: bool
    date_returned: bool


class PUERentalMinAggregateInput(TypedDict, total=False):
    """PUERental input for aggregating by min"""
    pue_rental_id: bool
    pue_id: bool
    user_id: bool
    timestamp_taken: bool
    due_back: bool
    date_returned: bool


class PUERentalNumberAggregateInput(TypedDict, total=False):
    """PUERental input for aggregating numbers"""
    pue_rental_id: bool
    pue_id: bool
    user_id: bool


PUERentalAvgAggregateInput = PUERentalNumberAggregateInput
PUERentalSumAggregateInput = PUERentalNumberAggregateInput


PUERentalCountAggregateInput = TypedDict(
    'PUERentalCountAggregateInput',
    {
        'pue_rental_id': bool,
        'pue_id': bool,
        'user_id': bool,
        'timestamp_taken': bool,
        'due_back': bool,
        'date_returned': bool,
        '_all': bool,
    },
    total=False,
)

PUERentalCountAggregateOutput = TypedDict(
    'PUERentalCountAggregateOutput',
    {
        'pue_rental_id': int,
        'pue_id': int,
        'user_id': int,
        'timestamp_taken': int,
        'due_back': int,
        'date_returned': int,
        '_all': int,
    },
    total=False,
)


PUERentalKeys = Literal[
    'pue_rental_id',
    'pue_id',
    'user_id',
    'timestamp_taken',
    'due_back',
    'date_returned',
    'pue',
    'user',
    'notes',
    'battery_rentals',
]
PUERentalScalarFieldKeys = Literal[
    'pue_rental_id',
    'pue_id',
    'user_id',
    'timestamp_taken',
    'due_back',
    'date_returned',
]
PUERentalScalarFieldKeysT = TypeVar('PUERentalScalarFieldKeysT', bound=PUERentalScalarFieldKeys)

PUERentalRelationalFieldKeys = Literal[
        'pue',
        'user',
        'notes',
        'battery_rentals',
    ]

# BatteryPUERental types

class BatteryPUERentalOptionalCreateInput(TypedDict, total=False):
    """Optional arguments to the BatteryPUERental create method"""
    battery_rental_id: _int
    pue_rental_id: _int
    battery_rental: 'RentalCreateNestedWithoutRelationsInput'
    pue_rental: 'PUERentalCreateNestedWithoutRelationsInput'


class BatteryPUERentalCreateInput(BatteryPUERentalOptionalCreateInput):
    """Required arguments to the BatteryPUERental create method"""


# TODO: remove this in favour of without explicit relations
# e.g. PostCreateWithoutAuthorInput

class BatteryPUERentalOptionalCreateWithoutRelationsInput(TypedDict, total=False):
    """Optional arguments to the BatteryPUERental create method, without relations"""
    battery_rental_id: _int
    pue_rental_id: _int


class BatteryPUERentalCreateWithoutRelationsInput(BatteryPUERentalOptionalCreateWithoutRelationsInput):
    """Required arguments to the BatteryPUERental create method, without relations"""


class BatteryPUERentalCreateNestedWithoutRelationsInput(TypedDict, total=False):
    create: 'BatteryPUERentalCreateWithoutRelationsInput'
    connect: 'BatteryPUERentalWhereUniqueInput'


class BatteryPUERentalCreateManyNestedWithoutRelationsInput(TypedDict, total=False):
    create: Union['BatteryPUERentalCreateWithoutRelationsInput', List['BatteryPUERentalCreateWithoutRelationsInput']]
    connect: Union['BatteryPUERentalWhereUniqueInput', List['BatteryPUERentalWhereUniqueInput']]


_BatteryPUERentalCompoundPrimaryKeyInner = TypedDict(
    '_BatteryPUERentalCompoundPrimaryKeyInner',
    {
        'battery_rental_id': '_int',
        'pue_rental_id': '_int',
    },
    total=True
)

_BatteryPUERentalCompoundPrimaryKey = TypedDict(
    '_BatteryPUERentalCompoundPrimaryKey',
    {
        'battery_rental_id_pue_rental_id': '_BatteryPUERentalCompoundPrimaryKeyInner',
    },
    total=True
)

BatteryPUERentalWhereUniqueInput = _BatteryPUERentalCompoundPrimaryKey


class BatteryPUERentalUpdateInput(TypedDict, total=False):
    """Optional arguments for updating a record"""
    battery_rental: 'RentalUpdateOneWithoutRelationsInput'
    pue_rental: 'PUERentalUpdateOneWithoutRelationsInput'


class BatteryPUERentalUpdateManyMutationInput(TypedDict, total=False):
    """Arguments for updating many records"""


class BatteryPUERentalUpdateManyWithoutRelationsInput(TypedDict, total=False):
    create: List['BatteryPUERentalCreateWithoutRelationsInput']
    connect: List['BatteryPUERentalWhereUniqueInput']
    set: List['BatteryPUERentalWhereUniqueInput']
    disconnect: List['BatteryPUERentalWhereUniqueInput']
    delete: List['BatteryPUERentalWhereUniqueInput']

    # TODO
    # update: List['BatteryPUERentalUpdateWithWhereUniqueWithoutRelationsInput']
    # updateMany: List['BatteryPUERentalUpdateManyWithWhereUniqueWithoutRelationsInput']
    # deleteMany: List['BatteryPUERentalScalarWhereInput']
    # upsert: List['BatteryPUERentalUpserteWithWhereUniqueWithoutRelationsInput']
    # connectOrCreate: List['BatteryPUERentalCreateOrConnectWithoutRelationsInput']


class BatteryPUERentalUpdateOneWithoutRelationsInput(TypedDict, total=False):
    create: 'BatteryPUERentalCreateWithoutRelationsInput'
    connect: 'BatteryPUERentalWhereUniqueInput'
    disconnect: bool
    delete: bool

    # TODO
    # update: 'BatteryPUERentalUpdateInput'
    # upsert: 'BatteryPUERentalUpsertWithoutRelationsInput'
    # connectOrCreate: 'BatteryPUERentalCreateOrConnectWithoutRelationsInput'


class BatteryPUERentalUpsertInput(TypedDict):
    create: 'BatteryPUERentalCreateInput'
    update: 'BatteryPUERentalUpdateInput'  # pyright: ignore[reportIncompatibleMethodOverride]


_BatteryPUERental_battery_rental_id_OrderByInput = TypedDict(
    '_BatteryPUERental_battery_rental_id_OrderByInput',
    {
        'battery_rental_id': 'SortOrder',
    },
    total=True
)

_BatteryPUERental_pue_rental_id_OrderByInput = TypedDict(
    '_BatteryPUERental_pue_rental_id_OrderByInput',
    {
        'pue_rental_id': 'SortOrder',
    },
    total=True
)

BatteryPUERentalOrderByInput = Union[
    '_BatteryPUERental_battery_rental_id_OrderByInput',
    '_BatteryPUERental_pue_rental_id_OrderByInput',
]



# recursive BatteryPUERental types
# TODO: cleanup these types


# Dict[str, Any] is a mypy limitation
# see https://github.com/RobertCraigie/prisma-client-py/issues/45
# switch to pyright for improved types, see https://prisma-client-py.readthedocs.io/en/stable/reference/limitations/

BatteryPUERentalRelationFilter = TypedDict(
    'BatteryPUERentalRelationFilter',
    {
        'is': 'Dict[str, Any]',
        'is_not': 'Dict[str, Any]',
    },
    total=False,
)


class BatteryPUERentalListRelationFilter(TypedDict, total=False):
    some: 'Dict[str, Any]'
    none: 'Dict[str, Any]'
    every: 'Dict[str, Any]'


class BatteryPUERentalInclude(TypedDict, total=False):
    """BatteryPUERental relational arguments"""
    battery_rental: Union[bool, 'RentalArgsFromBatteryPUERental']
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERental']


    

class SolarHubIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    users: Union[bool, 'FindManyUserArgsFromBatteryPUERentalRecursive1']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBatteryPUERentalRecursive1']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBatteryPUERentalRecursive1']


class SolarHubIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    users: Union[bool, 'FindManyUserArgsFromBatteryPUERentalRecursive2']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBatteryPUERentalRecursive2']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBatteryPUERentalRecursive2']


class SolarHubIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    users: Union[bool, 'FindManyUserArgsFromBatteryPUERentalRecursive3']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBatteryPUERentalRecursive3']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBatteryPUERentalRecursive3']


class SolarHubIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    users: Union[bool, 'FindManyUserArgsFromBatteryPUERentalRecursive4']
    batteries: Union[bool, 'FindManyBEPPPBatteryArgsFromBatteryPUERentalRecursive4']
    pue_items: Union[bool, 'FindManyProductiveUseEquipmentArgsFromBatteryPUERentalRecursive4']


class SolarHubIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class SolarHubArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class SolarHubArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class SolarHubArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class SolarHubArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class SolarHubArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManySolarHubArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive1'


class FindManySolarHubArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive2'


class FindManySolarHubArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive3'


class FindManySolarHubArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    include: 'SolarHubIncludeFromSolarHubRecursive4'


class FindManySolarHubArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['SolarHubOrderByInput', List['SolarHubOrderByInput']]
    where: 'SolarHubWhereInput'
    cursor: 'SolarHubWhereUniqueInput'
    distinct: List['SolarHubScalarFieldKeys']
    
    

class UserIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive1']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBatteryPUERentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBatteryPUERentalRecursive1']


class UserIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive2']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBatteryPUERentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBatteryPUERentalRecursive2']


class UserIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive3']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBatteryPUERentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBatteryPUERentalRecursive3']


class UserIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive4']
    battery_rentals: Union[bool, 'FindManyRentalArgsFromBatteryPUERentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBatteryPUERentalRecursive4']


class UserIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class UserArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'UserIncludeFromUserRecursive1'


class UserArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'UserIncludeFromUserRecursive2'


class UserArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'UserIncludeFromUserRecursive3'


class UserArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'UserIncludeFromUserRecursive4'


class UserArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyUserArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive1'


class FindManyUserArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive2'


class FindManyUserArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive3'


class FindManyUserArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    include: 'UserIncludeFromUserRecursive4'


class FindManyUserArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['UserOrderByInput', List['UserOrderByInput']]
    where: 'UserWhereInput'
    cursor: 'UserWhereUniqueInput'
    distinct: List['UserScalarFieldKeys']
    
    

class NoteIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive1']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBatteryPUERentalRecursive1']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBatteryPUERentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive1']


class NoteIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive2']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBatteryPUERentalRecursive2']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBatteryPUERentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive2']


class NoteIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive3']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBatteryPUERentalRecursive3']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBatteryPUERentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive3']


class NoteIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    batteries: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive4']
    rentals: Union[bool, 'FindManyRental_NotesArgsFromBatteryPUERentalRecursive4']
    pue_items: Union[bool, 'FindManyPUE_NotesArgsFromBatteryPUERentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive4']


class NoteIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class NoteArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'NoteIncludeFromNoteRecursive1'


class NoteArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'NoteIncludeFromNoteRecursive2'


class NoteArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'NoteIncludeFromNoteRecursive3'


class NoteArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'NoteIncludeFromNoteRecursive4'


class NoteArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyNoteArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive1'


class FindManyNoteArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive2'


class FindManyNoteArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive3'


class FindManyNoteArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    include: 'NoteIncludeFromNoteRecursive4'


class FindManyNoteArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['NoteOrderByInput', List['NoteOrderByInput']]
    where: 'NoteWhereInput'
    cursor: 'NoteWhereUniqueInput'
    distinct: List['NoteScalarFieldKeys']
    
    

class BEPPPBattery_NotesIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive1']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive1']


class BEPPPBattery_NotesIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive2']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive2']


class BEPPPBattery_NotesIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive3']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive3']


class BEPPPBattery_NotesIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive4']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive4']


class BEPPPBattery_NotesIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class BEPPPBattery_NotesArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class BEPPPBattery_NotesArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class BEPPPBattery_NotesArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class BEPPPBattery_NotesArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class BEPPPBattery_NotesArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyBEPPPBattery_NotesArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive1'


class FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive2'


class FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive3'


class FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    include: 'BEPPPBattery_NotesIncludeFromBEPPPBattery_NotesRecursive4'


class FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBattery_NotesOrderByInput', List['BEPPPBattery_NotesOrderByInput']]
    where: 'BEPPPBattery_NotesWhereInput'
    cursor: 'BEPPPBattery_NotesWhereUniqueInput'
    distinct: List['BEPPPBattery_NotesScalarFieldKeys']
    
    

class Rental_NotesIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    rental: Union[bool, 'RentalArgsFromBatteryPUERentalRecursive1']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive1']


class Rental_NotesIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    rental: Union[bool, 'RentalArgsFromBatteryPUERentalRecursive2']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive2']


class Rental_NotesIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    rental: Union[bool, 'RentalArgsFromBatteryPUERentalRecursive3']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive3']


class Rental_NotesIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    rental: Union[bool, 'RentalArgsFromBatteryPUERentalRecursive4']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive4']


class Rental_NotesIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class Rental_NotesArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class Rental_NotesArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class Rental_NotesArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class Rental_NotesArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class Rental_NotesArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyRental_NotesArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive1'


class FindManyRental_NotesArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive2'


class FindManyRental_NotesArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive3'


class FindManyRental_NotesArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    include: 'Rental_NotesIncludeFromRental_NotesRecursive4'


class FindManyRental_NotesArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['Rental_NotesOrderByInput', List['Rental_NotesOrderByInput']]
    where: 'Rental_NotesWhereInput'
    cursor: 'Rental_NotesWhereUniqueInput'
    distinct: List['Rental_NotesScalarFieldKeys']
    
    

class PUE_NotesIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive1']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive1']


class PUE_NotesIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive2']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive2']


class PUE_NotesIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive3']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive3']


class PUE_NotesIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive4']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive4']


class PUE_NotesIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class PUE_NotesArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class PUE_NotesArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class PUE_NotesArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class PUE_NotesArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class PUE_NotesArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyPUE_NotesArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive1'


class FindManyPUE_NotesArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive2'


class FindManyPUE_NotesArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive3'


class FindManyPUE_NotesArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    include: 'PUE_NotesIncludeFromPUE_NotesRecursive4'


class FindManyPUE_NotesArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUE_NotesOrderByInput', List['PUE_NotesOrderByInput']]
    where: 'PUE_NotesWhereInput'
    cursor: 'PUE_NotesWhereUniqueInput'
    distinct: List['PUE_NotesScalarFieldKeys']
    
    

class PUERental_NotesIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERentalRecursive1']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive1']


class PUERental_NotesIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERentalRecursive2']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive2']


class PUERental_NotesIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERentalRecursive3']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive3']


class PUERental_NotesIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERentalRecursive4']
    note: Union[bool, 'NoteArgsFromBatteryPUERentalRecursive4']


class PUERental_NotesIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class PUERental_NotesArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class PUERental_NotesArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class PUERental_NotesArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class PUERental_NotesArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class PUERental_NotesArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyPUERental_NotesArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive1'


class FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive2'


class FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive3'


class FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    include: 'PUERental_NotesIncludeFromPUERental_NotesRecursive4'


class FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERental_NotesOrderByInput', List['PUERental_NotesOrderByInput']]
    where: 'PUERental_NotesWhereInput'
    cursor: 'PUERental_NotesWhereUniqueInput'
    distinct: List['PUERental_NotesScalarFieldKeys']
    
    

class BEPPPBatteryIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive1']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBatteryPUERentalRecursive1']
    rentals: Union[bool, 'FindManyRentalArgsFromBatteryPUERentalRecursive1']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive1']


class BEPPPBatteryIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive2']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBatteryPUERentalRecursive2']
    rentals: Union[bool, 'FindManyRentalArgsFromBatteryPUERentalRecursive2']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive2']


class BEPPPBatteryIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive3']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBatteryPUERentalRecursive3']
    rentals: Union[bool, 'FindManyRentalArgsFromBatteryPUERentalRecursive3']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive3']


class BEPPPBatteryIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive4']
    live_data: Union[bool, 'FindManyLiveDataArgsFromBatteryPUERentalRecursive4']
    rentals: Union[bool, 'FindManyRentalArgsFromBatteryPUERentalRecursive4']
    notes: Union[bool, 'FindManyBEPPPBattery_NotesArgsFromBatteryPUERentalRecursive4']


class BEPPPBatteryIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class BEPPPBatteryArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class BEPPPBatteryArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class BEPPPBatteryArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class BEPPPBatteryArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class BEPPPBatteryArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyBEPPPBatteryArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive1'


class FindManyBEPPPBatteryArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive2'


class FindManyBEPPPBatteryArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive3'


class FindManyBEPPPBatteryArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    include: 'BEPPPBatteryIncludeFromBEPPPBatteryRecursive4'


class FindManyBEPPPBatteryArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BEPPPBatteryOrderByInput', List['BEPPPBatteryOrderByInput']]
    where: 'BEPPPBatteryWhereInput'
    cursor: 'BEPPPBatteryWhereUniqueInput'
    distinct: List['BEPPPBatteryScalarFieldKeys']
    
    

class LiveDataIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive1']


class LiveDataIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive2']


class LiveDataIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive3']


class LiveDataIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive4']


class LiveDataIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class LiveDataArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class LiveDataArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class LiveDataArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class LiveDataArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class LiveDataArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyLiveDataArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive1'


class FindManyLiveDataArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive2'


class FindManyLiveDataArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive3'


class FindManyLiveDataArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    include: 'LiveDataIncludeFromLiveDataRecursive4'


class FindManyLiveDataArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['LiveDataOrderByInput', List['LiveDataOrderByInput']]
    where: 'LiveDataWhereInput'
    cursor: 'LiveDataWhereUniqueInput'
    distinct: List['LiveDataScalarFieldKeys']
    
    

class RentalIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive1']
    user: Union[bool, 'UserArgsFromBatteryPUERentalRecursive1']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBatteryPUERentalRecursive1']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive1']


class RentalIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive2']
    user: Union[bool, 'UserArgsFromBatteryPUERentalRecursive2']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBatteryPUERentalRecursive2']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive2']


class RentalIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive3']
    user: Union[bool, 'UserArgsFromBatteryPUERentalRecursive3']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBatteryPUERentalRecursive3']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive3']


class RentalIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery: Union[bool, 'BEPPPBatteryArgsFromBatteryPUERentalRecursive4']
    user: Union[bool, 'UserArgsFromBatteryPUERentalRecursive4']
    notes: Union[bool, 'FindManyRental_NotesArgsFromBatteryPUERentalRecursive4']
    pue_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive4']


class RentalIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class RentalArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'RentalIncludeFromRentalRecursive1'


class RentalArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'RentalIncludeFromRentalRecursive2'


class RentalArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'RentalIncludeFromRentalRecursive3'


class RentalArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'RentalIncludeFromRentalRecursive4'


class RentalArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyRentalArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive1'


class FindManyRentalArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive2'


class FindManyRentalArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive3'


class FindManyRentalArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    include: 'RentalIncludeFromRentalRecursive4'


class FindManyRentalArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['RentalOrderByInput', List['RentalOrderByInput']]
    where: 'RentalWhereInput'
    cursor: 'RentalWhereUniqueInput'
    distinct: List['RentalScalarFieldKeys']
    
    

class ProductiveUseEquipmentIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive1']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBatteryPUERentalRecursive1']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBatteryPUERentalRecursive1']


class ProductiveUseEquipmentIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive2']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBatteryPUERentalRecursive2']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBatteryPUERentalRecursive2']


class ProductiveUseEquipmentIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive3']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBatteryPUERentalRecursive3']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBatteryPUERentalRecursive3']


class ProductiveUseEquipmentIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    hub: Union[bool, 'SolarHubArgsFromBatteryPUERentalRecursive4']
    notes: Union[bool, 'FindManyPUE_NotesArgsFromBatteryPUERentalRecursive4']
    pue_rentals: Union[bool, 'FindManyPUERentalArgsFromBatteryPUERentalRecursive4']


class ProductiveUseEquipmentIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class ProductiveUseEquipmentArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyProductiveUseEquipmentArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive1'


class FindManyProductiveUseEquipmentArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive2'


class FindManyProductiveUseEquipmentArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive3'


class FindManyProductiveUseEquipmentArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    include: 'ProductiveUseEquipmentIncludeFromProductiveUseEquipmentRecursive4'


class FindManyProductiveUseEquipmentArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['ProductiveUseEquipmentOrderByInput', List['ProductiveUseEquipmentOrderByInput']]
    where: 'ProductiveUseEquipmentWhereInput'
    cursor: 'ProductiveUseEquipmentWhereUniqueInput'
    distinct: List['ProductiveUseEquipmentScalarFieldKeys']
    
    

class PUERentalIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive1']
    user: Union[bool, 'UserArgsFromBatteryPUERentalRecursive1']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive1']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive1']


class PUERentalIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive2']
    user: Union[bool, 'UserArgsFromBatteryPUERentalRecursive2']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive2']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive2']


class PUERentalIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive3']
    user: Union[bool, 'UserArgsFromBatteryPUERentalRecursive3']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive3']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive3']


class PUERentalIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    pue: Union[bool, 'ProductiveUseEquipmentArgsFromBatteryPUERentalRecursive4']
    user: Union[bool, 'UserArgsFromBatteryPUERentalRecursive4']
    notes: Union[bool, 'FindManyPUERental_NotesArgsFromBatteryPUERentalRecursive4']
    battery_rentals: Union[bool, 'FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive4']


class PUERentalIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class PUERentalArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class PUERentalArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class PUERentalArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class PUERentalArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class PUERentalArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyPUERentalArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive1'


class FindManyPUERentalArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive2'


class FindManyPUERentalArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive3'


class FindManyPUERentalArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    include: 'PUERentalIncludeFromPUERentalRecursive4'


class FindManyPUERentalArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['PUERentalOrderByInput', List['PUERentalOrderByInput']]
    where: 'PUERentalWhereInput'
    cursor: 'PUERentalWhereUniqueInput'
    distinct: List['PUERentalScalarFieldKeys']
    
    

class BatteryPUERentalIncludeFromBatteryPUERental(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery_rental: Union[bool, 'RentalArgsFromBatteryPUERentalRecursive1']
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERentalRecursive1']


class BatteryPUERentalIncludeFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery_rental: Union[bool, 'RentalArgsFromBatteryPUERentalRecursive2']
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERentalRecursive2']


class BatteryPUERentalIncludeFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery_rental: Union[bool, 'RentalArgsFromBatteryPUERentalRecursive3']
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERentalRecursive3']


class BatteryPUERentalIncludeFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""
    battery_rental: Union[bool, 'RentalArgsFromBatteryPUERentalRecursive4']
    pue_rental: Union[bool, 'PUERentalArgsFromBatteryPUERentalRecursive4']


class BatteryPUERentalIncludeFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Relational arguments for BatteryPUERental"""

    

class BatteryPUERentalArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class BatteryPUERentalArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class BatteryPUERentalArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class BatteryPUERentalArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class BatteryPUERentalArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    
    

class FindManyBatteryPUERentalArgsFromBatteryPUERental(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive1'


class FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive1(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive2'


class FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive2(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive3'


class FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive3(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    include: 'BatteryPUERentalIncludeFromBatteryPUERentalRecursive4'


class FindManyBatteryPUERentalArgsFromBatteryPUERentalRecursive4(TypedDict, total=False):
    """Arguments for BatteryPUERental"""
    take: int
    skip: int
    order_by: Union['BatteryPUERentalOrderByInput', List['BatteryPUERentalOrderByInput']]
    where: 'BatteryPUERentalWhereInput'
    cursor: 'BatteryPUERentalWhereUniqueInput'
    distinct: List['BatteryPUERentalScalarFieldKeys']
    


FindManyBatteryPUERentalArgs = FindManyBatteryPUERentalArgsFromBatteryPUERental
FindFirstBatteryPUERentalArgs = FindManyBatteryPUERentalArgsFromBatteryPUERental


    

class BatteryPUERentalWhereInput(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntFilter']
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    battery_rental: 'RentalRelationFilter'
    pue_rental: 'PUERentalRelationFilter'

    # should be noted that AND and NOT should be Union['BatteryPUERentalWhereInputRecursive1', List['BatteryPUERentalWhereInputRecursive1']]
    # but this causes mypy to hang :/
    AND: List['BatteryPUERentalWhereInputRecursive1']
    OR: List['BatteryPUERentalWhereInputRecursive1']
    NOT: List['BatteryPUERentalWhereInputRecursive1']


class BatteryPUERentalWhereInputRecursive1(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntFilter']
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    battery_rental: 'RentalRelationFilter'
    pue_rental: 'PUERentalRelationFilter'

    # should be noted that AND and NOT should be Union['BatteryPUERentalWhereInputRecursive2', List['BatteryPUERentalWhereInputRecursive2']]
    # but this causes mypy to hang :/
    AND: List['BatteryPUERentalWhereInputRecursive2']
    OR: List['BatteryPUERentalWhereInputRecursive2']
    NOT: List['BatteryPUERentalWhereInputRecursive2']


class BatteryPUERentalWhereInputRecursive2(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntFilter']
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    battery_rental: 'RentalRelationFilter'
    pue_rental: 'PUERentalRelationFilter'

    # should be noted that AND and NOT should be Union['BatteryPUERentalWhereInputRecursive3', List['BatteryPUERentalWhereInputRecursive3']]
    # but this causes mypy to hang :/
    AND: List['BatteryPUERentalWhereInputRecursive3']
    OR: List['BatteryPUERentalWhereInputRecursive3']
    NOT: List['BatteryPUERentalWhereInputRecursive3']


class BatteryPUERentalWhereInputRecursive3(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntFilter']
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    battery_rental: 'RentalRelationFilter'
    pue_rental: 'PUERentalRelationFilter'

    # should be noted that AND and NOT should be Union['BatteryPUERentalWhereInputRecursive4', List['BatteryPUERentalWhereInputRecursive4']]
    # but this causes mypy to hang :/
    AND: List['BatteryPUERentalWhereInputRecursive4']
    OR: List['BatteryPUERentalWhereInputRecursive4']
    NOT: List['BatteryPUERentalWhereInputRecursive4']


class BatteryPUERentalWhereInputRecursive4(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntFilter']
    pue_rental_id: Union[_int, 'types.BigIntFilter']
    battery_rental: 'RentalRelationFilter'
    pue_rental: 'PUERentalRelationFilter'



# aggregate BatteryPUERental types


    

class BatteryPUERentalScalarWhereWithAggregatesInput(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive1']
    OR: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive1']
    NOT: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive1']


class BatteryPUERentalScalarWhereWithAggregatesInputRecursive1(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive2']
    OR: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive2']
    NOT: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive2']


class BatteryPUERentalScalarWhereWithAggregatesInputRecursive2(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive3']
    OR: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive3']
    NOT: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive3']


class BatteryPUERentalScalarWhereWithAggregatesInputRecursive3(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']

    AND: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive4']
    OR: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive4']
    NOT: List['BatteryPUERentalScalarWhereWithAggregatesInputRecursive4']


class BatteryPUERentalScalarWhereWithAggregatesInputRecursive4(TypedDict, total=False):
    """BatteryPUERental arguments for searching"""
    battery_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']
    pue_rental_id: Union[_int, 'types.BigIntWithAggregatesFilter']



class BatteryPUERentalGroupByOutput(TypedDict, total=False):
    battery_rental_id: _int
    pue_rental_id: _int
    _sum: 'BatteryPUERentalSumAggregateOutput'
    _avg: 'BatteryPUERentalAvgAggregateOutput'
    _min: 'BatteryPUERentalMinAggregateOutput'
    _max: 'BatteryPUERentalMaxAggregateOutput'
    _count: 'BatteryPUERentalCountAggregateOutput'


class BatteryPUERentalAvgAggregateOutput(TypedDict, total=False):
    """BatteryPUERental output for aggregating averages"""
    battery_rental_id: float
    pue_rental_id: float


class BatteryPUERentalSumAggregateOutput(TypedDict, total=False):
    """BatteryPUERental output for aggregating sums"""
    battery_rental_id: _int
    pue_rental_id: _int


class BatteryPUERentalScalarAggregateOutput(TypedDict, total=False):
    """BatteryPUERental output including scalar fields"""
    battery_rental_id: _int
    pue_rental_id: _int


BatteryPUERentalMinAggregateOutput = BatteryPUERentalScalarAggregateOutput
BatteryPUERentalMaxAggregateOutput = BatteryPUERentalScalarAggregateOutput


class BatteryPUERentalMaxAggregateInput(TypedDict, total=False):
    """BatteryPUERental input for aggregating by max"""
    battery_rental_id: bool
    pue_rental_id: bool


class BatteryPUERentalMinAggregateInput(TypedDict, total=False):
    """BatteryPUERental input for aggregating by min"""
    battery_rental_id: bool
    pue_rental_id: bool


class BatteryPUERentalNumberAggregateInput(TypedDict, total=False):
    """BatteryPUERental input for aggregating numbers"""
    battery_rental_id: bool
    pue_rental_id: bool


BatteryPUERentalAvgAggregateInput = BatteryPUERentalNumberAggregateInput
BatteryPUERentalSumAggregateInput = BatteryPUERentalNumberAggregateInput


BatteryPUERentalCountAggregateInput = TypedDict(
    'BatteryPUERentalCountAggregateInput',
    {
        'battery_rental_id': bool,
        'pue_rental_id': bool,
        '_all': bool,
    },
    total=False,
)

BatteryPUERentalCountAggregateOutput = TypedDict(
    'BatteryPUERentalCountAggregateOutput',
    {
        'battery_rental_id': int,
        'pue_rental_id': int,
        '_all': int,
    },
    total=False,
)


BatteryPUERentalKeys = Literal[
    'battery_rental_id',
    'pue_rental_id',
    'battery_rental',
    'pue_rental',
]
BatteryPUERentalScalarFieldKeys = Literal[
    'battery_rental_id',
    'pue_rental_id',
]
BatteryPUERentalScalarFieldKeysT = TypeVar('BatteryPUERentalScalarFieldKeysT', bound=BatteryPUERentalScalarFieldKeys)

BatteryPUERentalRelationalFieldKeys = Literal[
        'battery_rental',
        'pue_rental',
    ]



# we have to import ourselves as types can be namespaced to types
from . import types, enums, models, fields