"""add_user_hub_access_table

Revision ID: f264961a896f
Revises: 297139b1a08b
Create Date: 2025-07-10 09:39:37.678104

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f264961a896f'
down_revision: Union[str, Sequence[str], None] = '297139b1a08b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_hub_access',
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('hub_id', sa.BigInteger(), nullable=False),
    sa.Column('granted_at', sa.DateTime(), nullable=True),
    sa.Column('granted_by', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['granted_by'], ['user.user_id'], ),
    sa.ForeignKeyConstraint(['hub_id'], ['solarhub.hub_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_id', 'hub_id')
    )
    op.add_column('rental', sa.Column('battery_returned', sa.DateTime(timezone=True), nullable=True))
    op.add_column('rental', sa.Column('battery_return_condition', sa.String(length=50), nullable=True))
    op.add_column('rental', sa.Column('battery_return_notes', sa.Text(), nullable=True))
    op.add_column('rental', sa.Column('status', sa.String(length=20), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('rental', 'status')
    op.drop_column('rental', 'battery_return_notes')
    op.drop_column('rental', 'battery_return_condition')
    op.drop_column('rental', 'battery_returned')
    op.drop_table('user_hub_access')
    # ### end Alembic commands ###
